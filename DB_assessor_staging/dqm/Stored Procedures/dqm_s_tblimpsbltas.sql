

-- =====================================================================================
-- Author:	David Guillen
-- Create date: 2/25/2016
-- Description:	DQM stored procedure for s_tblimpsbltas
-- =====================================================================================
-- Modified 4/27/2016 by Richard Edwards to add accountno in s_tblacct check

/*
DQM RULES FOR:
TABLE:  tblimpsbltas


1.	Effective age has to be between 0 and 999.99

2.	Year is <= system year

3.	The combination of ACCOUNTNO, IMPNO, and DETAILID must be unique

4.  ACCOUNTNO must be in table s_tblacct - FK check

*/

CREATE PROCEDURE [dqm].[dqm_s_tblimpsbltas]
	
AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE()

	BEGIN

     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------


	INSERT INTO [dqm].[s_tblimpsbltas_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID)
			SELECT 
					'EFFECTIVEAGE',
					'FIELD MUST BE BETWEEN 0 AND 999',
					'EFFECTIVEAGE MUST BE BETWEEN 0 AND 999',
					--getdate(),
					@lv_RUNTIME,
					DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID
				FROM [asr_staging].[s_tblimpsbltas]
				WHERE effectiveage not between 0 and 999;

----------------------------------------------------------------------------------



	INSERT INTO [dqm].[s_tblimpsbltas_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID)
			SELECT 
					'BLTASYEARBUILT',
					'FIELD MUST BE LESS THAN OR EQUAL TO CURRENT YEAR ',
					'BLTASYEARBUILT MUST BE EQUAL OR LESS THAN CURRENT YEAR',
					--getdate(),
					@lv_RUNTIME,
					DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID
				FROM [asr_staging].[s_tblimpsbltas]
				WHERE bltasyearbuilt > year( getdate() );

----------------------------------------------------------------------------------

	WITH DUPE_VALUES AS (SELECT distinct ACCOUNTNO, IMPNO, DETAILID  FROM [asr_staging].[s_tblimpsbltas] GROUP BY ACCOUNTNO, IMPNO, DETAILID HAVING COUNT(*) > 1)
	
	INSERT INTO [dqm].[s_tblimpsbltas_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID)
			SELECT 
					'MULTIPLE COLUMN UNIQUE',
				'UNIQUE VALUES CHECK',
				'ACCOUNTNO, IMPNO, and DETAILID must be unique',
					@lv_RUNTIME,
					ib.DETAILID, VERSTART, VEREND, ib.ACCOUNTNO, ib.IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID
				FROM [asr_staging].[s_tblimpsbltas] ib
				INNER JOIN DUPE_VALUES DV 
				ON ib.ACCOUNTNO = DV.ACCOUNTNO
				and ib.IMPNO = DV.IMPNO
				and ib.DETAILID = DV.DETAILID;



----------------------------------------------------------------------------------

INSERT INTO [dqm].[s_tblimpsbltas_err] 
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID)
			SELECT 
					'ACCOUNTNO',
					'MUST EXIST IN TABLE S_TBLACCT - FK CHECK',
				    'ACCOUNTNO MUST EXIST IN TABLE S_TBLACCT - FK CHECK',
					--getdate(),
					@lv_RUNTIME,
					DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, IMPEXTERIOR, IMPINTERIOR, BLTASSTORIES, BLTASSTORYHEIGHT, ROOFTYPE, ROOFCOVER, FLOORCOVER, ROOMCOUNT, BEDROOMCOUNT, BLTASTOTALUNITCOUNT, IMPBLTASOTHER, CLASSCODE, BLTASHEIGHT, BLTASYEARBUILT, YEARREMODELED, REMODELEDPERCENT, EFFECTIVEAGE, BLTASLENGTH, BLTASWIDTH, MHTAGLENGTH, MHTAGWIDTH, BLTASSF, SPRINKLERSF, BATHCOUNT, PRIMARYBLTASORDERNO, JURISDICTIONID, HVACTYPE, WRITEDATE, SEQID, APEXID
				FROM [asr_staging].[s_tblimpsbltas]
				WHERE ACCOUNTNO NOT IN (SELECT DISTINCT ACCOUNTNO FROM asr_staging.s_tblacct)
	END	

END







