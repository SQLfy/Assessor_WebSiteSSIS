


-- =============================================================
-- Author:		    David Guillen
-- Create date: 	3/1/2016
-- Description:		DQM stored procedure for S_TBLSALE table
-- =============================================================
-- Modified by R. Edwards 5/12/2016 to use CTE to exclude non-sale rows
-- Modified by D. Guillen 2/24/2020 to use GETDATE()+1 for checks on DOCUMENTDATE and SALEDATE

/*
DQM RULES FOR:
TABLE:  S_TBLSALE

1.	GRANTOR – cannot be NULL

3.  GRANTEE - cannot be NULL

4	SALEPRICE – must be gt or = to zero

4	RECEPTIONNO – must be 10 or less charaters

5.  DOCUMENTDATE - must be a valid date in sql server

6.  SALEDATE - must be a valid date in sql server

*/

CREATE PROCEDURE [dqm].[dqm_s_tblsale]
	

AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE();

	  BEGIN
	  
     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------
	-- GRANTOR – cannot be NULL DQM check
	WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
	INSERT INTO [dqm].[s_tblsale_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE, PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'GRANTOR',
				'FIELD CANNOT BE NULL',
				'GRANTOR CANNOT BE NULL',
				@lv_RUNTIME,
			        VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE,
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ, 
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			WHERE GRANTOR IS NULL
			OR GRANTOR = '';

--------------------------------------------------------------------------------

	-- GRANTEE – cannot be NULL DQM check
	WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
	INSERT INTO [dqm].[s_tblsale_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE,PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'GRANTEE',
				'FIELD CANNOT BE NULL',
				'GRANTEE CANNOT BE NULL',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE,
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ, 
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			WHERE GRANTEE IS NULL
			OR GRANTEE = '';

------------------------------------------------------------------------------

	-- SALEPRICE – must be gt or = to zero
	    WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
		INSERT INTO [dqm].[s_tblsale_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE, PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'SALEPRICE',
				'FIELD DOES NOT ALLOW NEGATIVE NUMBER',
				'SALEPRICE MUST BE GREATER THAN OR EQUAL TO ZERO',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE, 
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ,
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			WHERE SALEPRICE < 0;


--------------------------------------------------------------------------------

	-- RECEPTIONNO – must be 10 or less charaters
	    WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
		INSERT INTO [dqm].[s_tblsale_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE,PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'RECEPTIONNO',
				'FIELD LENGTH RESTRICTION',
				'RECEPTIONNO MUST BE 10 CHARACTERS OR LESS',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE, 
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ,
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			WHERE LEN(RECEPTIONNO) > 10;


--------------------------------------------------------------------------------

	-- DOCUMENTDATE must be a valid date
	    WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
		INSERT INTO [dqm].[s_tblsale_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE, PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'DOCUMENTDATE',
				'MUST BE A VALID DATE',
				'DOCUMENT DATE MUST BE A VALID SQL SERVER DATE',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE, 
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ,
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			 WHERE DOCUMENTDATE IS NOT NULL
			 AND CAST(DOCUMENTDATE AS DATE) NOT BETWEEN '1850-01-01' AND GETDATE() +1;

--------------------------------------------------------------------------------

-- SALEDATE must be a valid date
        WITH VALID_SALES AS (SELECT * FROM [asr_staging].[s_tblsale] WHERE NONSALEFLAG = 0)
		INSERT INTO [dqm].[s_tblsale_err]
		(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, RECEPTIONNO, BOOK, PAGE, GRANTOR, GRANTEE, DOCUMENTDATE, SALEDATE, DEEDCODE, SALEPRICE,PPADJAMOUNT, GOODWILLADJAMOUNT, OTHERADJAMOUNT, TIMEADJ, NONSALEFLAG, JURISDICTIONID, WRITEDATE, SEQID)
	    SELECT 
				'SALEDATE',
				'MUST BE A VALID DATE',
				'SALE DATE MUST BE A VALID SQL SERVER DATE',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				RECEPTIONNO, 
				BOOK, 
				PAGE, 
				GRANTOR, 
				GRANTEE, 
				DOCUMENTDATE, 
				SALEDATE, 
				DEEDCODE, 
				SALEPRICE, 
				PPADJAMOUNT, 
				GOODWILLADJAMOUNT, 
				OTHERADJAMOUNT, 
				TIMEADJ,
				NONSALEFLAG, 
				JURISDICTIONID, 
				WRITEDATE, 
				SEQID
			FROM VALID_SALES
			WHERE SALEDATE IS NOT NULL
			AND CAST(SALEDATE AS DATE) NOT BETWEEN '1850-01-01' AND GETDATE() +1;

--------------------------------------------------------------------------------

            END

	END


