



-- =================================================================
-- Author:		David Guillen
-- Create date: 1/22/2016
-- Description:	DQM stored procedure for s_tblacctowneraddress table
-- =================================================================


/*
DQM RULES FOR:
TABLE:  tblacctowneraddress

1.	PRIMARYOWNERFLAG must be 0 or -1 or 1

2.	ACCOUNTNO must exist in the account table			

3.	PERSONCODE must exist in the person table lookup

4.	ADDRESSCODE must exist in the address table


*/

CREATE PROCEDURE [dqm].[dqm_s_tblacctowneraddress]
	
AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE()

	BEGIN

     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------

	-- PRIMARYOWNERFLAG must be 0 or -1 or 1
	
	INSERT INTO [dqm].[s_tblacctowneraddress_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE)
	    SELECT 
				'PRIMARYOWNERFLAG',
				'VALUE MUST BE -1 or 0 or 1',
				'PRIMARYOWNERFLAG must be -1, 0, or 1',
				--getdate(),
				@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE
			FROM [asr_staging].[s_tblacctowneraddress]
			WHERE primaryownerflag not in(-1,0,1)



----------------------------------------------------------------------------------

	-- ACCOUNTNO must exist in the account table

	
	INSERT INTO [dqm].[s_tblacctowneraddress_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE)
	    SELECT 
				'ACCOUNTNO',
				'FOREIGN KEY CHECK',
				'ACCOUNTNO MUST BE IN s_tblacct',
				getdate(),
				--@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE
			FROM [asr_staging].[s_tblacctowneraddress] addr
			WHERE not exists
			(SELECT 1 FROM [asr_staging].[s_tblacct] a 
			 WHERE a.ACCOUNTNO = addr.ACCOUNTNO)


----------------------------------------------------------------------------------

	-- PERSONCODE must exist in the person table lookup

	INSERT INTO [dqm].[s_tblacctowneraddress_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE)
	    SELECT 
				'PERSONCODE',
				'FOREIGN KEY CHECK',
				'PERSONCODE MUST BE IN s_tblacctowneraddress',
				getdate(),
				--@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE
			FROM [asr_staging].[s_tblacctowneraddress] addr
			WHERE not exists
			(SELECT 1 FROM [asr_staging].[s_tblpersonsecure] p 
			 WHERE p.PERSONCODE = addr.PERSONCODE)


--------------------------------------------------------------------------------

	-- ADDRESSCODE must exist in the address table

	INSERT INTO [dqm].[s_tblacctowneraddress_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE)
	    SELECT 
				'ADDRESSCODE',
				'FOREIGN KEY CHECK',
				'ADDRESSCODE MUST BE IN s_tbladdresssecure',
				getdate(),
				--@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, PERSONCODE, ADDRESSCODE, PRIMARYOWNERFLAG, ACCTOWNERADDRESSON0, ACCTOWNERADDRESSON1, ACCTOWNERADDRESSON2, ACCTOWNERADDRESSOD0, ACCTOWNERADDRESSOD1, ACCTOWNERADDRESSOM0, ACCTOWNERADDRESSOM1, ACCTOWNERADDRESSOT0, ACCTOWNERADDRESSOT1, JURISDICTIONID, OWNERPERCENT, WRITEDATE, SEQID, OWNERSHIPTYPE
			FROM [asr_staging].[s_tblacctowneraddress] addr
			WHERE not exists
			(SELECT 1 FROM [asr_staging].[s_tbladdresssecure] a
			 WHERE a.ADDRESSCODE = addr.ADDRESSCODE)
			-- AND primaryownerflag = 1


--------------------------------------------------------------------------------


	END 

END




