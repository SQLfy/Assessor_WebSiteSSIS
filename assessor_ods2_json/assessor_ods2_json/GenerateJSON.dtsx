<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/18/2017 6:51:02 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DVASSRETL"
  DTS:CreatorName="DCGD\agolden"
  DTS:DTSID="{5D9615F8-BF0F-4AF6-AB0A-87870DB796D3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="GenerateJSON"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="72"
  DTS:VersionGUID="{D2C4DCB1-3D03-4F22-AA7B-5B7414947CE0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07633DC6-6C6D-4C9B-9069-60604300E4FD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BATCH_ERRORS">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{379F956D-F9E6-4AFE-ACF6-613FE0E15618}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BATCH_ID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9CAA8A0C-C7C9-4C58-BFA0-1645EC0AC9E3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BATCH_NAME">
      <DTS:VariableValue
        DTS:DataType="8">Generate JSON for AWR</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2BED0752-64DE-42E0-8260-47B3A319067E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ssislogging_servername]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="v_ssisloggin_servername">
      <DTS:VariableValue
        DTS:DataType="8">DVDCETL-MST01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09432231-A35C-4F97-A6E4-604265FA2BEC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::staging_servername]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="v_staging_servername">
      <DTS:VariableValue
        DTS:DataType="8">DVDCETL-SQL01</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Generate JSON"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{9D134874-A541-4881-9DEF-C3889DA96622}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate JSON"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_da6013b379ec4da093f3c69015789306"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::AssessorJsonShouldRun,$Project::AssessorJsonDataFolder,$Project::AssessorNOVYears,$Project::AssessorNODYears,$Project::AssessorRunDetails,$Project::AssessorDetailYears">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e27d392074547ab8f15690b132fbfe3.Properties.Settings.get_Default():ST_4e27d392074547ab8f15690b132fbfe3.Properties.Sett" +
    "ings")]

namespace ST_4e27d392074547ab8f15690b132fbfe3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using AssessorJson;
#endregion

namespace ST_4e27d392074547ab8f15690b132fbfe3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class. 
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            bool fireAgain = true;
            //string shouldRun = Environment.GetEnvironmentVariable("AssessorJsonShouldRun");
            string shouldRun = (string)Dts.Variables["$Project::AssessorJsonShouldRun"].Value;
            if (String.Equals(shouldRun, "true", StringComparison.OrdinalIgnoreCase))
            {
                try
                {
                    string dtsConnectionString = Dts.Connections["asr_app"].ConnectionString;
                    Dts.Events.FireInformation(100, "Dts.Connections[asr_app]", dtsConnectionString, String.Empty, 0, ref fireAgain);
                    //string jsonDataFolder = Environment.GetEnvironmentVariable("AssessorJsonDataFolder");
                    string jsonDataFolder = (string)Dts.Variables["$Project::AssessorJsonDataFolder"].Value;
										string runDetails = (string)Dts.Variables["$Project::AssessorRunDetails"].Value;
										string detailYear = (string)Dts.Variables["$Project::AssessorDetailYears"].Value;
										string novYears = (string)Dts.Variables["$Project::AssessorNOVYears"].Value;
										string nodYears = (string)Dts.Variables["$Project::AssessorNODYears"].Value;
										if (String.IsNullOrEmpty(jsonDataFolder))
                    {
                        throw new System.ArgumentException("Failed to find environment variable: 'AssessorJsonDataFolder'; aborting execution.");
                    }
                    Dts.Events.FireInformation(101, "Assessor JSON Conversion Script Task", "Beginning JSON conversion.", String.Empty, 0, ref fireAgain);
                    FullPropertyDetailsConverter converter = new FullPropertyDetailsConverter(dtsConnectionString, jsonDataFolder, detailYear, novYears, nodYears, runDetails);
                    converter.convertAll();
                    Dts.Events.FireInformation(102, "Assessor JSON Conversion Script Task", "Completed JSON comversion.", String.Empty, 0, ref fireAgain);
                    Dts.TaskResult = (int)DTSExecResult.Success;
                }
                catch (Exception e)
                {
                    Dts.Events.FireError(-1, "Assessor JSON Conversion Script Task", "Exception caught during conversion: " + e.Message, String.Empty, 0);
                    Dts.TaskResult = (int)DTSExecResult.Failure;
                }
            }
            else
            {
                Dts.Events.FireInformation(100, "Assessor JSON Conversion Script Task",
                    "Did not find environment variable 'AssessorJsonShouldRun' with value set to 'true'; skipping execution.", String.Empty, 0, ref fireAgain);
                Dts.TaskResult = (int)DTSExecResult.Canceled;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_da6013b379ec4da093f3c69015789306</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_da6013b379ec4da093f3c69015789306</msb:DisplayName>
    <msb:ProjectId>{4D8A42BB-8395-4BBB-9910-26C73B2653FA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_da6013b379ec4da093f3c69015789306.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4e27d392074547ab8f15690b132fbfe3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4e27d392074547ab8f15690b132fbfe3")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_da6013b379ec4da093f3c69015789306.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DFE4BAF0-F77A-4BEE-AB1A-971D05B05A1F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4e27d392074547ab8f15690b132fbfe3</RootNamespace>
    <AssemblyName>ST_da6013b379ec4da093f3c69015789306</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="AssessorJson, Version=1.0.8777.28958, Culture=neutral, PublicKeyToken=b4d68b45b849eaad, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Windows\Microsoft.NET\assembly\GAC_MSIL\AssessorJson\v4.0_1.0.8777.28958__b4d68b45b849eaad\AssessorJson.exe</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e27d392074547ab8f15690b132fbfe3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e27d392074547ab8f15690b132fbfe3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e27d392074547ab8f15690b132fbfe3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4e27d392074547ab8f15690b132fbfe3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4e27d392074547ab8f15690b132fbfe3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_da6013b379ec4da093f3c69015789306.dll">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
AAAAAIMY+QQGAAEAkCIAAAAAkwiYBNMAAQC8IgAAAACTCPgA2AABAMMiAAAAAJMIBAHdAAEAyyIA
AAAAlggwBuMAAgDSIgAAAACGGPkEBgACANoiAAAAAJEY/wToAAIAAAABAAwDCQD5BAEAEQD5BAYA
GQD5BAoAKQD5BBAAMQD5BBAAOQD5BBAAQQD5BBAASQD5BBAAUQD5BBAAWQD5BBAAYQD5BBAAaQD5
BAYAiQD5BAYAsQD5BBUAwQD5BAYAcQABBicAyQDLBSwA0QDkAzEA2QACAzcA4QDiBTsAyQDpBUMA
8QDkA0gA+QAsA04AyQAXBlIA4QBgBlgAAQEQBFsA4QBYBmYACQH5BBAAEQH5BGsAEQGxA04AyQA8
BgEAeQCSAE4A4QAiBnUAAQHvBHsAcQD5BAYAkQD5BAYAGQG5AIQAGQFLBo0AmQD5BJMAuQD5BAYA
CAAUALYACAAYALsAKQBzACMBLgALAPsALgATAAQBLgAbACMBLgAjACwBLgArAFUBLgAzAFUBLgA7
AFUBLgBDACwBLgBLAFsBLgBTAFUBLgBbAHIBQwBjALsASQBzACMBYQB7ALsAYwBrALsAGwADAAEA
BAADAAAAnATsAAAAGAHxAAAANAb2AAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAACCNE
bwAAAAAAACUAAAAEAAAAAAAAAAAAAACbAHkAAAAAAA8AAAAAAAAAAAAAAKQAQQMAAAAABAAAAAAA
AAAAAAAAmwDtAwAAAAAPAAAAAAAAAAAAAACkAFIAAAAAAAEAAAAII2ptAAAAAK0AbgQAAAAAAAAA
AAEAAABKBQAABQACAAAAAAAAU1RfNGUyN2QzOTIwNzQ1NDdhYjhmMTU2OTBiMTMyZmJmZTMAU1Rf
ZGE2MDEzYjM3OWVjNGRhMDkzZjNjNjkwMTU3ODkzMDYAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNz
YWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABjb252ZXJ0
QWxsAFNUX2RhNjAxM2IzNzllYzRkYTA5M2YzYzY5MDE1Nzg5MzA2LmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBBcmd1bWVu
dEV4Y2VwdGlvbgBBc3Nlc3Nvckpzb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBnZXRf
UmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rpb25NYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARnVs
bFByb3BlcnR5RGV0YWlsc0NvbnZlcnRlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU1RfNGUyN2QzOTIwNzQ1NDdhYjhmMTU2OTBiMTMyZmJmZTMuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzRlMjdkMzkyMDc0NTQ3YWI4ZjE1NjkwYjEz
MmZiZmUzLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBFcXVhbHMAZ2V0X0Nvbm5l
Y3Rpb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAQ29uY2F0AE9i
amVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQXNzZW1ibHkASXNOdWxsT3JFbXB0
eQAAAAA/JABQAHIAbwBqAGUAYwB0ADoAOgBBAHMAcwBlAHMAcwBvAHIASgBzAG8AbgBTAGgAbwB1
AGwAZABSAHUAbgAACXQAcgB1AGUAAA9hAHMAcgBfAGEAcABwAAAxRAB0AHMALgBDAG8AbgBuAGUA
YwB0AGkAbwBuAHMAWwBhAHMAcgBfAGEAcABwAF0AAEEkAFAAcgBvAGoAZQBjAHQAOgA6AEEAcwBz
AGUAcwBzAG8AcgBKAHMAbwBuAEQAYQB0AGEARgBvAGwAZABlAHIAADkkAFAAcgBvAGoAZQBjAHQA
OgA6AEEAcwBzAGUAcwBzAG8AcgBSAHUAbgBEAGUAdABhAGkAbABzAAA7JABQAHIAbwBqAGUAYwB0
ADoAOgBBAHMAcwBlAHMAcwBvAHIARABlAHQAYQBpAGwAWQBlAGEAcgBzAAA1JABQAHIAbwBqAGUA
YwB0ADoAOgBBAHMAcwBlAHMAcwBvAHIATgBPAFYAWQBlAGEAcgBzAAA1JABQAHIAbwBqAGUAYwB0
ADoAOgBBAHMAcwBlAHMAcwBvAHIATgBPAEQAWQBlAGEAcgBzAACApUYAYQBpAGwAZQBkACAAdABv
ACAAZgBpAG4AZAAgAGUAbgB2AGkAcgBvAG4AbQBlAG4AdAAgAHYAYQByAGkAYQBiAGwAZQA6ACAA
JwBBAHMAcwBlAHMAcwBvAHIASgBzAG8AbgBEAGEAdABhAEYAbwBsAGQAZQByACcAOwAgAGEAYgBv
AHIAdABpAG4AZwAgAGUAeABlAGMAdQB0AGkAbwBuAC4AAUlBAHMAcwBlAHMAcwBvAHIAIABKAFMA
TwBOACAAQwBvAG4AdgBlAHIAcwBpAG8AbgAgAFMAYwByAGkAcAB0ACAAVABhAHMAawAANUIAZQBn
AGkAbgBuAGkAbgBnACAASgBTAE8ATgAgAGMAbwBuAHYAZQByAHMAaQBvAG4ALgAANUMAbwBtAHAA
bABlAHQAZQBkACAASgBTAE8ATgAgAGMAbwBtAHYAZQByAHMAaQBvAG4ALgAASUUAeABjAGUAcAB0
AGkAbwBuACAAYwBhAHUAZwBoAHQAIABkAHUAcgBpAG4AZwAgAGMAbwBuAHYAZQByAHMAaQBvAG4A
OgAgAACAz0QAaQBkACAAbgBvAHQAIABmAGkAbgBkACAAZQBuAHYAaQByAG8AbgBtAGUAbgB0ACAA
dgBhAHIAaQBhAGIAbABlACAAJwBBAHMAcwBlAHMAcwBvAHIASgBzAG8AbgBTAGgAbwB1AGwAZABS
AHUAbgAnACAAdwBpAHQAaAAgAHYAYQBsAHUAZQAgAHMAZQB0ACAAdABvACAAJwB0AHIAdQBlACcA
OwAgAHMAawBpAHAAcABpAG4AZwAgAGUAeABlAGMAdQB0AGkAbwBuAC4AAXFTAFQAXwA0AGUAMgA3
AGQAMwA5ADIAMAA3ADQANQA0ADcAYQBiADgAZgAxADUANgA5ADAAYgAxADMAMgBmAGIAZgBlADMA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAswTNufF7BT7LWMUxz
pnByAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVCwcIAg4ODg4ODhI9BCAAEmUEIAASaQUgARJt
HAMgABwHAAMCDg4RdQQgABJ5BSABEn0cAyAADgUgABKAgQIGDgogBgEIDg4OCBACBAABAg4JIAYB
Dg4ODg4OBQACDg4OCCAFAggODg4ICAABEoCNEYCRBSAAEoCVByACAQ4SgJUIt3pcVhk04IkIiYRd
zYCAzJEItNaLRbhJ6q0EAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEB
ElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRlMjdkMzkyMDc0NTQ3YWI4ZjE1NjkwYjEzMmZiZmUz
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAFQ1AAAAAAAAAAAAAG41AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgNQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBEbwgjAAABAERvCCM/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADQAZQAyADcAZAAzADkAMgAwADcANAA1ADQANwBhAGIAOABmADEANQA2ADkAMABiADEA
MwAyAGYAYgBmAGUAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADkANgA4AC4AMgA4ADQAOAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGQAYQA2ADAAMQAzAGIAMwA3ADkAZQBjADQAZABhADAAOQAzAGYAMwBjADYAOQAwADEANQA3
ADgAOQAzADAANgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AZABhADYAMAAxADMAYgAzADcAOQBlAGMANABkAGEAMAA5ADMAZgAzAGMANgA5
ADAAMQA1ADcAOAA5ADMAMAA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADQAZQAyADcAZAAzADkAMgAwADcANAA1ADQANwBhAGIAOABmADEANQA2ADkAMABi
ADEAMwAyAGYAYgBmAGUAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA5ADYAOAAuADIAOAA0ADgANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA5ADYAOAAuADIAOAA0ADgANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACANQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnPostExecute]"
      DTS:CreationName="OnPostExecute"
      DTS:DTSID="{B61149C2-1FD9-4E24-8425-3340D867561D}"
      DTS:EventID="0"
      DTS:EventName="OnPostExecute"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{ED904716-C057-4DD5-89FF-AEB66830D5E5}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Failure Send Mail Task"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{04E7B46A-F52B-458D-937E-E737C90F44A2}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Failure Send Mail Task"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[$Project::email_from_line]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="Subject">@[$Project::email_subject_failure] + "-  for JSON FILE GENERATION"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[$Project::email_to_line]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{AD4BB6BF-7705-409A-98FD-D9A87B55F18F}"
              SendMailTask:From="etl_user@uaassretl.douglas.co.us"
              SendMailTask:To="ktotten@douglas.co.us"
              SendMailTask:Subject="ETL for ASR_ODS2 Failed on xxDCETL-MST01-  for JSON FILE GENERATION" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Log Post Execute"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{99409CE2-FC13-4DF5-831A-CED221C9BC91}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log Post Execute"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="SqlStatementSource">"insert into ssislogging 
(EventType, PackageName, TaskName, EventCode, EventDescription,PackageDuration, ContainerDuration,logDate,BatchID) 
values 
(
'PostExecute',
'" + @[System::PackageName]  +"'"+",
'"  +  @[System::SourceName] + "'"+",
0,
''"  +",
"+(DT_STR, 6, 1252)DATEDIFF("ss", @[System::StartTime], GETDATE()) + ",
"+(DT_STR, 6, 1252)DATEDIFF("ss", @[System::ContainerStartTime], GETDATE()) +  ""+ ",
getdate()"+",
" + (DT_STR, 50, 1252) @[User::BATCH_ID] + "
)"</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{F1E65DEB-4930-48B1-B308-76E24C45832E}"
              SQLTask:SqlStatementSource="insert into ssislogging &#xA;(EventType, PackageName, TaskName, EventCode, EventDescription,PackageDuration, ContainerDuration,logDate,BatchID) &#xA;values &#xA;(&#xA;'PostExecute',&#xA;'GenerateJSON',&#xA;'',&#xA;0,&#xA;'',&#xA;1745,&#xA;1745,&#xA;getdate(),&#xA;0&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnPostExecute]\Success Send Mail Task"
          DTS:CreationName="Microsoft.SendMailTask"
          DTS:Description="Send Mail Task"
          DTS:DTSID="{EBE0F398-00CA-4B4C-B7E5-96F7CBE3CCBD}"
          DTS:ExecutableType="Microsoft.SendMailTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Success Send Mail Task"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="FromLine">@[$Project::email_from_line]</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="Subject">@[$Project::email_subject_success] + " - for JSON FILE GENERATION"</DTS:PropertyExpression>
          <DTS:PropertyExpression
            DTS:Name="ToLine">@[$Project::email_to_line]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{AD4BB6BF-7705-409A-98FD-D9A87B55F18F}"
              SendMailTask:From="etl_user@uaassretl.douglas.co.us"
              SendMailTask:To="ktotten@douglas.co.us"
              SendMailTask:Subject="ETL for ASR_ODS2 Completed Successfully on xxDCETL-MST01 - for JSON FILE GENERATION" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{8E7AC755-381B-4958-B771-07245068D3A5}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceName]== @[System::PackageName] &amp;&amp; @[User::BATCH_ERRORS]&gt;0"
          DTS:From="Package.EventHandlers[OnPostExecute]\Log Post Execute"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnPostExecute]\Failure Send Mail Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{868C4802-A5D1-47A3-B6AE-57415C248481}"
          DTS:EvalOp="1"
          DTS:Expression="@[System::SourceName]== @[System::PackageName] &amp;&amp; @[User::BATCH_ERRORS]==0"
          DTS:From="Package.EventHandlers[OnPostExecute]\Log Post Execute"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package.EventHandlers[OnPostExecute]\Success Send Mail Task" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Generate JSON"
          TopLeft="142,50" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnPostExecute]">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="184,42"
          Id="Package.EventHandlers[OnPostExecute]\Failure Send Mail Task"
          TopLeft="660,85" />
        <NodeLayout
          Size="160,42"
          Id="Package.EventHandlers[OnPostExecute]\Log Post Execute"
          TopLeft="380,52" />
        <NodeLayout
          Size="190,42"
          Id="Package.EventHandlers[OnPostExecute]\Success Send Mail Task"
          TopLeft="75,111" />
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint]"
          TopLeft="540,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120,33"
              Start="0,0"
              End="112.5,33">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="56,0" />
                  <mssgle:CubicBezierSegment
                    Point1="56,0"
                    Point2="60,0"
                    Point3="60,4" />
                  <mssgle:LineSegment
                    End="60,29" />
                  <mssgle:CubicBezierSegment
                    Point1="60,29"
                    Point2="60,33"
                    Point3="64,33" />
                  <mssgle:LineSegment
                    End="112.5,33" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="52,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.EventHandlers[OnPostExecute].PrecedenceConstraints[Constraint 1]"
          TopLeft="380,73">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-115,59"
              Start="0,0"
              End="-107.5,59">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.5,0"
                    Point2="-57.5,0"
                    Point3="-57.5,4" />
                  <mssgle:LineSegment
                    End="-57.5,55" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.5,55"
                    Point2="-57.5,59"
                    Point3="-61.5,59" />
                  <mssgle:LineSegment
                    End="-107.5,59" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-65.5,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>