




-- =====================================================================================
-- Author:		David Guillen
-- Create date: 9/18/2014
-- Description:	DQM stored procedure for S_TBLIMPSBLTASVALUE table in Realware_ODS
-- =====================================================================================


/*
DQM RULES FOR:
TABLE:  S_TBLIMPSBLTASVALUE

1.		ACCOUNTNO must be in table s_tblimps - FK Check

2.		IMPNO must be in table s_tblimps - FK Check

3.		PHYSICALAGE must be < 0

*/

CREATE PROCEDURE [dqm].[dqm_s_tblimpsbltasvalue]
	

AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE()

	  BEGIN
	

     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------


	-- ACCOUNTNO must be in table s_tblimps - FK Check -- DQM check

INSERT INTO [asr_staging].[s_tblimpsbltasvalue_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, BLTASDETAILID, ADJUSTEDYEARBUILT, PHYSICALAGE, LIFEEXPECTANCY, COSTBASEVALUEPER, COSTSPRINKLERVALUEPERSF, COSTENERGYADJVALUEPERSF, COSTHVACADJVALUE, COSTROOFCOVERADJVALUE, COSTMHFOUNDATIONADJVALUE, COSTINTERIORADJVALUE, COSTFLOORCOVERADJVALUE, COSTMHSKIRTVALUE, COSTMHTAGMULTIPLIER, COSTSTORYHEIGHTMULTIPLIER, COSTSTORIESMULTIPLIER, COSTPERIMUNITMULTIPLIER, numeric, COSTMULTIPLIER, COSTLOCALMULTIPLIER, COSTCOMPARATIVEMULTIPLIER, COSTIMPSBLTASVERSTART, MARKETIMPSBLTASVERSTART, INCOMEIMPSBLTASVERSTART, JURISDICTIONID, IMPSBLTASVALUEOT0, IMPSBLTASVALUEOT1, IMPSBLTASVALUEOM0, IMPSBLTASVALUEOM1, IMPSBLTASVALUEOD0, IMPSBLTASVALUEOD1, IMPSBLTASVALUEON0, IMPSBLTASVALUEON1, IMPSBLTASVALUEON2, WRITEDATE, SEQID, ADJUSTEDCOSTACTUALVALUE, BLTASCOSTRCNLD)
	    SELECT 
				'ACCOUNTNO',
				'FK CHECK',
				'ACCOUNTNO MUST EXIST IN TABLE S_TBLIMPS - FK CHECK',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				BLTASCODE, 
				BLTASDETAILID, 
				ADJUSTEDYEARBUILT, 
				PHYSICALAGE, 
				LIFEEXPECTANCY, 
				COSTBASEVALUEPER, 
				COSTSPRINKLERVALUEPERSF, 
				COSTENERGYADJVALUEPERSF, 
				COSTHVACADJVALUE, 
				COSTROOFCOVERADJVALUE, 
				COSTMHFOUNDATIONADJVALUE, 
				COSTINTERIORADJVALUE, 
				COSTFLOORCOVERADJVALUE, 
				COSTMHSKIRTVALUE, 
				COSTMHTAGMULTIPLIER, 
				COSTSTORYHEIGHTMULTIPLIER, 
				COSTSTORIESMULTIPLIER, 
				COSTPERIMUNITMULTIPLIER, 
				numeric, 
				COSTMULTIPLIER, 
				COSTLOCALMULTIPLIER, 
				COSTCOMPARATIVEMULTIPLIER, 
				COSTIMPSBLTASVERSTART, 
				MARKETIMPSBLTASVERSTART, 
				INCOMEIMPSBLTASVERSTART, 
				JURISDICTIONID, 
				IMPSBLTASVALUEOT0, 
				IMPSBLTASVALUEOT1, 
				IMPSBLTASVALUEOM0, 
				IMPSBLTASVALUEOM1, 
				IMPSBLTASVALUEOD0, 
				IMPSBLTASVALUEOD1, 
				IMPSBLTASVALUEON0, 
				IMPSBLTASVALUEON1, 
				IMPSBLTASVALUEON2, 
				WRITEDATE, 
				SEQID, 
				ADJUSTEDCOSTACTUALVALUE, 
				BLTASCOSTRCNLD
			FROM [asr_staging].[s_tblimpsbltasvalue]
			WHERE ACCOUNTNO not in (select distinct ACCOUNTNO from asr_staging.s_tblimps)


--------------------------------------------------------------------------------

	-- IMPNO must be in table s_tblimps - FK Check -- DQM check

INSERT INTO [asr_staging].[s_tblimpsbltasvalue_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, BLTASDETAILID, ADJUSTEDYEARBUILT, PHYSICALAGE, LIFEEXPECTANCY, COSTBASEVALUEPER, COSTSPRINKLERVALUEPERSF, COSTENERGYADJVALUEPERSF, COSTHVACADJVALUE, COSTROOFCOVERADJVALUE, COSTMHFOUNDATIONADJVALUE, COSTINTERIORADJVALUE, COSTFLOORCOVERADJVALUE, COSTMHSKIRTVALUE, COSTMHTAGMULTIPLIER, COSTSTORYHEIGHTMULTIPLIER, COSTSTORIESMULTIPLIER, COSTPERIMUNITMULTIPLIER, numeric, COSTMULTIPLIER, COSTLOCALMULTIPLIER, COSTCOMPARATIVEMULTIPLIER, COSTIMPSBLTASVERSTART, MARKETIMPSBLTASVERSTART, INCOMEIMPSBLTASVERSTART, JURISDICTIONID, IMPSBLTASVALUEOT0, IMPSBLTASVALUEOT1, IMPSBLTASVALUEOM0, IMPSBLTASVALUEOM1, IMPSBLTASVALUEOD0, IMPSBLTASVALUEOD1, IMPSBLTASVALUEON0, IMPSBLTASVALUEON1, IMPSBLTASVALUEON2, WRITEDATE, SEQID, ADJUSTEDCOSTACTUALVALUE, BLTASCOSTRCNLD)
	    SELECT 
				'IMPNO',
				'FK CHECK',
				'IMPNO MUST EXIST IN TABLE S_TBLIMPS - FK CHECK',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				BLTASCODE, 
				BLTASDETAILID, 
				ADJUSTEDYEARBUILT, 
				PHYSICALAGE, 
				LIFEEXPECTANCY, 
				COSTBASEVALUEPER, 
				COSTSPRINKLERVALUEPERSF, 
				COSTENERGYADJVALUEPERSF, 
				COSTHVACADJVALUE, 
				COSTROOFCOVERADJVALUE, 
				COSTMHFOUNDATIONADJVALUE, 
				COSTINTERIORADJVALUE, 
				COSTFLOORCOVERADJVALUE, 
				COSTMHSKIRTVALUE, 
				COSTMHTAGMULTIPLIER, 
				COSTSTORYHEIGHTMULTIPLIER, 
				COSTSTORIESMULTIPLIER, 
				COSTPERIMUNITMULTIPLIER, 
				numeric, 
				COSTMULTIPLIER, 
				COSTLOCALMULTIPLIER, 
				COSTCOMPARATIVEMULTIPLIER, 
				COSTIMPSBLTASVERSTART, 
				MARKETIMPSBLTASVERSTART, 
				INCOMEIMPSBLTASVERSTART, 
				JURISDICTIONID, 
				IMPSBLTASVALUEOT0, 
				IMPSBLTASVALUEOT1, 
				IMPSBLTASVALUEOM0, 
				IMPSBLTASVALUEOM1, 
				IMPSBLTASVALUEOD0, 
				IMPSBLTASVALUEOD1, 
				IMPSBLTASVALUEON0, 
				IMPSBLTASVALUEON1, 
				IMPSBLTASVALUEON2, 
				WRITEDATE, 
				SEQID, 
				ADJUSTEDCOSTACTUALVALUE, 
				BLTASCOSTRCNLD
			FROM [asr_staging].[s_tblimpsbltasvalue]
			WHERE IMPNO not in (select distinct IMPNO from [asr_staging].s_tblimps)

--------------------------------------------------------------------------------

	-- PHYSICALAGE must be a positive number

	INSERT INTO [asr_staging].[s_tblimpsbltasvalue_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPNO, BLTASCODE, BLTASDETAILID, ADJUSTEDYEARBUILT, PHYSICALAGE, LIFEEXPECTANCY, COSTBASEVALUEPER, COSTSPRINKLERVALUEPERSF, COSTENERGYADJVALUEPERSF, COSTHVACADJVALUE, COSTROOFCOVERADJVALUE, COSTMHFOUNDATIONADJVALUE, COSTINTERIORADJVALUE, COSTFLOORCOVERADJVALUE, COSTMHSKIRTVALUE, COSTMHTAGMULTIPLIER, COSTSTORYHEIGHTMULTIPLIER, COSTSTORIESMULTIPLIER, COSTPERIMUNITMULTIPLIER, numeric, COSTMULTIPLIER, COSTLOCALMULTIPLIER, COSTCOMPARATIVEMULTIPLIER, COSTIMPSBLTASVERSTART, MARKETIMPSBLTASVERSTART, INCOMEIMPSBLTASVERSTART, JURISDICTIONID, IMPSBLTASVALUEOT0, IMPSBLTASVALUEOT1, IMPSBLTASVALUEOM0, IMPSBLTASVALUEOM1, IMPSBLTASVALUEOD0, IMPSBLTASVALUEOD1, IMPSBLTASVALUEON0, IMPSBLTASVALUEON1, IMPSBLTASVALUEON2, WRITEDATE, SEQID, ADJUSTEDCOSTACTUALVALUE, BLTASCOSTRCNLD)
	    SELECT 
				'PHYSICALAGE',
				'CHECK CONSTRAINT',
				'PHYSICALAGE MUST BE POSITIVE NUMBER',
				@lv_RUNTIME,
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				BLTASCODE, 
				BLTASDETAILID, 
				ADJUSTEDYEARBUILT, 
				PHYSICALAGE, 
				LIFEEXPECTANCY, 
				COSTBASEVALUEPER, 
				COSTSPRINKLERVALUEPERSF, 
				COSTENERGYADJVALUEPERSF, 
				COSTHVACADJVALUE, 
				COSTROOFCOVERADJVALUE, 
				COSTMHFOUNDATIONADJVALUE, 
				COSTINTERIORADJVALUE, 
				COSTFLOORCOVERADJVALUE, 
				COSTMHSKIRTVALUE, 
				COSTMHTAGMULTIPLIER, 
				COSTSTORYHEIGHTMULTIPLIER, 
				COSTSTORIESMULTIPLIER, 
				COSTPERIMUNITMULTIPLIER, 
				numeric, 
				COSTMULTIPLIER, 
				COSTLOCALMULTIPLIER, 
				COSTCOMPARATIVEMULTIPLIER, 
				COSTIMPSBLTASVERSTART, 
				MARKETIMPSBLTASVERSTART, 
				INCOMEIMPSBLTASVERSTART, 
				JURISDICTIONID, 
				IMPSBLTASVALUEOT0, 
				IMPSBLTASVALUEOT1, 
				IMPSBLTASVALUEOM0, 
				IMPSBLTASVALUEOM1, 
				IMPSBLTASVALUEOD0, 
				IMPSBLTASVALUEOD1, 
				IMPSBLTASVALUEON0, 
				IMPSBLTASVALUEON1, 
				IMPSBLTASVALUEON2, 
				WRITEDATE, 
				SEQID, 
				ADJUSTEDCOSTACTUALVALUE, 
				BLTASCOSTRCNLD
			FROM [asr_staging].[s_tblimpsbltasvalue]
			WHERE PHYSICALAGE < 0



--------------------------------------------------------------------------------

            END

		END
	

