

-- =====================================================================================
-- Author:	David Guillen
-- Create date: 2/25/2016
-- Description:	DQM stored procedure for s_tblacctreal
-- =====================================================================================
-- Modified on 4/28/2016 by Richard Edwards to add accountno in s_tblacct check

/*
DQM RULES FOR:
TABLE:  tblacctreal



1. IS_0_OR_POSITIVE_NUMBER_1	vacantflag needs to be 0 or 1

2. IS_0_OR_POSITIVE_NUMBER		imponlyflag needs to be 0 or 1

3. ACCOUNTNO MUST BE IN TABLE S_TBLACCT

*/


CREATE PROCEDURE [dqm].[dqm_s_tblacctreal]
	
AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE()

	BEGIN

     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------

	
	INSERT INTO [dqm].[s_tblacctreal_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID)
	    SELECT 
				'VACANTFLAG',
				'FIELD MUST BE 1 OR 0',
				'VACANTFLAG MUST BE 1 OR 0',
				--getdate(),
				@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID
			FROM [asr_staging].[s_tblacctreal]
			WHERE vacantflag not in (0,1) 


----------------------------------------------------------------------------------

	
	INSERT INTO [dqm].[s_tblacctreal_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID)
	    SELECT 
				'IMPONLYFLAG',
				'FIELD MUST BE 1 OR 0',
				'IMPONLYFLAG MUST BE 1 OR 0',
				--getdate(),
				@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID
			FROM [asr_staging].[s_tblacctreal]
			WHERE imponlyflag not in (0,1) 


----------------------------------------------------------------------------------

INSERT INTO [dqm].[s_tblacctreal_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID)
	    SELECT 
				'ACCOUNTNO',
				'FOREIGN KEY CHECK',
				'ACCOUNTNO MUST BE IN TABLE S_TBLACCT',
				--getdate(),
				@lv_RUNTIME,
				VERSTART, VEREND, ACCOUNTNO, IMPONLYFLAG, TIFFLAG, VACANTFLAG, LANDWIDTH, LANDDEPTH, LANDEASEMENTSF, LANDEXCESSSF, TRAFFICCOUNT, PARKINGSPACES, ZONINGCODE, FLOODFRINGE, FLOODWAY, TAPFEE, PLATTEDFLAG, LANDCERTIFICATIONCODE, LANDAPPRAISER, LANDAPPRAISALDATE, LANDOVERRIDESIZEADJ, LANDSIZEADJ, LANDGROSSSF, LANDGROSSACRES, LANDGROSSFF, LANDGROSSUNITCOUNT, ACCTREALON0, ACCTREALON1, ACCTREALON2, ACCTREALOD0, ACCTREALOD1, ACCTREALOM0, ACCTREALOM1, ACCTREALOT0, ACCTREALOT1, JURISDICTIONID, DEFAULTLEA, TOTALACCTIMPINTERESTPCT, TOTALACCTLANDINTERESTPCT, WRITEDATE, SEQID
			FROM [asr_staging].[s_tblacctreal]
			WHERE ACCOUNTNO NOT IN (SELECT ACCOUNTNO FROM asr_staging.s_tblacct)


----------------------------------------------------------------------------------
	END	

END







