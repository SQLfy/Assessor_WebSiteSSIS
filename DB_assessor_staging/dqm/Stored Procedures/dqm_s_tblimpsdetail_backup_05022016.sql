





-- ===========================================================
-- Author:	David Guillen
-- Create date: 2/25/2016
-- Description:	DQM stored procedure for S_TBLIMPSDETAIL table
-- ===========================================================
-- Modified 4/27/2016 by Richard Edwards to add accountno in s_tblacct check

/*
DQM RULES FOR:
TABLE:  S_TBLIMPSDETAIL

1.		ACCOUNTNO must be in table s_tblimps - FK Check

2.		IMPNO must be in table s_tblimps - FK Check

3.		IMPDETAILDESCRIPTION cannot be null

4.		IMPDETAILTYPE cannot be null

5.		The combination of ACCOUNTNO, IMPNO, and DETAILID must be unique

6.      ACCOUNTNO must be in table s_tblacct - FK Check

*/

CREATE PROCEDURE [dqm].[dqm_s_tblimpsdetail_backup_05022016]
	

AS
BEGIN

    DECLARE @lv_RUNTIME  DATETIME=GETDATE()

	  BEGIN
	

     --Begin DQM checks for the table for each row.

----------------------------------------------------------------------------------


	-- ACCOUNTNO must be in table s_tblimps - FK Check -- DQM check

INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'ACCOUNTNO',
				'FK CHECK',
				'ACCOUNTNO MUST EXIST IN TABLE S_TBLIMPS - FK CHECK',
				@lv_RUNTIME,
				DETAILID, 
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID
			FROM [asr_staging].[s_tblimpsdetail]
			WHERE ACCOUNTNO not in (select distinct ACCOUNTNO from [asr_staging].[s_tblimps])


--------------------------------------------------------------------------------

	-- IMPNO must be in table s_tblimps - FK Check -- DQM check

INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'IMPNO',
				'FK CHECK',
				'IMPNO MUST EXIST IN TABLE S_TBLIMPS - FK CHECK',
				@lv_RUNTIME,
				DETAILID, 
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID
			FROM [asr_staging].[s_tblimpsdetail]
			WHERE IMPNO not in (select distinct IMPNO from [asr_staging].[s_tblimps])

--------------------------------------------------------------------------------

	-- IMPDETAILDESCRIPTION cannot be null


	INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'IMPDETAILDESCRIPTION',
				'NOT NULL CHECK',
				'IMPDETAILDESCRIPTION NOT NULL CHECK',
				@lv_RUNTIME,
				DETAILID, 
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID
			FROM [asr_staging].[s_tblimpsdetail]
			WHERE IMPDETAILDESCRIPTION is null
			or IMPDETAILDESCRIPTION = '';


--------------------------------------------------------------------------------

	-- IMPDETAILTYPE cannot be null

	INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'IMPDETAILTYPE',
				'NOT NULL CHECK',
				'IMPDETAILTYPE NOT NULL CHECK',
				@lv_RUNTIME,
				DETAILID, 
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID
			FROM [asr_staging].[s_tblimpsdetail]
			WHERE IMPDETAILTYPE IS NULL
			or IMPDETAILTYPE = '';


-------------------------------------------------------------------------------

-- The combination of ACCOUNTNO, IMPNO, and DETAILID must be unique

	WITH DUPE_VALUES AS (SELECT distinct ACCOUNTNO, IMPNO, DETAILID  FROM [asr_staging].[s_tblimpsdetail] GROUP BY ACCOUNTNO, IMPNO, DETAILID HAVING COUNT(*) > 1)
	
	INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'MULTIPLE COLUMN UNIQUE',
				'UNIQUE VALUES CHECK',
				'ACCOUNTNO, IMPNO, and DETAILID must be unique',
				@lv_RUNTIME,
				id.DETAILID, 
				VERSTART, 
				VEREND, 
				id.ACCOUNTNO, 
				id.IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID		
			FROM [asr_staging].[s_tblimpsdetail] id
			INNER JOIN DUPE_VALUES DV 
			ON id.ACCOUNTNO = DV.ACCOUNTNO
			and id.IMPNO = DV.IMPNO
			and id.DETAILID = DV.DETAILID;

-------------------------------------------------------------------------------

-- ACCOUNTNO must be in table s_tblacct
INSERT INTO [dqm].[s_tblimpsdetail_err]
	(COLUMN_NAME, DQM_RULE, ERROR_DESCRIPTION, DQM_RUN_DATE, DETAILID, VERSTART, VEREND, ACCOUNTNO, IMPNO, IMPDETAILTYPE, IMPDETAILDESCRIPTION, DETAILUNITCOUNT, DETAILYEARBUILT, ADDONCODE, JURISDICTIONID, APEXLINKFLAG, IMPSDETAILOT0, IMPSDETAILOT1, IMPSDETAILOM0, IMPSDETAILOM1, IMPSDETAILOD0, IMPSDETAILOD1, IMPSDETAILON0, IMPSDETAILON1, IMPSDETAILON2, WRITEDATE, SEQID, IMPDETAILTYPEID)
	    SELECT 
				'ACCOUNTNO',
				'FK CHECK',
				'ACCOUNTNO MUST EXIST IN TABLE S_TBLACCT - FK CHECK',
				@lv_RUNTIME,
				DETAILID, 
				VERSTART, 
				VEREND, 
				ACCOUNTNO, 
				IMPNO, 
				IMPDETAILTYPE, 
				IMPDETAILDESCRIPTION, 
				DETAILUNITCOUNT, 
				DETAILYEARBUILT, 
				ADDONCODE, 
				JURISDICTIONID, 
				APEXLINKFLAG, 
				IMPSDETAILOT0, 
				IMPSDETAILOT1, 
				IMPSDETAILOM0, 
				IMPSDETAILOM1, 
				IMPSDETAILOD0, 
				IMPSDETAILOD1, 
				IMPSDETAILON0, 
				IMPSDETAILON1, 
				IMPSDETAILON2, 
				WRITEDATE, 
				SEQID, 
				IMPDETAILTYPEID
			FROM [asr_staging].[s_tblimpsdetail]
			WHERE ACCOUNTNO not in (select distinct ACCOUNTNO from [asr_staging].[s_tblacct])

            END

	END
	

