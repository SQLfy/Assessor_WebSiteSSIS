USE [master]
GO
/****** Object:  Database [assessor_datastore]    Script Date: 10/15/2024 4:17:28 PM ******/
CREATE DATABASE [assessor_datastore]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'assessor_datastore', FILENAME = N'E:\Data\assessor_datastore_NEW.mdf' , SIZE = 9972352KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'assessor_datastore_log', FILENAME = N'E:\Logs\assessor_datastore_log_NEW.ldf' , SIZE = 12244032KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO
ALTER DATABASE [assessor_datastore] SET COMPATIBILITY_LEVEL = 150
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [assessor_datastore].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [assessor_datastore] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [assessor_datastore] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [assessor_datastore] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [assessor_datastore] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [assessor_datastore] SET ARITHABORT OFF 
GO
ALTER DATABASE [assessor_datastore] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [assessor_datastore] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [assessor_datastore] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [assessor_datastore] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [assessor_datastore] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [assessor_datastore] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [assessor_datastore] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [assessor_datastore] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [assessor_datastore] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [assessor_datastore] SET  DISABLE_BROKER 
GO
ALTER DATABASE [assessor_datastore] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [assessor_datastore] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [assessor_datastore] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [assessor_datastore] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [assessor_datastore] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [assessor_datastore] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [assessor_datastore] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [assessor_datastore] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [assessor_datastore] SET  MULTI_USER 
GO
ALTER DATABASE [assessor_datastore] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [assessor_datastore] SET DB_CHAINING OFF 
GO
ALTER DATABASE [assessor_datastore] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [assessor_datastore] SET TARGET_RECOVERY_TIME = 0 SECONDS 
GO
ALTER DATABASE [assessor_datastore] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [assessor_datastore] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
EXEC sys.sp_db_vardecimal_storage_format N'assessor_datastore', N'ON'
GO
ALTER DATABASE [assessor_datastore] SET QUERY_STORE = OFF
GO
USE [assessor_datastore]
GO
/****** Object:  User [tobrien1]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [tobrien1] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [tobrien]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [tobrien] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [SA_PRRW_R]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [SA_PRRW_R] FOR LOGIN [SA_PRRW_R] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [py_etl]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [py_etl] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [devdba]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [devdba] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\t1_database_developers]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\t1_database_developers] FOR LOGIN [DCGOV\t1_database_developers]
GO
/****** Object:  User [DCGOV\SQL_PRASSRRPT_PROPENDATA_ETL]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SQL_PRASSRRPT_PROPENDATA_ETL] FOR LOGIN [DCGOV\SQL_PRASSRRPT_PROPENDATA_ETL]
GO
/****** Object:  User [DCGOV\SA_SSBS_PRGIS]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SA_SSBS_PRGIS] FOR LOGIN [DCGOV\SA_SSBS_PRGIS] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\SA_PRDCETL-MST01]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SA_PRDCETL-MST01] FOR LOGIN [DCGOV\SA_PRDCETL-MST01] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\SA_PR_AssessorETLRO]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SA_PR_AssessorETLRO] FOR LOGIN [DCGOV\SA_PR_AssessorETLRO] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\sa_pbi_prassr_rpi]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\sa_pbi_prassr_rpi] FOR LOGIN [DCGOV\sa_pbi_prassr_rpi] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\SA_MOVERE_SQL]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SA_MOVERE_SQL] FOR LOGIN [DCGOV\SA_MOVERE_SQL] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\SA_DVELECTIONS_AMP]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\SA_DVELECTIONS_AMP] FOR LOGIN [DCGOV\SA_DVELECTIONS_AMP] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\rthompson]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\rthompson] FOR LOGIN [DCGOV\rthompson] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGOV\PBI_PRASSRRPT_ASSESSOR_DATASTORE_R]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\PBI_PRASSRRPT_ASSESSOR_DATASTORE_R] FOR LOGIN [DCGOV\PBI_PRASSRRPT_ASSESSOR_DATASTORE_R]
GO
/****** Object:  User [DCGOV\jjmanning]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGOV\jjmanning] FOR LOGIN [DCGOV\jjmanning] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\tobrien]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\tobrien] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\tdamisch]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\tdamisch] FOR LOGIN [DCGOV\tdamisch] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\SQL_PRASSRRPT_R]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\SQL_PRASSRRPT_R] FOR LOGIN [DCGOV\SQL_PRASSRRPT_R]
GO
/****** Object:  User [DCGD\smandrekar]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\smandrekar] FOR LOGIN [DCGD\smandrekar] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\sa_sqlsvcs]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\sa_sqlsvcs] FOR LOGIN [DCGD\SA_SQLSVCS] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\Redwards]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\Redwards] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\meffen]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\meffen] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\mdronamr]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\mdronamr] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\marvidso]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\marvidso] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\jsoldano]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\jsoldano] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\jlongach]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\jlongach] FOR LOGIN [DCGOV\jlongach] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\dscott]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\dscott] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [DCGD\dbrooks]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [DCGD\dbrooks] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [AssessorRptsRO]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [AssessorRptsRO] FOR LOGIN [AssessorRptsRO] WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  User [assessor_app_user]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE USER [assessor_app_user] FOR LOGIN [assessor_app_user] WITH DEFAULT_SCHEMA=[dbo]
GO
ALTER ROLE [db_datareader] ADD MEMBER [tobrien1]
GO
ALTER ROLE [db_datareader] ADD MEMBER [tobrien]
GO
ALTER ROLE [db_datareader] ADD MEMBER [SA_PRRW_R]
GO
ALTER ROLE [db_datareader] ADD MEMBER [py_etl]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\SA_SSBS_PRGIS]
GO
ALTER ROLE [db_owner] ADD MEMBER [DCGOV\SA_PRDCETL-MST01]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\SA_PR_AssessorETLRO]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\sa_pbi_prassr_rpi]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\SA_MOVERE_SQL]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\SA_DVELECTIONS_AMP]
GO
ALTER ROLE [db_ddladmin] ADD MEMBER [DCGOV\rthompson]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\rthompson]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGOV\PBI_PRASSRRPT_ASSESSOR_DATASTORE_R]
GO
ALTER ROLE [db_owner] ADD MEMBER [DCGOV\jjmanning]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\tobrien]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\tdamisch]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\SQL_PRASSRRPT_R]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\smandrekar]
GO
ALTER ROLE [db_owner] ADD MEMBER [DCGD\Redwards]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\mdronamr]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\marvidso]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\jsoldano]
GO
ALTER ROLE [db_owner] ADD MEMBER [DCGD\jlongach]
GO
ALTER ROLE [db_datareader] ADD MEMBER [DCGD\dbrooks]
GO
ALTER ROLE [db_datareader] ADD MEMBER [AssessorRptsRO]
GO
ALTER ROLE [db_owner] ADD MEMBER [assessor_app_user]
GO
/****** Object:  Schema [asr_adv_search_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_adv_search_query]
GO
/****** Object:  Schema [asr_app_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_app_query]
GO
/****** Object:  Schema [asr_datastore]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_datastore]
GO
/****** Object:  Schema [asr_ods2_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_ods2_query]
GO
/****** Object:  Schema [asr_open_data_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_open_data_query]
GO
/****** Object:  Schema [asr_posse_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_posse_query]
GO
/****** Object:  Schema [asr_spatialest_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [asr_spatialest_query]
GO
/****** Object:  Schema [gis_ods_query]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [gis_ods_query]
GO
/****** Object:  Schema [location]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [location]
GO
/****** Object:  Schema [Reporting]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE SCHEMA [Reporting]
GO
/****** Object:  UserDefinedFunction [dbo].[fn_CSVClean]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Description: Replaces ASCII-char's 9-13,34,39 and 44 which are tab, line-feed, vert tab,
-- form-feed, & carriage-return, double-quote, single-quote, comma (respectively), with a whitespace.
-- =============================================
CREATE FUNCTION [dbo].[fn_CSVClean] (
       @Str varchar(max)
)
RETURNS varchar(max) AS
BEGIN
       DECLARE @Result varchar(max)

       SET @Result = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
              @Str, CHAR(9), ' '), CHAR(10), ' '), CHAR(11), ' '), CHAR(12), ' '), CHAR(13), ' '), CHAR(34), ' '), CHAR(39), ' '), CHAR(44), ' ')

       RETURN @Result
END
GO
/****** Object:  Table [asr_datastore].[account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account](
	[account_no] [varchar](30) NOT NULL,
	[state_parcel_no] [varchar](30) NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[sub_filing_recording_no] [varchar](30) NULL,
	[account_type] [varchar](30) NOT NULL,
	[appraisal_type] [varchar](30) NOT NULL,
	[account_status] [varchar](30) NOT NULL,
	[account_status_description] [varchar](100) NULL,
	[legal_description] [varchar](max) NULL,
	[longitude_x] [numeric](30, 8) NULL,
	[latitude_y] [numeric](30, 8) NULL,
	[location] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[elevation_z] [numeric](30, 8) NULL,
	[bldg_permit_auth_id] [int] NULL,
	[qtr] [varchar](15) NULL,
	[section] [varchar](15) NULL,
	[township] [varchar](15) NULL,
	[range] [varchar](15) NULL,
 CONSTRAINT [pk_account] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[account_property_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_property_address](
	[account_no] [varchar](30) NOT NULL,
	[order_no] [int] NOT NULL,
	[primary_address_flag] [bit] NULL,
	[building_no] [varchar](30) NULL,
	[unit_no] [varchar](30) NULL,
	[unit_designator] [varchar](30) NULL,
	[address_number] [varchar](15) NULL,
	[address_number_suffix] [varchar](30) NULL,
	[pre_direction_code] [varchar](50) NULL,
	[street_name] [varchar](80) NULL,
	[street_type_code] [varchar](30) NULL,
	[post_direction_code] [varchar](50) NULL,
	[city_name] [varchar](50) NULL,
	[location_zip_code] [varchar](10) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_account_property_address] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[order_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_account_property_address_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_app_query].[v_account_property_address_old]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access account_property_address for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT pa.account_no, pa.order_no, pa.primary_address_flag, pa.building_no, pa.unit_no, pa.unit_designator, 
pa.address_number, pa.address_number_suffix, pa.pre_direction_code, pa.street_name, pa.street_type_code, 
pa.post_direction_code, pa.city_name, pa.location_zip_code, 
pa.create_datetime, pa.create_user_id, pa.update_datetime, pa.update_user_id, pa.rowhash
FROM asr_datastore.account_property_address pa
INNER JOIN asr_datastore.account a
	  ON pa.account_no = a.account_no
	  AND a.account_status = 'A';








GO
/****** Object:  Table [asr_datastore].[etl_parameter]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[etl_parameter](
	[parameter_name] [varchar](50) NOT NULL,
	[parameter_value] [varchar](100) NOT NULL,
	[parameter_description] [varchar](1000) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
 CONSTRAINT [pk_etl_parameter] PRIMARY KEY CLUSTERED 
(
	[parameter_name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_etl_parameter]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_etl_parameter]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access etl_parameter for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT parameter_name, parameter_value, parameter_description, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.etl_parameter;





GO
/****** Object:  Table [asr_datastore].[improvement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [numeric](5, 0) NOT NULL,
	[completed_percent] [numeric](7, 4) NULL,
	[improvement_quality] [varchar](50) NULL,
	[improvement_perimeter] [numeric](15, 0) NULL,
	[improvement_sf] [numeric](15, 0) NULL,
	[improvement_net_sf] [numeric](15, 0) NULL,
	[property_type] [varchar](50) NULL,
	[condition_type] [varchar](50) NULL,
	[approach_type] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[primary_flag] [bit] NULL,
	[improvement_unit_type] [varchar](30) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_improvement] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[improvement_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_improvement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_improvement]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/2/2016
Developer:     Christine Lin
Comments:      Initial creation
               List details for updating the improvement table
*************************************************************************************/
/**************************************************************************************
Mod #:  2
Mod Date:      7/25/2016
Developer:     Richard Edwards
Comments:      Add primary_flag column
*************************************************************************************/
/**************************************************************************************
Mod #:  3
Mod Date:      8/22/2016
Developer:     Richard Edwards
Comments:      Add improvement_unit_type column
*************************************************************************************/

AS
SELECT        i.account_no, i.improvement_no, i.completed_percent, i.improvement_quality, i.improvement_perimeter, i.improvement_sf, i.improvement_net_sf, i.property_type, i.condition_type, i.approach_type, 
                         i.create_datetime, i.create_user_id, i.update_datetime, i.update_user_id, i.rowhash, i.primary_flag, i.improvement_unit_type
FROM            asr_datastore.improvement AS i INNER JOIN
                         asr_datastore.account AS a ON i.account_no = a.account_no AND a.account_status = 'A'


GO
/****** Object:  Table [asr_datastore].[improvement_built_as]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement_built_as](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [numeric](5, 0) NOT NULL,
	[built_as_detail_id] [numeric](15, 0) NOT NULL,
	[built_as_code] [varchar](50) NOT NULL,
	[built_as_code_description] [varchar](100) NULL,
	[hvac_percent] [numeric](7, 4) NULL,
	[exterior_construction_type] [varchar](50) NULL,
	[interior_finish_type] [varchar](50) NULL,
	[no_of_story] [numeric](5, 2) NULL,
	[typical_story_height] [numeric](5, 0) NULL,
	[roof_construction_type] [varchar](50) NULL,
	[roof_material_type] [varchar](50) NULL,
	[floor_material_type] [varchar](50) NULL,
	[room_count] [numeric](7, 0) NULL,
	[bedroom_count] [numeric](7, 2) NULL,
	[total_unit_count] [numeric](7, 0) NULL,
	[class_code] [varchar](50) NULL,
	[class_code_description] [varchar](100) NULL,
	[built_year] [varchar](4) NULL,
	[remodeled_year] [varchar](4) NULL,
	[remodeled_percent] [numeric](7, 4) NULL,
	[effective_age] [numeric](5, 0) NULL,
	[built_as_sf] [numeric](15, 0) NULL,
	[sprinkler_coverage_sf] [numeric](15, 0) NULL,
	[bathroom_count] [numeric](7, 2) NULL,
	[heat_type] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[primary_flag] [bit] NULL,
	[built_as_length] [numeric](15, 0) NULL,
	[built_as_width] [numeric](15, 0) NULL,
	[built_as_height] [numeric](15, 0) NULL,
	[mobile_home_make] [varchar](50) NULL,
	[mobile_home_model_type] [varchar](30) NULL,
	[mobile_home_skirt] [varchar](30) NULL,
	[mobile_home_skirt_linear_feet] [numeric](15, 0) NULL,
	[mobile_home_wall_type] [varchar](32) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_improvement_built_as] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[improvement_no] ASC,
	[built_as_detail_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_adv_search_query].[v_building_style]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_adv_search_query].[v_building_style]
WITH SCHEMABINDING 
AS
SELECT        ba.account_no AS account_number, ba.improvement_no AS building_number, ba.built_as_code AS style_code, ba.built_as_code_description AS style_code_description, ba.hvac_percent, ba.exterior_construction_type, 
                         ba.interior_finish_type, ba.no_of_story AS number_of_stories, ba.typical_story_height, ba.roof_construction_type, ba.roof_material_type, ba.floor_material_type, ba.room_count, ba.bedroom_count, ba.total_unit_count, 
                         ba.class_code, ba.class_code_description, ba.built_year, ba.remodeled_year, ba.remodeled_percent, ba.effective_age, ba.built_as_sf, ba.sprinkler_coverage_sf, ba.bathroom_count, ba.heat_type, ba.primary_flag, 
                         ba.built_as_length, ba.built_as_width, ba.built_as_height, ba.mobile_home_make, ba.mobile_home_model_type, ba.mobile_home_skirt, ba.mobile_home_skirt_linear_feet, ba.mobile_home_wall_type
FROM            asr_datastore.improvement_built_as AS ba INNER JOIN
                         asr_datastore.account AS a ON ba.account_no = a.account_no AND a.account_status = 'A'
GO
/****** Object:  View [asr_app_query].[v_improvement_built_as]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_improvement_built_as]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/2/2016
Developer:     Christine Lin
Comments:      Initial creation
               List details for updating the improvement built as table
*************************************************************************************/
/**************************************************************************************
Mod #:  2
Mod Date:      8/22/2016
Developer:     Richard Edwards
Comments:      Add built_as_length, built_as_width, built_as_height, mobile_home_make, mobile_home_model_type, 
                   mobile_home_skirt, mobile_home_skirt_linear_feet, mobile_home_wall_type columns
*************************************************************************************/

AS
SELECT        iba.account_no, iba.improvement_no, iba.built_as_detail_id, iba.built_as_code, iba.built_as_code_description, iba.hvac_percent, iba.exterior_construction_type, iba.interior_finish_type, iba.no_of_story, 
                         iba.typical_story_height, iba.roof_construction_type, iba.roof_material_type, iba.floor_material_type, iba.room_count, iba.bedroom_count, iba.total_unit_count, iba.class_code, iba.class_code_description, 
                         iba.built_year, iba.remodeled_year, iba.remodeled_percent, iba.effective_age, iba.built_as_sf, iba.sprinkler_coverage_sf, iba.bathroom_count, iba.heat_type, iba.create_datetime, iba.create_user_id, 
                         iba.update_datetime, iba.update_user_id, iba.rowhash, iba.primary_flag, iba.built_as_length, iba.built_as_width, iba.built_as_height, 
						 iba.mobile_home_make, iba.mobile_home_model_type, iba.mobile_home_skirt, iba.mobile_home_skirt_linear_feet,
						 iba.mobile_home_wall_type
FROM            asr_datastore.improvement_built_as AS iba INNER JOIN
                         asr_datastore.account AS a ON iba.account_no = a.account_no AND a.account_status = 'A'




GO
/****** Object:  Table [asr_datastore].[improvement_occupancy]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement_occupancy](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [numeric](5, 0) NOT NULL,
	[occupancy_detail_id] [numeric](15, 0) NOT NULL,
	[occupancy_code] [varchar](50) NOT NULL,
	[occupancy_code_description] [varchar](100) NULL,
	[occupancy_percent] [numeric](7, 4) NOT NULL,
	[abstract_code] [varchar](50) NULL,
	[abstract_code_description] [varchar](100) NULL,
	[abstract_value] [numeric](15, 2) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[primary_flag] [bit] NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_improvement_occupancy] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[improvement_no] ASC,
	[occupancy_detail_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_adv_search_query].[v_building_use]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_adv_search_query].[v_building_use]
AS
SELECT        bo.account_no AS account_number, bo.improvement_no AS building_number, bo.occupancy_code AS use_code, bo.occupancy_code_description AS use_code_description, bo.occupancy_percent AS use_percentage, 
                         bo.abstract_code, bo.abstract_code_description, bo.abstract_value
FROM            asr_datastore.improvement_occupancy AS bo INNER JOIN
                         asr_datastore.account AS a ON bo.account_no = a.account_no AND a.account_status = 'A'
GO
/****** Object:  Table [asr_datastore].[azure_important_dates]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[azure_important_dates](
	[ID] [int] NOT NULL,
	[Description] [nvarchar](220) NULL,
	[Reappraisal] [nvarchar](30) NULL,
	[Event_Name] [nvarchar](220) NULL,
	[Intervening] [nvarchar](30) NULL,
	[Category] [nvarchar](30) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[Title] [nvarchar](220) NULL,
 CONSTRAINT [PK_azure_important_dates] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_azure_important_dates]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_app_query].[v_azure_important_dates]
AS
SELECT        ID, Description, Reappraisal, Event_Name, Intervening, Category, create_datetime, create_user_id, update_datetime, update_user_id, Title
FROM            asr_datastore.azure_important_dates
WHERE        (Description <> 'Month in which NODs are mailed.')
GO
/****** Object:  View [asr_app_query].[v_improvement_occupancy]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_improvement_occupancy]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access improvement occupancy for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT   io.account_no, io.improvement_no, io.occupancy_detail_id, io.occupancy_code, 
         io.occupancy_code_description, 
		 io.occupancy_percent, io.abstract_code, 
		 io.abstract_code_description, io.abstract_value, 
         io.create_datetime, io.create_user_id, io.update_datetime, io.update_user_id, io.rowhash, io.primary_flag
FROM     asr_datastore.improvement_occupancy AS io INNER JOIN
         asr_datastore.account AS a ON io.account_no = a.account_no AND a.account_status = 'A'



GO
/****** Object:  Table [asr_datastore].[land_abstract]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[land_abstract](
	[account_no] [varchar](30) NOT NULL,
	[abstract_code] [varchar](50) NOT NULL,
	[land_abstract_detail_id] [numeric](15, 0) NOT NULL,
	[land_type] [varchar](50) NULL,
	[land_acres] [numeric](20, 6) NULL,
	[land_sf] [numeric](20, 6) NULL,
	[land_unit_count] [numeric](20, 6) NULL,
	[land_value_per] [numeric](15, 2) NOT NULL,
	[land_value] [numeric](15, 2) NULL,
	[land_override_flag] [bit] NOT NULL,
	[land_override_total] [numeric](15, 2) NULL,
	[land_actual_value] [numeric](15, 2) NULL,
	[land_class] [varchar](10) NULL,
	[land_subclass] [varchar](10) NULL,
	[land_valued_by] [varchar](50) NULL,
	[land_value_measure] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[abstract_code_description] [varchar](100) NULL,
 CONSTRAINT [pk_land_abstract] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[abstract_code] ASC,
	[land_abstract_detail_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_land_abstract]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_land_abstract]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access land abstract data for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT        
	la.account_no
	, la.abstract_code
	, la.land_abstract_detail_id
	, la.land_type
	, la.land_acres
	, la.land_sf
	, la.land_unit_count
	, la.land_value_per
	, la.land_value
	, la.land_override_flag
	, la.land_override_total
	, la.land_actual_value
	, la.land_class
	, la.land_subclass
	, la.land_valued_by
	, la.land_value_measure
	, la.create_datetime
	, la.create_user_id
	, la.update_datetime
	, la.update_user_id
	, la.rowhash
	, la.abstract_code_description
	--select *
FROM asr_datastore.land_abstract AS la 
	INNER JOIN asr_datastore.account AS a ON la.account_no = a.account_no AND a.account_status = 'A'



GO
/****** Object:  Table [asr_datastore].[land_parent]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[land_parent](
	[state_parcel_no] [varchar](30) NOT NULL,
	[parent_parcel_no] [varchar](30) NOT NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL,
 CONSTRAINT [PK_land_parent] PRIMARY KEY CLUSTERED 
(
	[state_parcel_no] ASC,
	[parent_parcel_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_posse_query].[v_land_parent]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE VIEW [asr_posse_query].[v_land_parent]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/01/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access land_parent records for consumption by POSSE

*************************************************************************************/
AS
SELECT state_parcel_no , parent_parcel_no, create_dtm, create_user_id, update_dtm, update_user_id
FROM asr_datastore.land_parent; 














GO
/****** Object:  Table [asr_datastore].[tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[tax_district](
	[tax_district_no] [varchar](30) NOT NULL,
	[tax_district_name] [varchar](256) NULL,
	[create_datetime] [datetime] NOT NULL,
	[create_user_id] [varchar](30) NOT NULL,
	[update_datetime] [datetime] NULL,
	[update_user_id] [varchar](30) NULL,
 CONSTRAINT [pk_tax_district] PRIMARY KEY CLUSTERED 
(
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_posse_query].[v_tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_posse_query].[v_tax_district]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/1/2016
Developer:     TONY GOLDEN
Comments:      Initial creation
               Provide a view to access tax districts for loading data into
			   the asssessor_app database for POSSE STREAM
*************************************************************************************/
AS
SELECT tax_district_no, tax_district_name, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district;





GO
/****** Object:  Table [asr_datastore].[sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[sale](
	[recording_no] [varchar](20) NOT NULL,
	[grantor] [varchar](100) NULL,
	[grantee] [varchar](100) NULL,
	[sale_date] [datetime2](7) NOT NULL,
	[deed_code] [varchar](50) NULL,
	[deed_code_description] [varchar](100) NULL,
	[sale_price] [numeric](15, 2) NOT NULL,
	[valid1_flag] [bit] NOT NULL,
	[confirmed_flag] [int] NOT NULL,
	[exclude_code_1] [varchar](50) NULL,
	[improved_flag] [bit] NOT NULL,
	[non_sale_flag] [bit] NOT NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[exclude_code_1_description] [varchar](100) NULL,
	[rowhash] [varbinary](8000) NULL,
	[valid2_flag] [bit] NULL,
	[book] [varchar](6) NULL,
	[page] [varchar](10) NULL,
	[exclude_code_2] [varchar](50) NULL,
	[exclude_code_2_description] [varchar](100) NULL,
 CONSTRAINT [pk_sale] PRIMARY KEY CLUSTERED 
(
	[recording_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_app_query].[v_sale]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access sale data for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT  recording_no, 
        grantor, 
		grantee, 
		sale_date, deed_code, 
		deed_code_description, 
		sale_price, valid1_flag, confirmed_flag, exclude_code_1, improved_flag, 
		non_sale_flag, create_datetime, create_user_id, 
        update_datetime, update_user_id, 
		exclude_code_1_description, rowhash, valid2_flag, book, page
FROM    asr_datastore.sale
WHERE   (non_sale_flag = 0)






GO
/****** Object:  Table [asr_datastore].[tax_district_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[tax_district_authority](
	[tax_district_no] [varchar](30) NOT NULL,
	[tax_authority_no] [varchar](30) NOT NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
 CONSTRAINT [pk_tax_district_authority] PRIMARY KEY CLUSTERED 
(
	[tax_district_no] ASC,
	[tax_authority_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_posse_query].[v_tax_district_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_posse_query].[v_tax_district_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/1/2016
Developer:     TONY GOLDEN
Comments:      Initial creation
               Provide a view to access the tax_district_authority table for loading data into
			   the asssessor_app database for POSSE STREAM
*************************************************************************************/
AS
SELECT tax_district_no, tax_authority_no, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district_authority;





GO
/****** Object:  Table [asr_datastore].[sale_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[sale_account](
	[recording_no] [varchar](20) NOT NULL,
	[account_no] [varchar](30) NOT NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_sale_account] PRIMARY KEY CLUSTERED 
(
	[recording_no] ASC,
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_sale_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_sale_account]
AS
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access sale account data for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
SELECT        sa.recording_no, sa.account_no, sa.create_datetime, sa.create_user_id, sa.update_datetime, sa.update_user_id, sa.rowhash
FROM            asr_datastore.sale_account AS sa INNER JOIN
                         asr_datastore.account AS a ON sa.account_no = a.account_no AND a.account_status = 'A'
WHERE EXISTS (select s.recording_NO from ASR_APP_QUERY.v_sale s WHERE s.recording_no = sa.recording_no)   -- added this line due to FK constraint added to sale_account table.


GO
/****** Object:  Table [asr_datastore].[tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[tax_authority](
	[tax_authority_no] [varchar](30) NOT NULL,
	[tax_authority_name] [varchar](256) NULL,
	[authority_type] [varchar](100) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[contact_person] [varchar](60) NULL,
	[contact_address_line_1] [varchar](80) NULL,
	[contact_address_line_2] [varchar](80) NULL,
	[contact_city_name] [varchar](50) NULL,
	[contact_state] [varchar](80) NULL,
	[contact_zip_code] [varchar](10) NULL,
	[active_flag] [int] NULL,
	[rowhash] [varbinary](8000) NULL,
	[contact_phone] [varchar](18) NULL,
 CONSTRAINT [pk_tax_authority] PRIMARY KEY CLUSTERED 
(
	[tax_authority_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_posse_query].[v_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/1/2016
Developer:     TONY GOLDEN
Comments:      Initial creation
               Provide a view to access tax_authority data 
			   for loading data into the asssessor_app database for POSSE STREAM
*************************************************************************************/

CREATE VIEW [asr_posse_query].[v_tax_authority]
AS
SELECT        tax_authority_no, tax_authority_name, authority_type, create_datetime, create_user_id, update_datetime, update_user_id, contact_person, contact_address_line_1, contact_address_line_2, contact_city_name, 
                         contact_state, contact_zip_code, active_flag, rowhash, contact_phone
FROM            asr_datastore.tax_authority


GO
/****** Object:  Table [asr_datastore].[sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[sub_filing](
	[sub_filing_recording_no] [varchar](30) NOT NULL,
	[subdivision_no] [varchar](30) NOT NULL,
	[subdivision_name] [varchar](256) NULL,
	[filing_no] [varchar](30) NOT NULL,
	[filing_description] [varchar](80) NULL,
	[dedicated_sub_filing_name] [varchar](256) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_sub_filing] PRIMARY KEY CLUSTERED 
(
	[sub_filing_recording_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [asr_app_query].[v_sub_filing]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access subfiling info for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT 
sub_filing_recording_no, subdivision_no, subdivision_name, filing_no, filing_description, 
dedicated_sub_filing_name, create_datetime, create_user_id,
update_datetime, update_user_id, rowhash
FROM [asr_datastore].[sub_filing]







GO
/****** Object:  View [asr_app_query].[v_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_app_query].[v_tax_authority]
AS
SELECT        tax_authority_no, tax_authority_name, authority_type, create_datetime, create_user_id, update_datetime, update_user_id, contact_person, contact_address_line_1, contact_address_line_2, contact_city_name, 
                         contact_state, contact_zip_code, active_flag, rowhash, contact_phone
FROM            asr_datastore.tax_authority
GO
/****** Object:  Table [asr_datastore].[tax_authority_fund]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[tax_authority_fund](
	[tax_authority_no] [varchar](30) NOT NULL,
	[tax_fund_code] [varchar](20) NOT NULL,
	[levy_type_id] [numeric](4, 0) NOT NULL,
	[levy_type] [varchar](50) NOT NULL,
	[assessed_mill_levy] [numeric](11, 6) NULL,
	[tax_fund_description] [varchar](100) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_tax_authority_fund] PRIMARY KEY CLUSTERED 
(
	[tax_authority_no] ASC,
	[tax_fund_code] ASC,
	[levy_type_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_tax_authority_fund]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [asr_app_query].[v_tax_authority_fund]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access tax_authority_fund data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT tax_authority_no, tax_fund_code, levy_type_id, levy_type, assessed_mill_levy, 
tax_fund_description, create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM [asr_datastore].[tax_authority_fund];










GO
/****** Object:  View [asr_app_query].[v_tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_tax_district]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access tax districts for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT tax_district_no, tax_district_name, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district;




GO
/****** Object:  View [asr_app_query].[v_tax_district_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_tax_district_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access the tax_district_authority table for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT tax_district_no, tax_authority_no, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district_authority;




GO
/****** Object:  Table [asr_datastore].[sale_inventory]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[sale_inventory](
	[recording_no] [varchar](30) NOT NULL,
	[account_no] [varchar](30) NOT NULL,
	[inventory_effective_date] [datetime2](7) NULL,
	[adjusted_sale_price] [numeric](15, 2) NULL,
	[time_adjusted_sale_price] [numeric](15, 2) NULL,
	[account_type] [varchar](15) NULL,
	[land_economic_area] [varchar](30) NULL,
	[land_economic_area_description] [varchar](50) NULL,
	[property_type] [varchar](15) NULL,
	[improvement_condition_type] [varchar](40) NULL,
	[improvement_quality] [varchar](15) NULL,
	[improvement_abstract_code] [varchar](10) NULL,
	[improvement_abstract_code_description] [varchar](500) NULL,
	[built_as_description] [varchar](50) NULL,
	[built_as_year_built] [numeric](4, 0) NULL,
	[physical_age] [numeric](4, 0) NULL,
	[adjusted_year_built] [numeric](4, 0) NULL,
	[effective_age] [numeric](5, 0) NULL,
	[improvement_exterior] [varchar](50) NULL,
	[class_code] [varchar](10) NULL,
	[class_code_description] [varchar](40) NULL,
	[improvement_count] [numeric](15, 0) NULL,
	[built_as_total_unit_count] [numeric](15, 0) NULL,
	[room_count] [numeric](7, 0) NULL,
	[bedroom_count] [numeric](7, 2) NULL,
	[bath_count] [numeric](7, 2) NULL,
	[total_improvement_square_footage] [numeric](15, 2) NULL,
	[residential_square_footage] [numeric](15, 2) NULL,
	[commercial_square_footage] [numeric](15, 2) NULL,
	[outbuilding_square_footage] [numeric](15, 2) NULL,
	[improvement_built_as_other] [numeric](15, 0) NULL,
	[land_net_square_footage] [numeric](20, 6) NULL,
	[multiple_use_flag] [numeric](1, 0) NULL,
	[land_type] [varchar](15) NULL,
	[land_abstract_code] [varchar](10) NULL,
	[land_abstract_code_description] [varchar](500) NULL,
	[zoning_code] [varchar](50) NULL,
	[zoning_code_description] [varchar](40) NULL,
	[platted_flag] [bit] NULL,
	[land_net_acre_count] [numeric](20, 6) NULL,
	[hvac_type] [varchar](30) NULL,
	[improvement_unit_type] [varchar](30) NULL,
	[improvement_interior] [varchar](30) NULL,
	[roof_cover] [varchar](30) NULL,
	[roof_type] [varchar](30) NULL,
	[neighborhood_code_1] [varchar](10) NULL,
	[neighborhood_code_2] [varchar](10) NULL,
	[neighborhood_extension_1] [varchar](10) NULL,
	[neighborhood_extension_2] [varchar](10) NULL,
	[outbuilding_count] [numeric](15, 2) NULL,
	[floor_cover] [varchar](30) NULL,
	[occupancy_code_description_1] [varchar](50) NULL,
	[occupancy_code_description_2] [varchar](50) NULL,
	[total_finished_square_footage] [numeric](15, 2) NULL,
	[total_unfinished_square_footage] [numeric](15, 2) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_sale_inventory] PRIMARY KEY CLUSTERED 
(
	[recording_no] ASC,
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_sale_inventory]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_app_query].[v_sale_inventory]
AS
SELECT        si.recording_no, si.account_no, si.inventory_effective_date, si.adjusted_sale_price, si.time_adjusted_sale_price, si.account_type, si.land_economic_area, si.land_economic_area_description, si.property_type, 
                         si.improvement_condition_type, si.improvement_quality, si.improvement_abstract_code, si.improvement_abstract_code_description, si.built_as_description, si.built_as_year_built, si.physical_age, 
                         si.adjusted_year_built, si.effective_age, si.improvement_exterior, si.class_code, si.class_code_description, si.improvement_count, si.built_as_total_unit_count, si.room_count, si.bedroom_count, si.bath_count, 
                         si.total_improvement_square_footage, si.residential_square_footage, si.commercial_square_footage, si.outbuilding_square_footage, si.improvement_built_as_other, si.land_net_square_footage, 
                         si.multiple_use_flag, si.land_type, si.land_abstract_code, si.land_abstract_code_description, si.zoning_code, si.zoning_code_description, si.platted_flag, si.land_net_acre_count, si.hvac_type, 
                         si.improvement_unit_type, si.improvement_interior, si.roof_cover, si.roof_type, si.neighborhood_code_1, si.neighborhood_code_2, si.neighborhood_extension_1, si.neighborhood_extension_2, 
                         si.outbuilding_count, si.floor_cover, si.occupancy_code_description_1, si.occupancy_code_description_2, si.total_finished_square_footage, si.total_unfinished_square_footage, si.create_datetime, 
                         si.create_user_id, si.update_datetime, si.update_user_id, si.rowhash
FROM            asr_datastore.sale_inventory AS si INNER JOIN
                         asr_datastore.account AS a ON si.account_no = a.account_no AND a.account_status = 'A'
GO
/****** Object:  Table [asr_datastore].[land_attribute]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[land_attribute](
	[account_no] [varchar](30) NOT NULL,
	[detail_id] [numeric](15, 0) NOT NULL,
	[attribute_type] [varchar](30) NULL,
	[attribute_subtype] [varchar](50) NULL,
	[attribute_adjustment] [numeric](15, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_land_attribute] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[detail_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_land_attribute]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_land_attribute]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access land attribute data for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT  la.account_no, la.detail_id, la.attribute_type, 
        la.attribute_subtype, 
		la.attribute_adjustment, la.create_datetime, la.create_user_id, la.update_datetime, la.update_user_id, la.rowhash
FROM    asr_datastore.land_attribute AS la INNER JOIN
        asr_datastore.account AS a ON la.account_no = a.account_no AND a.account_status = 'A'


GO
/****** Object:  Table [asr_datastore].[azure_building_permit_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[azure_building_permit_authority](
	[bldg_permit_auth_id] [int] NOT NULL,
	[authority_name] [nvarchar](100) NULL,
	[phone] [nvarchar](30) NULL,
	[street] [nvarchar](220) NULL,
	[city] [nvarchar](100) NULL,
	[zip] [nvarchar](20) NULL,
	[associated_tax_authority_no] [nvarchar](30) NOT NULL,
	[email] [nvarchar](220) NULL,
	[URL] [nvarchar](220) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
 CONSTRAINT [PK_building_permit_authority] PRIMARY KEY CLUSTERED 
(
	[bldg_permit_auth_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_azure_building_permit_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [asr_app_query].[v_azure_building_permit_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      9/1/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access azure_building_permit_authority for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT CAST(associated_tax_authority_no as INT) bldg_permit_auth_id, authority_name, phone, street, city, zip, associated_tax_authority_no, email, URL, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.azure_building_permit_authority;









GO
/****** Object:  Table [asr_datastore].[value]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[value](
	[account_no] [varchar](30) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[value_group_code] [numeric](15, 0) NOT NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[raw_tax_dollars] [numeric](15, 2) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[mill_levy] [numeric](11, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
 CONSTRAINT [pk_value] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[tax_year] ASC,
	[value_group_code] ASC,
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_value]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_app_query].[v_value]
AS
SELECT        v.account_no, a.account_type, v.tax_year, v.value_group_code, v.tax_district_no, v.raw_assessed_value, 
              v.raw_tax_dollars, v.actual_value, v.mill_levy, v.create_datetime, v.create_user_id, v.update_datetime, 
              v.update_user_id, v.rowhash
FROM          asr_datastore.value AS v INNER JOIN
              asr_datastore.account AS a ON v.account_no = a.account_no
WHERE        (a.account_status = 'A') AND (v.tax_year <= YEAR(GETDATE()))

GO
/****** Object:  Table [asr_datastore].[azure_important_PPLinks]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[azure_important_PPLinks](
	[ID] [int] NOT NULL,
	[LinkName] [nvarchar](220) NULL,
	[LinkURL] [nvarchar](220) NULL,
	[LinkOrder] [decimal](28, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
 CONSTRAINT [PK_azure_important_PPLinks] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_azure_important_PPLinks]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [asr_app_query].[v_azure_important_PPLinks]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/23/2017
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access azure_important_PPLinks for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT ID, LinkName, LinkURL, LinkOrder, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.azure_important_PPLinks;










GO
/****** Object:  View [asr_open_data_query].[v_property_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create view [asr_open_data_query].[v_property_filing]
as

SELECT     FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, FILING_DESCRIPTION AS FILING_DESCR
FROM        (SELECT     FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, FILING_DESCRIPTION, ROW_NUMBER() OVER (PARTITION BY FilingKey
                   ORDER BY FILING_NO DESC) AS DedupKey
FROM        (SELECT     isnull(cast(SUB_FILING_RECORDING_NO AS varchar(max)), '') + isnull(cast(SUBDIVISION_NAME AS varchar(max)), '') + isnull(cast(FILING_NO AS varchar(max)), '') AS FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, 
                                     FILING_DESCRIPTION
                   FROM        [assessor_datastore].[asr_datastore].[sub_filing] pf) a) x
WHERE     x.DedupKey = 1
GO
/****** Object:  Table [location].[location_data]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [location].[location_data](
	[Account_Number] [varchar](50) NULL,
	[State_Parcel_number] [nvarchar](15) NULL,
	[x] [numeric](30, 8) NULL,
	[y] [numeric](30, 8) NULL,
	[Location] [nvarchar](32) NULL,
	[write_date] [datetime2](7) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[improvement_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement_detail](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [numeric](5, 0) NOT NULL,
	[improvement_detail_id] [numeric](15, 0) NOT NULL,
	[improvement_detail_type] [varchar](50) NOT NULL,
	[improvement_detail_type_description] [varchar](100) NULL,
	[detail_unit_count] [numeric](15, 4) NULL,
	[addon_code] [varchar](50) NULL,
	[addon_code_description] [varchar](100) NULL,
	[detail_built_year] [varchar](4) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [pk_improvement_detail] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[improvement_no] ASC,
	[improvement_detail_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_open_data_query].[v_property_improvements]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_open_data_query].[v_property_improvements]
AS
SELECT     ImprovementKey, ACCOUNT_NO, BUILDING_ID, STYLE, OCCUPANCY_CODE, BUILT_AS_CODE, BUILT_AS, QUALITY_CODE, PROPERTY_TYPE_CODE, IMPROVEMENT_SF, COMPLETION_PERCENT, UNIT_TYPE, NO_OF_FIREPLACE, TOTAL_GARAGE_SF, 
                  WALKOUT_BASEMENT_FLAG, TOTAL_PORCH_SF, TOTAL_FINISHED_BASEMENT_SF, TOTAL_UNFINISHED_BASEMENT_SF, ROOF_CONSTRUCTION_TYPE_CODE, BUILT_AS_SF, EXTERIOR_CONSTRUCTION_TYPE, INTERIOR_FINISH_TYPE, NO_OF_STORY, 
                  ROOF_MATERIAL_CODE, FLOOR_MATERIAL_TYPE_CODE, NO_OF_BEDROOM, NO_OF_BATHROOM, BUILT_YEAR, REMODELED_YEAR, LENGTH_OF_MOBILE_HOME, WIDTH_OF_MOBILE_HOME, AVERAGE_STORY_HEIGHT, NO_OF_UNIT, 
                  SPRINKLER_COVERAGE_SF, CONDITION, HVAC, Location
FROM        (SELECT     ImprovementKey, ACCOUNT_NO, BUILDING_ID, STYLE, OCCUPANCY_CODE, BUILT_AS_CODE, BUILT_AS, QUALITY_CODE, PROPERTY_TYPE_CODE, IMPROVEMENT_SF, COMPLETION_PERCENT, UNIT_TYPE, NO_OF_FIREPLACE, TOTAL_GARAGE_SF, 
                                     WALKOUT_BASEMENT_FLAG, TOTAL_PORCH_SF, TOTAL_FINISHED_BASEMENT_SF, TOTAL_UNFINISHED_BASEMENT_SF, ROOF_CONSTRUCTION_TYPE_CODE, BUILT_AS_SF, EXTERIOR_CONSTRUCTION_TYPE, INTERIOR_FINISH_TYPE, 
                                     NO_OF_STORY, ROOF_MATERIAL_CODE, FLOOR_MATERIAL_TYPE_CODE, NO_OF_BEDROOM, NO_OF_BATHROOM, BUILT_YEAR, REMODELED_YEAR, LENGTH_OF_MOBILE_HOME, WIDTH_OF_MOBILE_HOME, AVERAGE_STORY_HEIGHT, 
                                     NO_OF_UNIT, SPRINKLER_COVERAGE_SF, CONDITION, HVAC, Location, ROW_NUMBER() OVER (PARTITION BY ImprovementKey
                   ORDER BY Built_Year DESC) AS DedupKey
FROM        (SELECT DISTINCT 
                                     imp.account_no AS ACCOUNT_NO, imp.improvement_no AS BUILDING_ID, impocc.occupancy_code_description AS style, impocc.occupancy_code, impba.built_as_code, impba.built_as_code_description AS BUILT_AS, 
                                     imp.improvement_quality AS quality_code, imp.property_type AS property_type_code, imp.improvement_sf, FLOOR(imp.completed_percent * 100) AS completion_percent, imp.improvement_unit_type AS unit_type, 
                                     FLOOR(ISNULL(impdet1.no_of_fireplaces, 0)) AS no_of_fireplace, FLOOR(ISNULL(impdet2.total_garage_sf, 0)) AS total_garage_sf, ISNULL(impdet3.walkout_basement_flag, 'N') AS walkout_basement_flag, FLOOR(ISNULL(impdet4.total_porch_sf, 0)) 
                                     AS total_porch_sf, FLOOR(ISNULL(impdet5.total_finished_basement_sf, 0)) AS total_finished_basement_sf, FLOOR(ISNULL(impdet6.total_unfinished_basement_sf, 0)) AS total_unfinished_basement_sf, 
                                     impba.roof_construction_type AS roof_construction_type_code, impba.built_as_sf, impba.exterior_construction_type, impba.interior_finish_type, FLOOR(ISNULL(impba.no_of_story, 0)) AS no_of_story, impba.roof_material_type AS roof_material_code, 
                                     impba.floor_material_type AS floor_material_type_code, FLOOR(ISNULL(impba.bedroom_count, 0)) AS no_of_bedroom, FLOOR(ISNULL(impba.bathroom_count, 0)) AS no_of_bathroom, impba.built_year, impba.remodeled_year, 
                                     CASE WHEN LEFT(imp.account_no, 1) = 'M' THEN impba.built_as_length ELSE 0 END AS length_of_mobile_home, CASE WHEN LEFT(imp.account_no, 1) = 'M' THEN impba.built_as_width ELSE 0 END AS width_of_mobile_home, 
                                     impba.typical_story_height AS average_story_height, impba.total_unit_count AS no_of_unit, impba.sprinkler_coverage_sf, imp.condition_type AS condition, impba.heat_type AS hvac, (ISNULL(cast(imp.account_no AS varchar(max)), '') 
                                     + ISNULL(cast(imp.improvement_no AS varchar(max)), '') + ISNULL(cast(impocc.occupancy_code AS varchar(max)), '') + ISNULL(cast(impba.built_as_code AS varchar(max)), '') + ISNULL(cast(impba.roof_construction_type AS varchar(max)), '') 
                                     + ISNULL(cast(impba.built_year AS varchar(max)), '')) AS improvementkey
                   FROM        [assessor_datastore].[asr_datastore].[improvement] imp INNER JOIN
                                      [assessor_datastore].[asr_datastore].account acc ON imp.account_no = acc.account_no INNER JOIN
                                      [assessor_datastore].[asr_datastore].improvement_built_as impba ON imp.account_no = impba.account_no AND imp.improvement_no = impba.improvement_no INNER JOIN
                                      [assessor_datastore].[asr_datastore].improvement_occupancy impocc ON imp.account_no = impocc.account_no AND imp.improvement_no = impocc.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, SUM(detail_unit_count) AS no_of_fireplaces
                                          FROM        [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     addon_code IN ('95', '285', '290')
                                          GROUP BY account_no, improvement_no) impdet1 ON imp.account_no = impdet1.account_no AND imp.improvement_no = impdet1.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, SUM(detail_unit_count) AS total_garage_sf
                                          FROM        [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     improvement_detail_type = 'Garage'
                                          GROUP BY account_no, improvement_no) impdet2 ON imp.account_no = impdet2.account_no AND imp.improvement_no = impdet2.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, CASE WHEN COUNT(improvement_detail_type_description) = 0 THEN 'N' ELSE 'Y' END AS Walkout_basement_flag
                                          FROM        [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     improvement_detail_type = 'Basement' AND improvement_detail_type_description = 'Walkout'
                                          GROUP BY account_no, improvement_no) impdet3 ON imp.account_no = impdet3.account_no AND imp.improvement_no = impdet3.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, SUM(detail_unit_count) AS total_porch_sf
                                          FROM       [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     improvement_detail_type = 'Porch'
                                          GROUP BY account_no, improvement_no) impdet4 ON imp.account_no = impdet4.account_no AND imp.improvement_no = impdet4.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, SUM(detail_unit_count) AS total_finished_basement_sf
                                          FROM        [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     improvement_detail_type = 'Basement' AND improvement_detail_type_description = 'Finished'
                                          GROUP BY account_no, improvement_no) impdet5 ON imp.account_no = impdet5.account_no AND imp.improvement_no = impdet5.improvement_no LEFT JOIN
                                         (SELECT     account_no, improvement_no, SUM(detail_unit_count) AS total_unfinished_basement_sf
                                          FROM       [assessor_datastore].[asr_datastore].[improvement_detail]
                                          WHERE     improvement_detail_type = 'Basement' AND improvement_detail_type_description <> 'Finished' AND improvement_detail_type_description <> 'Walkout' AND improvement_detail_type_description <> 'Garden Level' AND 
                                                            improvement_detail_type_description <> 'Minimal Finish' AND improvement_detail_type_description <> 'Fair Finish'
                                          GROUP BY account_no, improvement_no) impdet6 ON imp.account_no = impdet6.account_no AND imp.improvement_no = impdet6.improvement_no
                   WHERE     acc.account_status = 'A') a LEFT OUTER JOIN
                      (SELECT     *
                       FROM        (SELECT     Account_Number, location, row_number() OVER (partition BY Account_Number
                                          ORDER BY location) AS orderval
                       FROM        location.location_data) ld
WHERE     orderval = 1) b ON a.Account_NO = b.Account_Number) x
GO
/****** Object:  Table [asr_datastore].[account_neighborhood]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_neighborhood](
	[account_no] [varchar](30) NOT NULL,
	[neighborhood_code] [varchar](50) NOT NULL,
	[property_type] [varchar](50) NOT NULL,
	[neighborhood_extension] [varchar](50) NOT NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
 CONSTRAINT [pk_account_neighborhood] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[neighborhood_code] ASC,
	[property_type] ASC,
	[neighborhood_extension] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[real_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[real_account](
	[account_no] [varchar](30) NOT NULL,
	[no_of_buildings] [varchar](10) NOT NULL,
	[vacant_flag] [bit] NOT NULL,
	[improvement_only_flag] [bit] NOT NULL,
	[tif_flag] [bit] NOT NULL,
	[zoning_code] [varchar](50) NULL,
	[zoning_code_description] [varchar](100) NULL,
	[platted_flag] [bit] NOT NULL,
	[default_lea] [varchar](30) NULL,
	[default_lea_description] [varchar](100) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[total_improvement_interest_percent] [numeric](9, 6) NULL,
	[total_land_interest_percent] [numeric](9, 6) NULL,
 CONSTRAINT [pk_real_account] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_open_data_query].[v_property_location]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_open_data_query].[v_property_location]
AS

SELECT     LocationKey, ACCOUNT_NO, ACCOUNT_TYPE_CODE, STATE_PARCEL_NO, ADDRESS_NUMBER, PRE_DIRECTION_CODE, STREET_NAME, STREET_TYPE_CODE, UNIT_NO, LOCATION_ZIP_CODE, CITY_NAME, LEGAL_DESCR, SECTION, TOWNSHIP, RANGE, 
                  QUARTER, LAND_ECONOMIC_AREA_CODE, VACANT_FLAG, TOTAL_NET_ACRES, TAX_DISTRICT_NO, NEIGHBORHOOD_CODE_EXT, Location
FROM        (SELECT     LocationKey, ACCOUNT_NO, ACCOUNT_TYPE_CODE, STATE_PARCEL_NO, ADDRESS_NUMBER, PRE_DIRECTION_CODE, STREET_NAME, STREET_TYPE_CODE, UNIT_NO, LOCATION_ZIP_CODE, CITY_NAME, LEGAL_DESCR, SECTION, TOWNSHIP, 
                                     RANGE, QUARTER, LAND_ECONOMIC_AREA_CODE, VACANT_FLAG, TOTAL_NET_ACRES, TAX_DISTRICT_NO, NEIGHBORHOOD_CODE_EXT,  Location, ROW_NUMBER() OVER (PARTITION BY LocationKey
                   ORDER BY CITY_NAME DESC) AS DedupKey
FROM        (SELECT     ac.account_no AS ACCOUNT_NO, ac.account_type AS ACCOUNT_TYPE_CODE, ac.state_parcel_no AS STATE_PARCEL_NO, pa.address_number, pa.pre_direction_code, pa.street_name, pa.street_type_code, pa.unit_no, pa.location_zip_code, 
                                     pa.city_name, ac.legal_description AS LEGAL_DESCR, ac.section, ac.township, ac.range, ac.qtr AS QUARTER, ra.default_lea AS LAND_ECONOMIC_AREA_CODE, CASE WHEN ra.vacant_flag = 0 THEN 'N' ELSE 'Y' END AS VACANT_FLAG, 
                                     ISNULL(la.total_net_acres, 0) AS total_net_acres, ac.tax_district_no, an.neighborhood_code_ext, isnull(cast(ac.account_no AS varchar(max)), '') + isnull(cast(pa.address_number AS varchar(max)), '') 
                                     + isnull(cast(pa.pre_direction_code AS varchar(max)), '') + isnull(cast(pa.street_name AS varchar(max)), '') + isnull(cast(pa.street_type_code AS varchar(max)), '') + isnull(cast(pa.unit_no AS varchar(max)), '') 
                                     + isnull(cast(pa.location_zip_code AS varchar(max)), '') AS LocationKey
                   FROM        [assessor_datastore].[asr_datastore].[account] ac LEFT JOIN
                                     [assessor_datastore].[asr_datastore].[account_property_address] pa ON ac.account_no = pa.account_no LEFT JOIN
                                     [assessor_datastore].[asr_datastore].[real_account] ra ON ac.account_no = ra.account_no LEFT JOIN
                                         (SELECT     account_no, SUM(land_acres) AS total_net_acres
                                          FROM        [assessor_datastore].[asr_datastore].[land_abstract]
                                          GROUP BY account_no) la ON ac.account_no = la.account_no LEFT JOIN
                                         (SELECT p1.account_no,
                                          stuff( (SELECT ', '+ neighborhood_code + '-' + neighborhood_extension 
                                          FROM [assessor_datastore].[asr_datastore].[account_neighborhood] p2
                                          WHERE p2.account_no = p1.account_no
                                          ORDER BY neighborhood_code
                                          FOR XML PATH(''), TYPE).value('.', 'varchar(max)')
                                          ,1,1,'')       AS Neighborhood_Code_Ext
                                          FROM [assessor_datastore].[asr_datastore].[account_neighborhood] p1
                                          GROUP BY account_no) an ON ac.account_no = an.account_no 
                   WHERE     account_status = 'A' AND LEFT(ac.account_no, 1) IN ('M', 'R')) a LEFT OUTER JOIN
                      (SELECT     *
                       FROM        (SELECT     Account_Number, location, row_number() OVER (partition BY Account_Number
                                          ORDER BY location) AS orderval
                       FROM        location.location_data) ld
WHERE     orderval = 1) b ON a.account_no = b.Account_Number) x
WHERE     x.DedupKey = 1
GO
/****** Object:  Table [asr_datastore].[account_owner_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_owner_address](
	[account_no] [varchar](30) NOT NULL,
	[person_code] [char](18) NOT NULL,
	[primary_owner_flag] [bit] NOT NULL,
	[owner_name] [varchar](256) NOT NULL,
	[owner_name_1] [varchar](256) NOT NULL,
	[owner_name_2] [varchar](256) NULL,
	[ownership_percent] [numeric](9, 8) NULL,
	[federal_id_no] [varchar](30) NULL,
	[address_line_1] [varchar](80) NULL,
	[address_line_2] [varchar](80) NULL,
	[city_name] [varchar](80) NULL,
	[state] [varchar](80) NULL,
	[zip_code] [varchar](30) NULL,
	[country] [varchar](80) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[private_flag] [bit] NULL,
 CONSTRAINT [pk_account_owner_address] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[person_code] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_open_data_query].[v_property_owner]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_open_data_query].[v_property_owner]
AS

SELECT OwnerKey, 
		ACCOUNT_NO,  
       OWNER_NAME,  
	   MAILING_ADDRESS_LINE_1,  
	   MAILING_ADDRESS_LINE_2,  
	   MAILING_CITY_NAME,  
	   MAILING_STATE,  
	   MAILING_ZIP_CODE, 
	   Location
FROM 
(
SELECT OwnerKey, 
		ACCOUNT_NO,  
       OWNER_NAME,  
	   MAILING_ADDRESS_LINE_1,  
	   MAILING_ADDRESS_LINE_2,  
	   MAILING_CITY_NAME,  
	   MAILING_STATE,  
	   MAILING_ZIP_CODE, 
	   Location, 
	   ROW_NUMBER() OVER (PARTITION BY OwnerKey ORDER BY MAILING_ZIP_CODE desc) as DedupKey
FROM
(
SELECT  ac.account_no AS ACCOUNT_NO, oa.owner_name AS OWNER_NAME, oa.address_line_1 AS MAILING_ADDRESS_LINE_1, oa.address_line_2 AS MAILING_ADDRESS_LINE_2,
        oa.city_name AS MAILING_CITY_NAME, oa.state AS MAILING_STATE, oa.zip_code AS MAILING_ZIP_CODE, 
		isnull(cast(ac.account_no as varchar(max)),'')+isnull(cast(oa.owner_name as varchar(max)),'') as OwnerKey
FROM  [assessor_datastore].[asr_datastore].[account] ac LEFT JOIN
     [assessor_datastore].[asr_datastore].[account_owner_address] oa ON ac.account_no = oa.account_no 
  where account_status = 'A' 
  ) a
  left outer join (SELECT *
			FROM
			(Select Account_Number
					,location
					,row_number() over(partition BY Account_Number Order By location) as orderval
			FROM location.location_data 
			) ld 
  WHERE orderval = 1) b on a.ACCOUNT_NO = b.Account_Number
   ) x
  WHERE x.DedupKey = 1
GO
/****** Object:  View [asr_open_data_query].[v_property_sales]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_open_data_query].[v_property_sales]
AS
SELECT     SalesKey, ACCOUNT_NO, SALE_DATE, SALE_PRICE, DEED_TYPE, GRANTOR, GRANTEE, BOOK, PAGE, RECORDING_NO, Location
FROM        (SELECT     SalesKey, ACCOUNT_NO, SALE_DATE, SALE_PRICE, DEED_TYPE, GRANTOR, GRANTEE, BOOK, PAGE, RECORDING_NO, Location, ROW_NUMBER() OVER (PARTITION BY SalesKey
                   ORDER BY SALE_DATE DESC) AS DedupKey
FROM        (SELECT DISTINCT 
                                     ac.account_no AS ACCOUNT_NO, sl.sale_date, CAST(ROUND(sl.sale_price,0) AS INT) AS sale_price, sl.deed_code_description AS DEED_TYPE, sl.grantor, sl.grantee, sl.book, sl.page, sl.recording_no, isnull(cast(ac.account_no AS varchar(max)), '') 
                                     + isnull(cast(sl.recording_no AS varchar(max)), '') AS SalesKey
                   FROM        [assessor_datastore].[asr_datastore].[sale_account] sa INNER JOIN
                                   [assessor_datastore].[asr_datastore].[sale] sl ON sa.recording_no = sl.recording_no INNER JOIN
                                   [assessor_datastore].[asr_datastore].[account] ac ON sa.account_no = ac.account_no
                   WHERE     account_status = 'A' AND LEFT(ac.account_no, 1) IN ('M', 'R') AND sl.non_sale_flag = 0) a LEFT OUTER JOIN
                      (SELECT     *
                       FROM        (SELECT     Account_Number, location, row_number() OVER (partition BY Account_Number
                                          ORDER BY location) AS orderval
                       FROM        location.location_data) ld
WHERE     orderval = 1) b ON a.ACCOUNT_NO = b.Account_Number) x
WHERE     x.DedupKey = 1
GO
/****** Object:  Table [asr_datastore].[account_platted_lot]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_platted_lot](
	[ACCOUNT_NO] [varchar](30) NOT NULL,
	[PARCEL_NO] [varchar](30) NOT NULL,
	[LOT] [varchar](30) NULL,
	[TRACT] [varchar](30) NULL,
	[BLOCK] [varchar](30) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL,
 CONSTRAINT [PK_account_platted_lot] PRIMARY KEY CLUSTERED 
(
	[ACCOUNT_NO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_open_data_query].[v_property_subdivision]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_open_data_query].[v_property_subdivision]
AS

SELECT	SubDivisionKey, 
		ACCOUNT_NO,  
		SUB_FILING_RECORDING_NO,  
		SUBDIVISION_NAME,  
		LOT_NO,  
		BLOCK_NO,  
		TRACT_NO, 
		Location
FROM 
(
SELECT SubDivisionKey, 
	   ACCOUNT_NO,  
       SUB_FILING_RECORDING_NO,  
	   SUBDIVISION_NAME,  
	   LOT_NO,  
	   BLOCK_NO,  
	   TRACT_NO, 
	   Location, 
	   ROW_NUMBER() OVER (PARTITION BY SubDivisionKey ORDER BY LOT_NO desc) as DedupKey
FROM
(
SELECT  DISTINCT ac.account_no AS ACCOUNT_NO, ac.sub_filing_recording_no, sf.subdivision_name, apl.LOT AS LOT_NO, 
                 apl.BLOCK AS BLOCK_NO, apl.TRACT AS TRACT_NO,
				 isnull(cast(ac.account_no as varchar(max)),'')+isnull(cast(ac.sub_filing_recording_no as varchar(max)),'') as SubDivisionKey
FROM [assessor_datastore].[asr_datastore].[account] ac LEFT JOIN
     [assessor_datastore].[asr_datastore].[account_platted_lot] apl ON ac.account_no = apl.ACCOUNT_NO AND ac.state_parcel_no = apl.PARCEL_NO LEFT JOIN
     [assessor_datastore].[asr_datastore].[sub_filing] sf ON ac.sub_filing_recording_no = sf.sub_filing_recording_no
  where account_status = 'A' AND LEFT(ac.account_no,1) IN ('M','R') 
  ) a
  left outer join (SELECT *
			FROM
			(Select Account_Number
					,location
					,row_number() over(partition BY Account_Number Order By location) as orderval
			FROM location.location_data 
			) ld 
  WHERE orderval = 1) b on a.ACCOUNT_NO = b.Account_Number
   ) x 
  WHERE x.DedupKey = 1
GO
/****** Object:  Table [asr_datastore].[account_subtype_lkup]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_subtype_lkup](
	[account_subtype_code] [varchar](30) NOT NULL,
	[account_type_code] [varchar](30) NOT NULL,
 CONSTRAINT [PK_account_subtype_lkup] PRIMARY KEY CLUSTERED 
(
	[account_subtype_code] ASC,
	[account_type_code] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[valuation_class_code]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[valuation_class_code](
	[valuation_class_code] [varchar](50) NULL,
	[code_descr] [varchar](256) NULL,
	[valuation_type_code] [varchar](50) NULL,
	[exempt_flag] [varchar](1) NULL,
	[assessment_ratio] [numeric](15, 6) NULL,
	[row_current_flag] [varchar](1) NULL,
	[create_user_id] [varchar](30) NULL,
	[create_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[account_valuation]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_valuation](
	[account_no] [varchar](30) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[valuation_type_code] [varchar](1) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[assessed_value] [numeric](15, 2) NULL,
	[net_acres] [numeric](15, 4) NULL,
	[new_growth_flag] [bit] NULL,
	[valuation_class_code_description] [varchar](100) NULL,
	[create_datetime] [datetime2](7) NULL,
	[create_user_id] [varchar](60) NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
 CONSTRAINT [pk_account_valuation] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[valuation_class_code] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_open_data_query].[v_property_values]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_open_data_query].[v_property_values]
AS
SELECT     ValueKey, ACCOUNT_NO, ACTUAL_VALUE, ASSESSED_VALUE, VALUATION_CLASS_CODE, VALUATION_DESCRIPTION, EXEMPT_FLAG, SUBTYPE, VALUATION_TYPE_CODE, ACCOUNT_TYPE, Location
FROM        (SELECT     ValueKey, ACCOUNT_NO, ACTUAL_VALUE, ASSESSED_VALUE, VALUATION_CLASS_CODE, VALUATION_DESCRIPTION, EXEMPT_FLAG, SUBTYPE, VALUATION_TYPE_CODE, ACCOUNT_TYPE, Location, ROW_NUMBER() OVER (PARTITION BY 
                                     ValueKey
                   ORDER BY SUBTYPE DESC) AS DedupKey
FROM        (SELECT DISTINCT 
                                     av.account_no AS ACCOUNT_NO, av.actual_value, av.assessed_value, av.valuation_class_code, av.valuation_class_code_description AS VALUATION_DESCRIPTION, vcc.exempt_flag, st.account_subtype_code AS SUBTYPE, ac.account_type, 
                                     vcc.valuation_type_code, isnull(cast(av.account_no AS varchar(max)), '') + isnull(cast(av.valuation_class_code AS varchar(max)), '') AS ValueKey
                   FROM        [assessor_datastore].[asr_datastore].[account] ac  LEFT JOIN
                                     [assessor_datastore].[asr_datastore].[account_valuation] av ON ac.account_no = av.account_no LEFT JOIN
                                     [assessor_datastore].[asr_datastore].[account_subtype_lkup] st ON ac.account_type = st.account_type_code LEFT JOIN
                                     [assessor_datastore].[dbo].[valuation_class_code] vcc ON av.valuation_class_code = vcc.valuation_class_code
                   WHERE     ac.account_status = 'A') a LEFT OUTER JOIN
                      (SELECT     *
                       FROM        (SELECT     Account_Number, location, row_number() OVER (partition BY Account_Number
                                          ORDER BY location) AS orderval
                       FROM        location.location_data) ld
WHERE     orderval = 1) b ON a.ACCOUNT_NO = b.Account_Number) x
WHERE     x.DedupKey = 1
AND	      ACCOUNT_NO IS NOT NULL
GO
/****** Object:  View [asr_datastore].[tool_show_record_count]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_datastore].[tool_show_record_count]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/1/2016
Developer:     Christine Lin
Comments:      Initial creation
               List table record counts
Mod #:  2
Mod Date:      3/2/2016
Developer:     Christine Lin
Comments:      added parcel details related tables
*************************************************************************************/
AS
SELECT 'asr_datastore.account' AS table_name, COUNT(1) AS record_count
FROM [asr_datastore].[account] 
UNION ALL
SELECT 'asr_datastore.account_neighborhood', COUNT(1) AS record_count
FROM [asr_datastore].[account_neighborhood]
UNION ALL
SELECT 'asr_datastore.account_owner_address', COUNT(1) AS record_count
FROM [asr_datastore].[account_owner_address]
UNION ALL
SELECT 'asr_datastore.account_property_address', COUNT(1) AS record_count
FROM [asr_datastore].[account_property_address]
UNION ALL
SELECT 'asr_datastore.sub_filing', COUNT(1) AS record_count
FROM [asr_datastore].[sub_filing]
UNION ALL
SELECT 'asr_datastore.tax_authority', COUNT(1) AS record_count
FROM [asr_datastore].[tax_authority]
UNION ALL
SELECT 'asr_datastore.tax_district', COUNT(1) AS record_count
FROM [asr_datastore].[tax_district]
UNION ALL
SELECT 'asr_datastore.tax_district_authority', COUNT(1) AS record_count
FROM [asr_datastore].[tax_district_authority]
UNION ALL
SELECT 'asr_datastore.improvement', COUNT(1) AS record_count
FROM [asr_datastore].[improvement]
UNION ALL
SELECT 'asr_datastore.improvement_built_as', COUNT(1) AS record_count
FROM [asr_datastore].[improvement_built_as]
UNION ALL
SELECT 'asr_datastore.improvement_detail', COUNT(1) AS record_count
FROM [asr_datastore].[improvement_detail]
UNION ALL
SELECT 'asr_datastore.improvement_occupancy', COUNT(1) AS record_count
FROM [asr_datastore].[improvement_occupancy]
UNION ALL
SELECT 'asr_datastore.land_abstract', COUNT(1) AS record_count
FROM [asr_datastore].[land_abstract]
UNION ALL
SELECT 'asr_datastore.real_account', COUNT(1) AS record_count
FROM [asr_datastore].[real_account]
UNION ALL
SELECT 'asr_datastore.sale', COUNT(1) AS record_count
FROM [asr_datastore].[sale]
UNION ALL
SELECT 'asr_datastore.sale_account', COUNT(1) AS record_count
FROM [asr_datastore].[sale_account]
UNION ALL
SELECT 'asr_datastore.tax_authority_fund', COUNT(1) AS record_count
FROM [asr_datastore].[tax_authority_fund]
;







GO
/****** Object:  View [asr_app_query].[v_azure_important_dates_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_azure_important_dates_old]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/2/2017
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access azure_important_dates for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT ID, Description, Reappraisal, Event_Name, Intervening, Category, create_datetime, create_user_id, update_datetime, update_user_id,Title
FROM asr_datastore.azure_important_dates;




GO
/****** Object:  View [asr_posse_query].[v_account_fact]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [asr_posse_query].[v_account_fact]

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/13/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access account_fact records for consumption by POSSE

*************************************************************************************/
AS
SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  CAST(INGRP1.ACCOUNT_SUBTYPE_CODE AS VARCHAR) ACCOUNT_SUBTYPE_CODE,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  CAST(INGRP1.LAND_ECONOMIC_AREA_CODE AS VARCHAR) LAND_ECONOMIC_AREA_CODE,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  CAST(INGRP1.SUB_FILING_RECORDING_NO AS VARCHAR) SUB_FILING_RECORDING_NO,
  INGRP1.OWNER_NAME OWNER_NAME,
  INGRP1.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP1.ADDRESS_LINE_2 ADDRESS_LINE_2,
  CAST(INGRP1.ADDRESS_LINE_3 AS VARCHAR) ADDRESS_LINE_3,
  INGRP1.CITY_NAME_1 CITY_NAME_1,
  INGRP1.STATE STATE,
  INGRP1.ZIP_CODE ZIP_CODE,
  INGRP1.COUNTRY COUNTRY,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  SUBSTRING(INGRP1.ADDRESS_NUMBER,1,10) ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  INGRP2.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  INGRP2.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.FEDERAL_ID_NO FEDERAL_ID_NO,
  INGRP1.LEGAL_DESCR LEGAL_DESCR,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCR,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP1.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.OWNER_NAME OWNER_NAME,
  INGRP2.FEDERAL_ID_NO FEDERAL_ID_NO,
  INGRP2.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP2.ADDRESS_LINE_2 ADDRESS_LINE_2,
  INGRP2.ADDRESS_LINE_3 ADDRESS_LINE_3,
  INGRP2.CITY_NAME CITY_NAME_1,
  INGRP2.STATE STATE,
  INGRP2.ZIP_CODE ZIP_CODE,
  INGRP2.COUNTRY COUNTRY,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP2.UNIT_NO UNIT_NO,
  INGRP2.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP2.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP2.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP2.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP2.STREET_NAME STREET_NAME,
  INGRP2.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP2.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP2.CITY_NAME CITY_NAME,
  INGRP2.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL LAND_ECONOMIC_AREA_CODE,
  --asr_datastore.REAL_ACCOUNT.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  --NULL LEGAL_DESCRIPTION,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
ACCOUNT.ACCOUNT_NO ACCOUNT_NO,
ACCOUNT.ACCOUNT_STATUS ACCOUNT_STATUS,
ACCOUNT.ACCOUNT_TYPE ACCOUNT_TYPE,
ACCOUNT.APPRAISAL_TYPE ACCOUNT_SUBTYPE_CODE,
  --asr_datastore.ACCOUNT.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  ACCOUNT.STATE_PARCEL_NO STATE_PARCEL_NO,
  ACCOUNT.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  ACCOUNT.SUB_FILING_RECORDING_NO,
  --ACCOUNT_PLATTED_LOT.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL REDUCED_MILL_LEVY,
  --ACCOUNT.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  NULL REDUCED_TAX_RATE,
  --ACCOUNT.REDUCED_TAX_RATE REDUCED_TAX_RATE
  ACCOUNT.LEGAL_DESCRIPTION
FROM
    asr_datastore.ACCOUNT  ACCOUNT   
 LEFT OUTER JOIN   asr_datastore.ACCOUNT_PLATTED_LOT  ACCOUNT_PLATTED_LOT ON ( ( ACCOUNT.STATE_PARCEL_NO = ACCOUNT_PLATTED_LOT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN   asr_datastore.REAL_ACCOUNT  REAL_ACCOUNT ON ( ( INGRP1.ACCOUNT_NO = REAL_ACCOUNT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_PROPERTY_ADDRESS.UNIT_NO UNIT_NO,
  ACCOUNT_PROPERTY_ADDRESS.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER ADDRESS_NUMBER,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  ACCOUNT_PROPERTY_ADDRESS.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.STREET_NAME STREET_NAME,
  ACCOUNT_PROPERTY_ADDRESS.STREET_TYPE_CODE STREET_TYPE_CODE,
  ACCOUNT_PROPERTY_ADDRESS.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_PROPERTY_ADDRESS.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  ACCOUNT_PROPERTY_ADDRESS.ACCOUNT_NO ACCOUNT_NO
FROM
    asr_datastore.ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS   
 --JOIN   ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS ON ( ( ACCOUNT_PROPERTY_ADDRESS.SITUS_ADDRESS_EID = ACCOUNT_SITUS_ADDRESS.SITUS_ADDRESS_EID ) )
  WHERE 
  ( ACCOUNT_PROPERTY_ADDRESS.PRIMARY_ADDRESS_FLAG = 1  )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_OWNER_ADDRESS.ACCOUNT_NO ACCOUNT_NO,
  ACCOUNT_OWNER_ADDRESS.OWNER_NAME OWNER_NAME,
  ACCOUNT_OWNER_ADDRESS.FEDERAL_ID_NO FEDERAL_ID_NO,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_1 ADDRESS_LINE_1,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_2 ADDRESS_LINE_2,
  NULL ADDRESS_LINE_3,
  ACCOUNT_OWNER_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_OWNER_ADDRESS.STATE STATE,
  ACCOUNT_OWNER_ADDRESS.ZIP_CODE ZIP_CODE,
  ACCOUNT_OWNER_ADDRESS.COUNTRY COUNTRY
FROM
    asr_datastore.ACCOUNT_OWNER_ADDRESS  ACCOUNT_OWNER_ADDRESS
  WHERE 
  ( ACCOUNT_OWNER_ADDRESS.PRIMARY_OWNER_FLAG = 1 )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  ( SELECT
  AGGREGATOR.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  AGGREGATOR.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  AGGREGATOR.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  AGGREGATOR.ACCOUNT_NO ACCOUNT_NO
FROM
  (SELECT
  SUM(ACCOUNT_VALUATION.ACTUAL_VALUE) TOTAL_ACTUAL_VALUE,
  SUM(ACCOUNT_VALUATION.ASSESSED_VALUE) TOTAL_ASSESSED_VALUE,
  SUM(ACCOUNT_VALUATION.NET_ACRES) TOTAL_NET_ACRES,
  ACCOUNT_VALUATION.ACCOUNT_NO ACCOUNT_NO
FROM
  asr_datastore.ACCOUNT_VALUATION  ACCOUNT_VALUATION
GROUP BY
ACCOUNT_VALUATION.ACCOUNT_NO) AGGREGATOR  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) );




















GO
/****** Object:  Table [asr_datastore].[realnov]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[realnov](
	[ACCOUNTNO] [varchar](30) NOT NULL,
	[TAXYEAR] [numeric](4, 0) NOT NULL,
	[PARCELNO] [varchar](30) NULL,
	[PROPADDRESS] [varchar](81) NULL,
	[LEGALDESCRIPTION1] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION2] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION3] [nvarchar](1024) NULL,
	[NAME1] [varchar](40) NULL,
	[NAME2] [varchar](40) NULL,
	[PNAME1] [varchar](40) NULL,
	[PNAME2] [varchar](40) NULL,
	[OWNERADDRESS1] [varchar](40) NULL,
	[OWNERADDRESS2] [varchar](40) NULL,
	[OWNERCITY] [varchar](50) NULL,
	[OWNERSTATE] [varchar](2) NULL,
	[OWNERZIP] [varchar](5) NULL,
	[PROPCLASS1] [varchar](50) NULL,
	[PRIORVALUE1] [varchar](8000) NULL,
	[CURRENTVALUE1] [varchar](8000) NULL,
	[INCREASEDECREASE1] [varchar](8000) NULL,
	[PROPCLASS2] [varchar](50) NULL,
	[PRIORVALUE2] [varchar](8000) NULL,
	[CURRENTVALUE2] [varchar](8000) NULL,
	[INCREASEDECREASE2] [varchar](8000) NULL,
	[PROPCLASS3] [varchar](50) NULL,
	[PRIORVALUE3] [varchar](8000) NULL,
	[CURRENTVALUE3] [varchar](8000) NULL,
	[INCREASEDECREASE3] [varchar](8000) NULL,
	[PROPCLASS4] [varchar](50) NULL,
	[PRIORVALUE4] [varchar](8000) NULL,
	[CURRENTVALUE4] [varchar](8000) NULL,
	[INCREASEDECREASE4] [varchar](8000) NULL,
	[PROPCLASS5] [varchar](50) NULL,
	[PRIORVALUE5] [varchar](50) NULL,
	[CURRENTVALUE5] [varchar](50) NULL,
	[INCREASEDECREASE5] [varchar](50) NULL,
	[PROPCLASS6] [varchar](50) NULL,
	[PRIORVALUE6] [varchar](50) NULL,
	[CURRENTVALUE6] [varchar](50) NULL,
	[INCREASEDECREASE6] [varchar](50) NULL,
	[TOTALPRIOR] [varchar](8000) NULL,
	[TOTALCURRENT] [varchar](8000) NULL,
	[TOTALINCREASEDECREASE] [varchar](8000) NULL,
	[VALUEYEAR] [int] NULL,
	[PROPERTYTYPE] [varchar](15) NULL,
	[PRIMARYBUILDING] [varchar](10) NULL,
	[BUILDINGCOUNT] [varchar](3) NULL,
	[SUBDIVISION] [varchar](18) NULL,
	[NEIGHBORHOOD] [varchar](10) NULL,
	[RESIDENTIALSF] [numeric](10, 0) NULL,
	[STYLE] [varchar](18) NULL,
	[QUALITY] [varchar](15) NULL,
	[YEARBUILT] [varchar](10) NULL,
	[HEATTYPE] [varchar](18) NULL,
	[BASEMENTSF] [numeric](10, 0) NULL,
	[FINISHEDBSMNTSF] [numeric](10, 0) NULL,
	[BASEMENTTYPE] [varchar](10) NULL,
	[GARAGESF] [numeric](10, 0) NULL,
	[IMPSF] [numeric](10, 0) NULL,
	[COMMERCIALSF] [numeric](10, 0) NULL,
	[OUTBUILDINGSF] [numeric](10, 0) NULL,
	[LANDTYPE] [varchar](15) NULL,
	[ACREAGE] [varchar](10) NULL,
	[LEA] [varchar](30) NULL,
	[LANDATTRIBUTES] [varchar](max) NULL,
	[APPRDATEYEAR] [varchar](10) NULL,
	[REAPPRYEAR] [varchar](10) NULL,
	[BEGPERYEAR] [varchar](10) NULL,
	[ENDPERYEAR] [varchar](10) NULL,
	[CBOEDEADLINE] [varchar](15) NULL,
	[PRINTFLAG] [varchar](1) NULL,
	[BULKNOVFLAG] [varchar](1) NULL,
	[PRIVATEFLAG] [varchar](1) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[ASSESSOR] [varchar](50) NULL,
	[SREXEMPTIONDEADLINE] [varchar](15) NULL,
	[VETEXEMPTIONDEADLINE] [varchar](15) NULL,
	[NODMONTH] [varchar](50) NULL,
 CONSTRAINT [PK_realnov] PRIMARY KEY CLUSTERED 
(
	[ACCOUNTNO] ASC,
	[TAXYEAR] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_realnov]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_realnov]
AS
SELECT        rn.ACCOUNTNO, rn.TAXYEAR, rn.PARCELNO, rn.PROPADDRESS, rn.LEGALDESCRIPTION1, rn.LEGALDESCRIPTION2, rn.LEGALDESCRIPTION3, rn.NAME1, rn.NAME2, rn.PNAME1, rn.PNAME2, 
                         rn.OWNERADDRESS1, rn.OWNERADDRESS2, rn.OWNERCITY, rn.OWNERSTATE, rn.OWNERZIP, rn.PROPCLASS1, rn.PRIORVALUE1, rn.CURRENTVALUE1, rn.INCREASEDECREASE1, rn.PROPCLASS2, 
                         rn.PRIORVALUE2, rn.CURRENTVALUE2, rn.INCREASEDECREASE2, rn.PROPCLASS3, rn.PRIORVALUE3, rn.CURRENTVALUE3, rn.INCREASEDECREASE3, rn.PROPCLASS4, rn.PRIORVALUE4, rn.CURRENTVALUE4, 
                         rn.INCREASEDECREASE4, rn.PROPCLASS5, rn.PRIORVALUE5, rn.CURRENTVALUE5, rn.INCREASEDECREASE5, rn.PROPCLASS6, rn.PRIORVALUE6, rn.CURRENTVALUE6, rn.INCREASEDECREASE6, 
                         rn.TOTALPRIOR, rn.TOTALCURRENT, rn.TOTALINCREASEDECREASE, rn.VALUEYEAR, rn.PROPERTYTYPE, rn.PRIMARYBUILDING, rn.BUILDINGCOUNT, rn.SUBDIVISION, rn.NEIGHBORHOOD, rn.RESIDENTIALSF, 
                         rn.STYLE, rn.QUALITY, rn.YEARBUILT, rn.HEATTYPE, rn.BASEMENTSF, rn.FINISHEDBSMNTSF, rn.BASEMENTTYPE, rn.GARAGESF, rn.IMPSF, rn.COMMERCIALSF, rn.OUTBUILDINGSF, rn.LANDTYPE, rn.ACREAGE,
                          rn.LEA, rn.LANDATTRIBUTES, rn.APPRDATEYEAR, rn.REAPPRYEAR, rn.BEGPERYEAR, rn.ENDPERYEAR, rn.CBOEDEADLINE, rn.PRINTFLAG, rn.BULKNOVFLAG, rn.PRIVATEFLAG, rn.create_datetime, 
                         rn.create_user_id, rn.update_datetime, rn.update_user_id, rn.ASSESSOR, rn.SREXEMPTIONDEADLINE, rn.VETEXEMPTIONDEADLINE, rn.NODMONTH

FROM            asr_datastore.realnov AS rn INNER JOIN
                         assessor_app.asr_app.account AS ac ON rn.ACCOUNTNO = ac.account_no


GO
/****** Object:  View [asr_adv_search_query].[v_valid_property_zip_code]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_adv_search_query].[v_valid_property_zip_code]
AS
SELECT DISTINCT LEFT(location_zip_code, 5) AS zip_code
FROM            asr_datastore.account_property_address
WHERE        (location_zip_code LIKE '8%')
GROUP BY LEFT(location_zip_code, 5)
HAVING        (COUNT(1) > 3)
GO
/****** Object:  Table [asr_datastore].[appeal]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[appeal](
	[TAX_YEAR] [numeric](4, 0) NULL,
	[APPEAL_NO] [numeric](15, 0) NOT NULL,
	[APPEAL_TYPE] [varchar](30) NULL,
	[APPEAL_METHOD] [varchar](30) NULL,
	[ASSIGNED_TO] [varchar](20) NULL,
	[INITIATED_BY] [varchar](30) NULL,
	[AGENT_CODE] [numeric](15, 0) NULL,
	[AGENT_NAME] [varchar](150) NULL,
	[AGENT_EMAILADDRESS] [varchar](100) NULL,
	[AGENT_PHONE] [varchar](25) NULL,
	[AGENT_ADDRESS] [varchar](250) NULL,
	[FILER_EMAIL] [varchar](100) NULL,
	[FILER_PHONE] [varchar](18) NULL,
	[FILER] [varchar](250) NULL,
	[FILER_ADDRESS] [varchar](50) NULL,
	[FILER_CITY] [varchar](50) NULL,
	[FILER_STATECODE] [varchar](2) NULL,
	[FILER_ZIPCODE] [varchar](10) NULL,
	[MAIL_TO] [varchar](30) NULL,
	[DECISION_BY] [varchar](30) NULL,
	[CASE_NO] [varchar](30) NULL,
	[REREVIEW_STATUS] [varchar](30) NULL,
	[REREVIEW_INITIALS] [varchar](30) NULL,
	[REREVIEW_DECISION] [varchar](30) NULL,
	[APPEAL_REASON] [varchar](30) NULL,
	[APPEAL_BASIS] [varchar](30) NULL,
	[APPEAL_RECOMMENDATION] [varchar](30) NULL,
	[APPEAL_ADJUST_DENY_REASON_ID] [numeric](15, 0) NULL,
	[APPEAL_END_VALUE] [numeric](15, 2) NULL,
	[DATE_OF_APPEAL] [varchar](22) NULL,
	[DATE_RECEIVED] [varchar](22) NULL,
	[TAX_PAYER_MEETING_REQUEST_FLAG] [numeric](1, 0) NULL,
	[TAX_PAYER_MEETING_DATE] [varchar](22) NULL,
	[TAX_PAYER_MEETING_TIME] [varchar](100) NULL,
	[BEGINNING_APPEAL_VALUE] [numeric](15, 2) NULL,
	[APPEAL_ON1] [numeric](20, 6) NULL,
	[APPEAL_ON2] [numeric](20, 6) NULL,
	[APPEAL_OD0] [varchar](22) NULL,
	[APPEAL_OD1] [varchar](22) NULL,
	[APPEAL_OM0] [varchar](50) NULL,
	[APPEAL_OM1] [varchar](50) NULL,
	[APPEAL_ON0] [numeric](20, 6) NULL,
	[APPEAL_OT0] [varchar](50) NULL,
	[APPEAL_OT1] [varchar](50) NULL,
	[APPRAISAL_TYPE] [varchar](30) NULL,
	[PRIMARY_ACCOUNT] [varchar](30) NULL,
	[JURISDICTION_ID] [numeric](15, 0) NULL,
	[SCHEDULE_DATE_AS] [varchar](22) NULL,
	[SCHEDULE_START_TIME] [varchar](50) NULL,
	[SCHEDULE_END_TIME] [varchar](50) NULL,
	[SCHEDULE_COMMENT] [varchar](500) NULL,
	[SCHEDULE_BOARD_FILE_NO] [varchar](30) NULL,
	[SCHEDULE_APPRAISER_INITIALS] [varchar](30) NULL,
	[APPOINTMENT_COLOR] [varchar](50) NULL,
	[WRITE_DATE] [varchar](22) NULL,
	[APPEAL_STATUS_ID] [numeric](15, 0) NULL,
	[APPEAL_REASON_DESCRIPTION] [varchar](1000) NULL,
	[BOARD_NO] [varchar](10) NULL,
	[APPEAL_DECISION] [varchar](30) NULL,
	[SEQ_ID] [numeric](15, 0) NULL,
	[create_datetime] [datetime] NULL,
	[create_user_id] [nvarchar](128) NULL,
	[rowhash] [varbinary](8000) NULL,
	[update_datetime] [datetime] NULL,
	[update_user_id] [nvarchar](128) NULL,
 CONSTRAINT [PK_appeal] PRIMARY KEY CLUSTERED 
(
	[APPEAL_NO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[appeal_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[appeal_account](
	[TAX_YEAR] [numeric](4, 0) NULL,
	[APPEAL_NO] [numeric](15, 0) NOT NULL,
	[ACCOUNT_NO] [varchar](30) NOT NULL,
	[APPEAL_ADJUST_DENY_REASON_ID] [numeric](15, 0) NULL,
	[APPEAL_COMMENT] [varchar](255) NULL,
	[APPEAL_ACCOUNT_END_VALUE] [numeric](15, 2) NULL,
	[VALUE_GROUP_DESCRIPTION] [varchar](50) NOT NULL,
	[APPEALACCTON0] [numeric](20, 6) NULL,
	[APPEALACCTON1] [numeric](20, 6) NULL,
	[APPEALACCTON2] [numeric](20, 6) NULL,
	[APPEALACCTOD0] [varchar](22) NULL,
	[APPEALACCTOD1] [varchar](22) NULL,
	[APPEALACCTOM0] [varchar](50) NULL,
	[APPEALACCTOM1] [varchar](50) NULL,
	[APPEALACCTOT0] [varchar](50) NULL,
	[APPEALACCTOT1] [varchar](50) NULL,
	[JURISDICTION_ID] [numeric](15, 0) NULL,
	[WRITE_DATE] [varchar](22) NULL,
	[BEGINNING_ACCOUNT_VALUE] [numeric](15, 2) NULL,
	[APPEAL_DECISION] [varchar](30) NULL,
	[APPEAL_ACCT_REASON_DESC] [varchar](1000) NULL,
	[ADD_BOARD_APPEAL_END_VALUE] [numeric](15, 2) NULL,
	[SEQ_ID] [numeric](15, 0) NULL,
	[CREATE_DATEIME] [datetime2](7) NOT NULL,
	[CREATE_USER_ID] [varchar](60) NOT NULL,
	[UPDATE_DATETIME] [datetime2](7) NULL,
	[UPDATE_USER_ID] [varchar](60) NULL,
	[ROWHASH] [varbinary](8000) NULL,
 CONSTRAINT [PK_appeal_account] PRIMARY KEY CLUSTERED 
(
	[APPEAL_NO] ASC,
	[ACCOUNT_NO] ASC,
	[VALUE_GROUP_DESCRIPTION] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_appeal_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [asr_app_query].[v_appeal_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:     03/21/2017
Developer:    TONY GOLDEN
Comments:     Initial creation
              the datastore db view of the data in the appeal_account table in the datastore db.
			  derived from the table in staging and used to publish data in the same format to
			  assessor_app.

			  7/3/2018
			  DG
              added join to appeal table along with where clause to filter out appeal_type = 'ABAT' 

			  5/21/2020
			  DG
			  changed where clause to only allow appeal_type = 'ASSR'
*************************************************************************************/
AS
SELECT aa.TAX_YEAR
      ,aa.APPEAL_NO
      ,aa.ACCOUNT_NO
      ,aa.APPEAL_ADJUST_DENY_REASON_ID
      ,aa.APPEAL_COMMENT
      ,aa.APPEAL_ACCOUNT_END_VALUE
	  ,aa.VALUE_GROUP_DESCRIPTION
      ,aa.APPEALACCTON0
      ,aa.APPEALACCTON1
      ,aa.APPEALACCTON2
      ,aa.APPEALACCTOD0
      ,aa.APPEALACCTOD1
      ,aa.APPEALACCTOM0
      ,aa.APPEALACCTOM1
      ,aa.APPEALACCTOT0
      ,aa.APPEALACCTOT1
      ,aa.JURISDICTION_ID
      ,aa.WRITE_DATE
      ,aa.BEGINNING_ACCOUNT_VALUE
      ,aa.APPEAL_DECISION
      ,aa.APPEAL_ACCT_REASON_DESC
      ,aa.ADD_BOARD_APPEAL_END_VALUE
      ,aa.SEQ_ID
      ,aa.CREATE_DATEIME
      ,aa.CREATE_USER_ID
      ,aa.UPDATE_DATETIME
      ,aa.UPDATE_USER_ID
      ,aa.ROWHASH
  FROM assessor_datastore.asr_datastore.appeal_account aa
  JOIN [asr_datastore].[appeal] a
  on aa.appeal_no = a.appeal_no
  and a.appeal_type = 'ASSR';




GO
/****** Object:  View [asr_app_query].[v_account_fact]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [asr_app_query].[v_account_fact]

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      7/13/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access account_fact records for consumption by assessor app

*************************************************************************************/
AS
SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  CAST(INGRP1.ACCOUNT_SUBTYPE_CODE AS VARCHAR) ACCOUNT_SUBTYPE_CODE,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  CAST(INGRP1.LAND_ECONOMIC_AREA_CODE AS VARCHAR) LAND_ECONOMIC_AREA_CODE,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  CAST(INGRP1.SUB_FILING_RECORDING_NO AS VARCHAR) SUB_FILING_RECORDING_NO,
  INGRP1.OWNER_NAME OWNER_NAME,
  INGRP1.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP1.ADDRESS_LINE_2 ADDRESS_LINE_2,
  CAST(INGRP1.ADDRESS_LINE_3 AS VARCHAR) ADDRESS_LINE_3,
  INGRP1.CITY_NAME_1 CITY_NAME_1,
  INGRP1.STATE STATE,
  INGRP1.ZIP_CODE ZIP_CODE,
  INGRP1.COUNTRY COUNTRY,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  SUBSTRING(INGRP1.ADDRESS_NUMBER,1,10) ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  INGRP2.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  INGRP2.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.FEDERAL_ID_NO FEDERAL_ID_NO,
  INGRP1.LEGAL_DESCR LEGAL_DESCR,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCR,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP1.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.OWNER_NAME OWNER_NAME,
  INGRP2.FEDERAL_ID_NO FEDERAL_ID_NO,
  INGRP2.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP2.ADDRESS_LINE_2 ADDRESS_LINE_2,
  INGRP2.ADDRESS_LINE_3 ADDRESS_LINE_3,
  INGRP2.CITY_NAME CITY_NAME_1,
  INGRP2.STATE STATE,
  INGRP2.ZIP_CODE ZIP_CODE,
  INGRP2.COUNTRY COUNTRY,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP2.UNIT_NO UNIT_NO,
  INGRP2.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP2.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP2.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP2.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP2.STREET_NAME STREET_NAME,
  INGRP2.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP2.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP2.CITY_NAME CITY_NAME,
  INGRP2.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL LAND_ECONOMIC_AREA_CODE,
  --asr_datastore.REAL_ACCOUNT.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  --NULL LEGAL_DESCRIPTION,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
ACCOUNT.ACCOUNT_NO ACCOUNT_NO,
ACCOUNT.ACCOUNT_STATUS ACCOUNT_STATUS,
ACCOUNT.ACCOUNT_TYPE ACCOUNT_TYPE,
ACCOUNT.APPRAISAL_TYPE ACCOUNT_SUBTYPE_CODE,
  --asr_datastore.ACCOUNT.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  ACCOUNT.STATE_PARCEL_NO STATE_PARCEL_NO,
  ACCOUNT.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  ACCOUNT.SUB_FILING_RECORDING_NO,
  --ACCOUNT_PLATTED_LOT.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL REDUCED_MILL_LEVY,
  --ACCOUNT.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  NULL REDUCED_TAX_RATE,
  --ACCOUNT.REDUCED_TAX_RATE REDUCED_TAX_RATE
  ACCOUNT.LEGAL_DESCRIPTION
FROM
    asr_datastore.ACCOUNT  ACCOUNT   
 LEFT OUTER JOIN   asr_datastore.ACCOUNT_PLATTED_LOT  ACCOUNT_PLATTED_LOT ON ( ( ACCOUNT.STATE_PARCEL_NO = ACCOUNT_PLATTED_LOT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN   asr_datastore.REAL_ACCOUNT  REAL_ACCOUNT ON ( ( INGRP1.ACCOUNT_NO = REAL_ACCOUNT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_PROPERTY_ADDRESS.UNIT_NO UNIT_NO,
  ACCOUNT_PROPERTY_ADDRESS.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER ADDRESS_NUMBER,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  ACCOUNT_PROPERTY_ADDRESS.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.STREET_NAME STREET_NAME,
  ACCOUNT_PROPERTY_ADDRESS.STREET_TYPE_CODE STREET_TYPE_CODE,
  ACCOUNT_PROPERTY_ADDRESS.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_PROPERTY_ADDRESS.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  ACCOUNT_PROPERTY_ADDRESS.ACCOUNT_NO ACCOUNT_NO
FROM
    asr_datastore.ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS   
 --JOIN   ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS ON ( ( ACCOUNT_PROPERTY_ADDRESS.SITUS_ADDRESS_EID = ACCOUNT_SITUS_ADDRESS.SITUS_ADDRESS_EID ) )
  WHERE 
  ( ACCOUNT_PROPERTY_ADDRESS.PRIMARY_ADDRESS_FLAG = 1  )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_OWNER_ADDRESS.ACCOUNT_NO ACCOUNT_NO,
  ACCOUNT_OWNER_ADDRESS.OWNER_NAME OWNER_NAME,
  ACCOUNT_OWNER_ADDRESS.FEDERAL_ID_NO FEDERAL_ID_NO,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_1 ADDRESS_LINE_1,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_2 ADDRESS_LINE_2,
  NULL ADDRESS_LINE_3,
  ACCOUNT_OWNER_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_OWNER_ADDRESS.STATE STATE,
  ACCOUNT_OWNER_ADDRESS.ZIP_CODE ZIP_CODE,
  ACCOUNT_OWNER_ADDRESS.COUNTRY COUNTRY
FROM
    asr_datastore.ACCOUNT_OWNER_ADDRESS  ACCOUNT_OWNER_ADDRESS
  WHERE 
  ( ACCOUNT_OWNER_ADDRESS.PRIMARY_OWNER_FLAG = 1 )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  ( SELECT
  AGGREGATOR.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  AGGREGATOR.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  AGGREGATOR.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  AGGREGATOR.ACCOUNT_NO ACCOUNT_NO
FROM
  (SELECT
  SUM(ACCOUNT_VALUATION.ACTUAL_VALUE) TOTAL_ACTUAL_VALUE,
  SUM(ACCOUNT_VALUATION.ASSESSED_VALUE) TOTAL_ASSESSED_VALUE,
  SUM(ACCOUNT_VALUATION.NET_ACRES) TOTAL_NET_ACRES,
  ACCOUNT_VALUATION.ACCOUNT_NO ACCOUNT_NO
FROM
  asr_datastore.ACCOUNT_VALUATION  ACCOUNT_VALUATION
GROUP BY
ACCOUNT_VALUATION.ACCOUNT_NO) AGGREGATOR  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) );





















GO
/****** Object:  View [asr_app_query].[v_improvement_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_improvement_detail]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access improvement detail for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT   id.account_no, id.improvement_no, id.improvement_detail_id, id.improvement_detail_type,  
         id.improvement_detail_type_description, 
		 id.detail_unit_count, id.addon_code, id.addon_code_description, 
         id.detail_built_year, id.create_datetime, id.create_user_id, id.update_datetime, id.update_user_id, id.rowhash
FROM     asr_datastore.improvement_detail AS id INNER JOIN
         asr_datastore.account AS a ON id.account_no = a.account_no AND a.account_status = 'A'




GO
/****** Object:  Table [asr_datastore].[value_from_tsgvacctabstvalue]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[value_from_tsgvacctabstvalue](
	[account_no] [varchar](30) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[raw_tax_dollars] [numeric](15, 2) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[mill_levy] [numeric](11, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
	[net_acres] [numeric](15, 4) NULL,
	[valuation_class_code_description] [varchar](500) NULL,
	[assessment_rate] [numeric](15, 6) NULL,
 CONSTRAINT [pk_value_from_tsgvacctabstvalue] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[tax_year] ASC,
	[valuation_class_code] ASC,
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[xxv_value_from_tsgvacctabstvalue]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[xxv_value_from_tsgvacctabstvalue]
AS

SELECT v.account_no, a.account_type, v.tax_year, v.valuation_class_code, v.tax_district_no, v.raw_assessed_value, 
       v.raw_tax_dollars, v.actual_value, v.mill_levy, v.create_datetime, v.create_user_id, v.update_datetime, 
       v.update_user_id, v.rowhash
FROM   asr_datastore.value_from_tsgvacctabstvalue AS v INNER JOIN
       asr_datastore.account AS a ON v.account_no = a.account_no
WHERE  (a.account_status = 'A') 

GO
/****** Object:  View [asr_adv_search_query].[v_flat_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_adv_search_query].[v_flat_account]
AS
 /**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:     6/24/2020
Developer:    David Guillen
Comments:     Add default_lea, neighborhood_code, neighborhood_extension

*************************************************************************************/
SELECT        a.account_no, a.state_parcel_no, a.tax_district_no, a.sub_filing_recording_no, a.account_type, a.appraisal_type, a.account_status, a.account_status_description, a.legal_description, a.longitude_x, a.latitude_y, a.location, 
                         a.create_datetime, a.create_user_id, a.update_datetime, a.update_user_id, a.rowhash, a.elevation_z, a.bldg_permit_auth_id, a.qtr AS quarter, a.section, a.township, a.range, oa.owner_name AS primary_owner_name, 
                         oa.full_address AS primary_owner_address, aoa.address_line_1 as owner_address_line_1, aoa.address_line_2 as owner_address_line_2
						,aoa.city_name as owner_city_name ,aoa.state as owner_state ,aoa.zip_code as owner_zip_code ,aoa.country as owner_country,
						 av.actual_value_sum, av.assessed_value_sum, av.net_acres_sum, f.subdivision_name, f.subdivision_no, f.filing_no, f.filing_description, addr.primary_property_unit_no, addr.primary_property_address_number, 
                         addr.primary_property_address_number_suffix, addr.primary_property_pre_direction_code, addr.primary_property_street_name, addr.primary_property_street_type_code, addr.primary_property_post_direction_code, 
                         addr.primary_property_city, addr.primary_property_zip_code, apl.LOT AS lot, apl.TRACT AS tract, apl.BLOCK AS block, sa.recording_nos, t .tax_authority_nos, la.land_attributes,
						 ra.default_lea
					     ,an.neighborhood_code ,an.neighborhood_extension
FROM            asr_datastore.account a LEFT OUTER JOIN
                             (/*include primary owners that are not marked as private*/ SELECT account_no, owner_name, STUFF(CONCAT(' ' + address_line_1, ' ' + address_line_2, ' ' + city_name, ' ' + state, ' ' + zip_code, ' ' + country), 1, 1, '') 
                                                         AS full_address
                               FROM            asr_datastore.account_owner_address
                               WHERE        primary_owner_flag = 1 AND private_flag = 0) AS oa ON oa.account_no = a.account_no LEFT OUTER JOIN
                             (SELECT        account_no, SUM(actual_value) AS actual_value_sum, SUM(assessed_value) AS assessed_value_sum, SUM(net_acres) AS net_acres_sum
                               FROM            asr_datastore.account_valuation
                               GROUP BY account_no) AS av ON av.account_no = a.account_no LEFT OUTER JOIN
                             (/*sub filing information*/ SELECT sub_filing_recording_no, subdivision_no, subdivision_name, filing_no, filing_description
                               FROM            asr_datastore.sub_filing) AS f ON f.sub_filing_recording_no = a.sub_filing_recording_no LEFT OUTER JOIN
                             (/* account primary property address*/ SELECT account_no, unit_no AS primary_property_unit_no, address_number AS primary_property_address_number, 
                                                         address_number_suffix AS primary_property_address_number_suffix, pre_direction_code AS primary_property_pre_direction_code, street_name AS primary_property_street_name, 
                                                         street_type_code AS primary_property_street_type_code, post_direction_code AS primary_property_post_direction_code, city_name AS primary_property_city, 
                                                         location_zip_code AS primary_property_zip_code
                               FROM            asr_datastore.account_property_address
                               WHERE        primary_address_flag = 1) AS addr ON addr.account_no = a.account_no LEFT OUTER JOIN
                             (/* account platted lot*/ SELECT ACCOUNT_NO, PARCEL_NO, LOT, TRACT, BLOCK
                               FROM            asr_datastore.account_platted_lot) AS apl ON apl.ACCOUNT_NO = a.account_no AND apl.PARCEL_NO = a.state_parcel_no LEFT OUTER JOIN
                             (SELECT        account_no, recording_nos = STUFF
                                                             ((SELECT        ',' + recording_no
                                                                 FROM            asr_datastore.sale_account b
                                                                 WHERE        b.account_no = a.account_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.sale_account a
                               GROUP BY account_no) AS sa ON sa.account_no = a.account_no LEFT OUTER JOIN
                             (SELECT        tax_district_no, tax_authority_nos = STUFF
                                                             ((SELECT        ',' + b.tax_authority_no
                                                                 FROM            asr_datastore.tax_district_authority b
                                                                 WHERE        b.tax_district_no = a.tax_district_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.tax_district_authority a
                               GROUP BY tax_district_no) AS t ON a.tax_district_no = t .tax_district_no LEFT OUTER JOIN
                             (SELECT        account_no, land_attributes = STUFF
                                                             ((SELECT        ',' + concat(b.attribute_type, ' - ', b.attribute_subtype)
                                                                 FROM            asr_datastore.land_attribute b
                                                                 WHERE        b.account_no = a.account_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.land_attribute a
                               GROUP BY account_no) AS la ON la.account_no = a.account_no LEFT OUTER JOIN
							(select account_no, address_line_1 ,address_line_2 ,city_name ,state ,zip_code ,country
							FROM [asr_datastore].[account_owner_address] ) as aoa
							ON a.account_no = aoa.account_no           
							                                                               LEFT OUTER JOIN
							(select account_no, default_lea
							FROM [assessor_datastore].[asr_datastore].[real_account]) as ra
							ON a.account_no = ra.account_no
							                                                               LEFT OUTER JOIN
							(SELECT account_no, neighborhood_code ,neighborhood_extension
							FROM [assessor_datastore].[asr_datastore].[account_neighborhood]) as an
							ON a.account_no = an.account_no
WHERE        a.account_status = 'A';
GO
/****** Object:  Table [asr_adv_search_query].[flat_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_adv_search_query].[flat_account](
	[account_no] [varchar](30) NOT NULL,
	[state_parcel_no] [varchar](30) NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[sub_filing_recording_no] [varchar](30) NULL,
	[account_type] [varchar](30) NOT NULL,
	[appraisal_type] [varchar](30) NOT NULL,
	[account_status] [varchar](30) NOT NULL,
	[account_status_description] [varchar](100) NULL,
	[legal_description] [varchar](max) NULL,
	[longitude_x] [numeric](30, 8) NULL,
	[latitude_y] [numeric](30, 8) NULL,
	[location] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[elevation_z] [numeric](30, 8) NULL,
	[bldg_permit_auth_id] [int] NULL,
	[quarter] [varchar](15) NULL,
	[section] [varchar](15) NULL,
	[township] [varchar](15) NULL,
	[range] [varchar](15) NULL,
	[primary_owner_name] [varchar](256) NULL,
	[primary_owner_address] [varchar](436) NULL,
	[actual_value_sum] [numeric](38, 2) NULL,
	[assessed_value_sum] [numeric](38, 2) NULL,
	[net_acres_sum] [numeric](38, 4) NULL,
	[subdivision] [varchar](256) NULL,
	[filing] [varchar](114) NULL,
	[primary_property_unit_no] [varchar](30) NULL,
	[primary_property_address_number] [varchar](15) NULL,
	[primary_property_address_number_suffix] [varchar](30) NULL,
	[primary_property_pre_direction_code] [varchar](50) NULL,
	[primary_property_street_name] [varchar](80) NULL,
	[primary_property_street_type_code] [varchar](30) NULL,
	[primary_property_post_direction_code] [varchar](50) NULL,
	[primary_property_city] [varchar](50) NULL,
	[primary_property_zip_code] [varchar](10) NULL,
	[lot] [varchar](30) NULL,
	[tract] [varchar](30) NULL,
	[block] [varchar](30) NULL,
	[recording_nos] [nvarchar](max) NULL,
	[tax_authority_nos] [nvarchar](max) NULL,
	[land_attributes] [nvarchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [asr_adv_search_query].[v_sales_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE view [asr_adv_search_query].[v_sales_export] as
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      6/24/2020
Developer:     David Guillen
Comments:      Add exclude_code_2, exclude_code_2_description, and multi_parcel_flag

*************************************************************************************/
SELECT
       fa.account_no
	  ,s.[recording_no]
	  ,fa.[state_parcel_no]
      ,fa.[account_type]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,s.[grantor]
      ,s.[grantee]
      ,s.[sale_date]
	  ,s.[sale_price]
      ,s.[deed_code_description]
      ,s.[book]
      ,s.[page]
      ,s.[improved_flag]
      ,s.[valid1_flag]
	  ,s.[exclude_code_1]
      ,s.[exclude_code_1_description]
	  ,s.[exclude_code_2]
      ,s.[exclude_code_2_description]
	  ,CAST(CASE WHEN s.[exclude_code_1] IN (64,80) THEN 1
	        WHEN s.[exclude_code_2] IN (64,80) THEN 1
		    ELSE 0 
			END AS bit) as multi_parcel_flag
	  ,fa.[net_acres_sum]
	  ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
      ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
      ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code] 
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] as fa
  JOIN [assessor_datastore].[asr_datastore].[sale_account] as sa
	ON fa.account_no = sa.account_no
  JOIN [assessor_datastore].[asr_datastore].[sale] s
   ON sa.recording_no = s.recording_no
    JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no
GO
/****** Object:  View [asr_adv_search_query].[v_fireplace]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 CREATE VIEW [asr_adv_search_query].[v_fireplace]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/16/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the fireplace inforamtion 
			   for active accounts 
			   one row per fireplace type by building by account

*************************************************************************************/
AS
 SELECT 
 D.account_no
,D.improvement_no AS building_id
,CASE WHEN D.improvement_detail_type_description = 'Wood Fireplace' THEN 'wood'
      WHEN D.improvement_detail_type_description = 'Fireplace - Gas' THEN 'gas'
	  ELSE D.improvement_detail_type_description
 END  as fireplace_type
,FLOOR(SUM(D.detail_unit_count)) AS sum_detail_unit_count
FROM asr_datastore.improvement_detail D
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = D.account_no AND A.account_status = 'A'
WHERE 
     d.improvement_detail_type = 'Add On'
 and D.improvement_detail_type_description in ('Wood Fireplace', 'Fireplace - Gas')
--AND D.account_no = 'R0000107'
GROUP BY
 d.account_no
,d.improvement_no
,CASE WHEN D.improvement_detail_type_description = 'Wood Fireplace' THEN 'wood'
      WHEN D.improvement_detail_type_description = 'Fireplace - Gas' THEN 'gas'
	  ELSE D.improvement_detail_type_description
 END 
GO
/****** Object:  View [asr_adv_search_query].[v_building_feature]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_adv_search_query].[v_building_feature]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/16/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the features inforamtion 
			   for active accounts 
			   one row per distinct feature by building by account

*************************************************************************************/
AS
select distinct
 d.account_no
,d.improvement_no as building_id
,d.improvement_detail_type as feature_type
FROM asr_datastore.improvement_detail D
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = D.account_no AND A.account_status = 'A'
WHERE 
    D.improvement_detail_type in ('Balcony','Carport','Mezzanine','Rough In','Storage')
UNION
select DISTINCT
 d.account_no
,d.improvement_no
,d.improvement_detail_type_description as feature_type
FROM asr_datastore.improvement_detail D
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = D.account_no AND A.account_status = 'A'
WHERE 
    D.improvement_detail_type = 'Add On'
AND D.improvement_detail_type_description NOT LIKE '%Fireplace%'

GO
/****** Object:  View [asr_adv_search_query].[v_basement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_adv_search_query].[v_basement]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/19/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the basement inforamtion 
			   for active accounts 
			   one row per building by account

*************************************************************************************/
AS
SELECT
   account_no
  ,building_id
  ,basement_total_square_feet
  ,basement_finished_square_feet
  ,CASE WHEN basement_garden_level > 0 THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS basement_garden_level
  ,CASE WHEN basement_walkout > 0 THEN CAST(1 AS bit) ELSE CAST(0 AS bit) END AS basement_walkout
FROM 
( --source
SELECT 
 D.account_no
,D.improvement_no AS building_id
,CASE WHEN D.improvement_detail_type_description LIKE 'Bsmnt%' THEN 'basement_total_square_feet'
      WHEN D.improvement_detail_type_description = 'Finished' THEN 'basement_finished_square_feet'
      WHEN D.improvement_detail_type_description = 'Walkout' THEN 'basement_walkout'
      WHEN D.improvement_detail_type_description = 'Garden Level' THEN 'basement_garden_level'      
 END  AS basement_detail_type_description
,FLOOR(SUM(D.detail_unit_count)) AS sum_detail_unit_count
FROM asr_datastore.improvement_detail D
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = D.account_no AND A.account_status = 'A'
WHERE 
    D.improvement_detail_type = 'Basement'
AND ( D.improvement_detail_type_description IN
      ('Finished', 'Walkout', 'Garden Level')
	  OR D.improvement_detail_type_description LIKE 'Bsmnt%'
	)
--AND D.account_no = 'R0000107'
GROUP BY 
 D.account_no
,D.improvement_no 
,CASE WHEN D.improvement_detail_type_description LIKE 'Bsmnt%' THEN 'basement_total_square_feet'
      WHEN D.improvement_detail_type_description = 'Finished' THEN 'basement_finished_square_feet'
      WHEN D.improvement_detail_type_description = 'Walkout' THEN 'basement_walkout'
      WHEN D.improvement_detail_type_description = 'Garden Level' THEN 'basement_garden_level'      
 END  
 --- end of source
 ) src
PIVOT
(
  SUM(sum_detail_unit_count)
  FOR basement_detail_type_description in ([basement_total_square_feet], [basement_garden_level], [basement_walkout], [basement_finished_square_feet] )
) piv;



GO
/****** Object:  View [asr_adv_search_query].[v_building]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_adv_search_query].[v_building]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/19/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the building inforamtion 
			   for active accounts 
			   one row per building by account no

*************************************************************************************/
AS

SELECT 
 I.account_no
,I.improvement_no AS building_number
,I.completed_percent 
,I.improvement_quality AS build_quality
,I.improvement_perimeter AS building_perimeter
,I.property_type
,I.condition_type
,I.approach_type
,I.primary_flag
,I.improvement_unit_type AS building_unit_type
,I.improvement_sf AS above_grade_square_feet
,(I.improvement_sf + ISNULL(bd.basement_total_square_feet,0)) AS square_feet_with_basement
,bd.basement_total_square_feet AS basement_total_square_feet
,bd.basement_finished_square_feet
,(I.improvement_sf + ISNULL(bd.basement_finished_square_feet,0)) AS total_finished_square_feet
,bd.basement_garden_level
,bd.basement_walkout
,ifp.fireplaces
,ibf.features
,g.garage_total_sf
,p.porch_total_sf
FROM asr_datastore.improvement AS I
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = I.account_no AND A.account_status = 'A'
LEFT OUTER JOIN ( --basement details
                  SELECT account_no, building_id, basement_total_square_feet, basement_finished_square_feet, basement_garden_level, basement_walkout
				  FROM asr_adv_search_query.v_basement
                ) bd ON bd.account_no = I.account_no
				      AND bd.building_id = I.improvement_no
LEFT OUTER JOIN (-- comma separated fireplaces details
				SELECT
					a.account_no,
					a.building_id,
					fireplaces =
								  STUFF((SELECT ',' + concat(b.fireplace_type ,
								                            ' : ', 
															  CAST(b.sum_detail_unit_count AS VARCHAR(6))
															)
										 FROM asr_adv_search_query.v_fireplace b
										 WHERE b.account_no = a.account_no
										   AND b.building_id = a.building_id
										   ORDER BY b.fireplace_type
										 FOR XML PATH ('')), 1, 1, '')
				FROM asr_adv_search_query.v_fireplace a
				GROUP BY a.account_no, a.building_id
                ) as ifp
ON ifp.account_no = i.account_no
AND ifp.building_id = i.improvement_no
LEFT OUTER JOIN (-- comma separated building features
				SELECT
					a.account_no,
					a.building_id,
					features =
								  STUFF((SELECT ',' + b.feature_type 
										 FROM asr_adv_search_query.v_building_feature b
										 WHERE b.account_no = a.account_no
										   AND b.building_id = a.building_id
										   ORDER BY b.feature_type
										 FOR XML PATH ('')), 1, 1, '')
				FROM asr_adv_search_query.v_building_feature a
				GROUP BY a.account_no, a.building_id
                ) as ibf
ON ibf.account_no = i.account_no
AND ibf.building_id = i.improvement_no
LEFT OUTER JOIN (
				select account_no, improvement_no, sum(detail_unit_count) as garage_total_sf
				from asr_datastore.improvement_detail
				where improvement_detail_type = 'Garage'
				group by account_no, improvement_no
				) as g
ON I.account_no = g.account_no 
AND I.improvement_no = g.improvement_no
LEFT OUTER JOIN (
				select account_no, improvement_no, sum(detail_unit_count) as porch_total_sf
				from asr_datastore.improvement_detail
				where improvement_detail_type = 'Porch'
				group by account_no, improvement_no
				) as p
ON I.account_no = p.account_no 
AND I.improvement_no = p.improvement_no

GO
/****** Object:  View [asr_adv_search_query].[v_imp_occ_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE view [asr_adv_search_query].[v_imp_occ_export] as
SELECT DISTINCT
       fa.[account_no]
      ,fa.[state_parcel_no]
      ,fa.[account_type]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
      ,vb.[condition_type]
      ,vb.[build_quality]
      ,vb.[completed_percent]
      ,vbu.[use_code]
      ,vbu.[use_code_description]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
      ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
      ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code] 
	  ,vfa.[primary_owner_name]
      ,vb.[property_type]
      ,vbu.[use_percentage]
FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
JOIN [asr_adv_search_query].[v_building] vb
ON fa.account_no = vb.account_no
JOIN [asr_adv_search_query].[v_building_use] vbu
ON fa.account_no = vbu.account_number
 JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no



GO
/****** Object:  View [gis_ods_query].[v_account_fact_gis]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE view [gis_ods_query].[v_account_fact_gis]
as

select
	a.ACCOUNT_NO
	,STATE_PARCEL_NO
	,ACCOUNT_SUBTYPE_CODE = a.appraisal_type
	,a.TAX_DISTRICT_NO
	,LAND_ECONOMIC_AREA_CODE = ''
	,ACCOUNT_TYPE_CODE = a.[account_type]
	,SUB_FILING_RECORDING_NO = [sub_filing_recording_no]
	,OWNER_NAME = oa.[owner_name] 
	,MAILING_ADDRESS_LINE_1 = oa.[address_line_1]
	,MAILING_ADDRESS_LINE_2 = oa.[address_line_2]
	,MAILING_ADDRESS_LINE_3 = convert(varchar(80),'')
	,MAILING_CITY_NAME = oa.city_name
	,MAILING_STATE = oa.[state]
	,MAILING_ZIP_CODE = oa.zip_code
	,MAILING_COUNTRY = oa.country
	,UNIT_NO = pa.[unit_no]
	,UNIT_DESIGNATOR = pa.unit_designator
	,ADDRESS_NUMBER = pa.address_number
	,ADDRESS_NUMBER_SUFFIX = pa.address_number_suffix
	,PRE_DIRECTION_CODE = pa.pre_direction_code
	,STREET_NAME = pa.street_name
	,STREET_TYPE_CODE = pa.street_type_code
	,POST_DIRECTION_CODE = pa.post_direction_code
	,CITY_NAME = pa.city_name
	,LOCATION_ZIP_CODE = pa.location_zip_code
	,TOTAL_ACTUAL_VALUE = (select sum(av.actual_value) from asr_datastore.account_valuation av where av.account_no = a.account_no)
	,TOTAL_ASSESSED_VALUE = (select sum(av.assessed_value) from asr_datastore.account_valuation av where av.account_no = a.account_no)
	,TOTAL_NET_ACRES = (select sum(av.net_acres) from asr_datastore.account_valuation av where av.account_no = a.account_no)
	,LEGAL_DESCR = REPLACE(REPLACE(REPLACE(REPLACE(a.legal_description,'  ',' '),'  ',' '),'  ',' '),'  ',' ')
	,ACCOUNT_STATUS_CODE = a.account_status
	,FEDERAL_ID_NO = oa.federal_id_no
	,LOCATION_STATE_CODE = 'CO'
	,ROW_START_DTM = a.create_datetime
	,ROW_END_DTM = null --?
	,ROW_CURRENT_FLAG = 'Y'
	,CREATE_DTM = a.create_datetime
	,create_user_id = a.create_user_id
	,UPDATE_DTM = a.update_datetime
	,UPDATE_USER_ID = a.update_user_id
	,REDUCED_MILL_LEVY = (SELECT SUM(assessed_mill_levy) 
							FROM [asr_datastore].[tax_authority_fund] ta 
							join [asr_datastore].[tax_district_authority] td on ta.tax_authority_no = td.tax_authority_no
							where  td.tax_district_no = a.TAX_DISTRICT_NO)
	,REDUCED_TAX_RATE = (SELECT SUM(assessed_mill_levy)/1000 
							FROM [asr_datastore].[tax_authority_fund] ta 
							join [asr_datastore].[tax_district_authority] td on ta.tax_authority_no = td.tax_authority_no
							where  td.tax_district_no = a.TAX_DISTRICT_NO)
--select *
FROM asr_datastore.account a --162,376
 left join [asr_datastore].[account_owner_address] oa on a.account_no = oa.account_no --162,362
 left join [asr_datastore].[account_property_address] pa on a.account_no = pa.account_no and pa.primary_address_flag = 1 --162,331
 where account_status = 'A'

GO
/****** Object:  View [asr_adv_search_query].[v_owner_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE view [asr_adv_search_query].[v_owner_export] as
 /**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:     6/24/2020
Developer:    David Guillen
Comments:     Add default_lea, neighborhood_code, neighborhood_extension

*************************************************************************************/
SELECT 
       fa.[account_no]
      ,fa.[state_parcel_no]
      ,fa.[account_type]
      ,SUM(v.[actual_value]) as actual_value
      ,SUM(v.[raw_assessed_value]) as raw_assessed_value
      ,fa.[legal_description]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
	  ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
	  ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code]  
	  ,ra.default_lea
	  ,an.neighborhood_code ,an.neighborhood_extension
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
  JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no
  LEFT OUTER JOIN [assessor_datastore].[asr_datastore].[real_account] ra
  ON fa.account_no = ra.account_no
  LEFT OUTER JOIN [assessor_datastore].[asr_datastore].[account_neighborhood] an
  ON fa.account_no = an.account_no
  where v.tax_year = (SELECT YEAR(GETDATE()))
  group by
  fa.[account_no]
      ,fa.[state_parcel_no]
      ,fa.[account_type]
	   ,fa.[legal_description]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
	   ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code]  
	  ,vfa.[owner_address_line_1]
	  ,vfa.[owner_address_line_2]
	  ,ra.default_lea
	  ,an.neighborhood_code ,an.neighborhood_extension
	







GO
/****** Object:  View [gis_ods_query].[v_imp_segment]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [gis_ods_query].[v_imp_segment]
AS
SELECT        
	  IMP_SEGMENT_EID = try_convert(int,impba.built_as_detail_id) 
	, IMPROVEMENT_EID = try_convert(int,impba.improvement_no) 
	, impba.built_as_code
	, impba.roof_construction_type AS ROOF_CONSTRUCTION_TYPE_CODE
	, built_as_sf = try_convert(int,impba.built_as_sf) 
	, impba.heat_type
	, impba.exterior_construction_type
	, impba.interior_finish_type
	, impba.no_of_story
	, AVERAGE_STORY_HEIGHT = try_convert(int,impba.typical_story_height)
	, sprinkler_coverage_sf = try_convert(int,impba.sprinkler_coverage_sf)
	, impba.roof_material_type AS ROOF_MATERIAL_CODE
	, impba.floor_material_type AS FLOOR_MATERIAL_TYPE_CODE
	, impba.bedroom_count AS NO_OF_BEDROOM
	, impba.bathroom_count AS NO_OF_BATHROOM
	, NO_OF_UNIT = try_convert(int,impba.total_unit_count)
	, impba.built_year
	, impba.remodeled_year
	, PHYSICAL_AGE = try_convert(int,YEAR(SYSDATETIME()) - impba.built_year)
	, effective_age = try_convert(int,impba.effective_age)
	, LENGTH_OF_MOBILE_HOME = try_convert(int,impba.built_as_length)
	, WIDTH_OF_MOBILE_HOME = try_convert(int,impba.built_as_width)
	, impba.create_datetime AS ROW_START_DTM
	, impba.create_datetime AS ROW_END_DTM
	, 'Y' AS ROW_CURRENT_FLAG
	, impba.create_datetime AS CREATE_DTM
	, impba.create_user_id
	, impba.update_datetime AS UPDATE_DTM
	, impba.update_user_id
	, impba.account_no
from asr_datastore.improvement AS imp 
	JOIN asr_datastore.improvement_built_as AS impba ON imp.account_no = impba.account_no AND imp.improvement_no = impba.improvement_no


GO
/****** Object:  View [asr_adv_search_query].[v_imp_seg_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE view [asr_adv_search_query].[v_imp_seg_export] as
SELECT DISTINCT
       fa.[account_no]
      ,fa.[state_parcel_no]
      ,fa.[account_type]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
      ,vb.[build_quality]
      ,vb.[completed_percent]
      ,vbs.[building_number]
      ,vbs.[style_code_description]
      ,vbs.[built_as_sf]
      ,vbs.[built_year]
      ,vbs.[roof_construction_type]
      ,vbs.[heat_type]
      ,vbs.[exterior_construction_type]
      ,vbs.[interior_finish_type]
      ,vbs.[number_of_stories]
      ,vbs.[roof_material_type]
      ,vbs.[floor_material_type]
      ,vbs.[bedroom_count]
      ,vbs.[bathroom_count]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
      ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
      ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code]
	     ,vb.[property_type]
,i.[improvement_sf]
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_adv_search_query].[v_building] vb
  ON fa.account_no = vb.account_no
  JOIN [asr_adv_search_query].[v_building_style] vbs
  ON fa.account_no = vbs.account_number
   JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no
  		 JOIN [asr_datastore].[improvement] i
  ON fa.account_no = i.account_no
    WHERE vb.building_number = i.improvement_no
  AND vb.building_number = vbs.building_number



GO
/****** Object:  Table [asr_datastore].[sale_inventory_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[sale_inventory_detail](
	[inventorydetailid] [numeric](15, 0) NOT NULL,
	[recording_no] [varchar](30) NOT NULL,
	[account_no] [varchar](30) NOT NULL,
	[detail_type] [varchar](50) NULL,
	[inventory_detail_type] [varchar](100) NULL,
	[inventory_detail_description] [varchar](100) NULL,
	[inventory_unit_count] [numeric](15, 4) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
 CONSTRAINT [PK_sale_inventory_detail] PRIMARY KEY CLUSTERED 
(
	[inventorydetailid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_sale_inventory_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_sale_inventory_detail]
WITH SCHEMABINDING
AS
SELECT        sid.inventorydetailid, sid.recording_no, sid.account_no, sid.detail_type, sid.inventory_detail_type, sid.inventory_detail_description, sid.inventory_unit_count, sid.create_datetime, sid.create_user_id, 
                         sid.update_datetime, sid.update_user_id, sid.rowhash
FROM            asr_datastore.sale_inventory_detail AS sid INNER JOIN
                         asr_datastore.account AS a ON sid.account_no = a.account_no AND a.account_status = 'A'

GO
/****** Object:  View [gis_ods_query].[v_improvement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


--ODS1 141,313	
--ODS1
--SELECT * FROM gis_ods_query.v_improvement; --141,313
--ODS2
CREATE   view [gis_ods_query].[v_improvement]
as
select 
	IMPROVEMENT_EID	= try_convert(int,ROW_NUMBER() OVER (ORDER BY i.account_no ASC))
	,ACCOUNT_NO	= i.account_no
	,BUILDING_ID	= try_convert(int,i.improvement_no)
	,PROPERTY_TYPE_CODE	= i.property_type
	,CONDITION_CODE	= i.condition_type
	,QUALITY_CODE	= i.improvement_quality
	,IMPROVEMENT_SF	= try_convert(int,i.improvement_sf)
	,COMPLETION_PERCENT	= i.completed_percent
	,UNIT_TYPE	= i.improvement_unit_type
	
	,ROW_START_DTM	= i.create_datetime
	,ROW_END_DTM	= i.create_datetime
	,ROW_CURRENT_FLAG	= convert(int,1)
	,CREATE_DTM	= i.create_datetime
	,CREATE_USER_ID	= i.create_user_id
	,UPDATE_DTM	= i.update_datetime
	,UPDATE_USER_ID = i.update_user_id

from [asr_datastore].[improvement] i --152,939
join [asr_datastore].[account] a on i.account_no = a.account_no
where a.account_status = 'A'  --141,313

GO
/****** Object:  Table [asr_datastore].[improvement_detail_stage]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement_detail_stage](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [int] NOT NULL,
	[improvement_id] [int] NULL,
	[fire_places_count] [int] NULL,
	[garage_sf] [numeric](15, 4) NULL,
	[is_walkout_basement] [varchar](5) NULL,
	[finished_basement_sf] [numeric](15, 4) NULL,
	[unfinished_basement_sf] [numeric](15, 4) NULL,
	[finished_basement_pct] [numeric](7, 4) NULL,
	[unfinished_basement_pct] [numeric](7, 4) NULL,
	[total_porch_sf] [numeric](15, 4) NULL,
	[created_date] [datetime] NOT NULL,
	[created_user] [varchar](30) NOT NULL,
	[updated_date] [datetime] NOT NULL,
	[updated_user] [varchar](30) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  View [asr_adv_search_query].[v_building_summary_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE view [asr_adv_search_query].[v_building_summary_export] as
SELECT DISTINCT
       fa.[account_no]
      ,fa.[state_parcel_no]
	  ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
      ,vbs.[built_as_sf]
      ,vb.[building_number]
      ,vb.[property_type]
      ,vb.[build_quality]
      ,vb.[fireplaces]
      ,vb.[basement_walkout]
      ,vb.[basement_finished_square_feet]
      ,vb.[basement_total_square_feet] - [basement_finished_square_feet] as basement_unfinished_square_feet
      ,vb.[completed_percent]
      ,vb.[building_unit_type]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
      ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
      ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code] 
   ,ids.[garage_sf]
   ,ids.[finished_basement_sf]
   ,ids.[unfinished_basement_sf]
   ,ids.[finished_basement_sf] + ids.[unfinished_basement_sf] as basement_sf
   ,ids.[total_porch_sf]
   ,ids.[finished_basement_pct]
   ,ids.[unfinished_basement_pct]
	  ,i.[improvement_sf]
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_adv_search_query].[v_building] vb
  ON fa.account_no = vb.account_no
  JOIN [asr_adv_search_query].[v_building_style] vbs
  ON fa.account_no = vbs.account_number
   JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no
 LEFT OUTER JOIN [asr_datastore].[improvement_detail_stage] ids
  ON fa.account_no = ids.account_no
  JOIN [asr_datastore].[improvement] i
  on fa.account_no = i.account_no




GO
/****** Object:  View [asr_ods2_query].[v_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_ods2_query].[v_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      1/28/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access active accounts for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, state_parcel_no, tax_district_no, sub_filing_recording_no, account_type, appraisal_type
     , account_status, account_status_description, legal_description, longitude_x, latitude_y, elevation_z, location
	 , create_datetime, create_user_id
	 , update_datetime, update_user_id, rowhash
FROM asr_datastore.account
WHERE account_status = 'A';





GO
/****** Object:  View [gis_ods_query].[v_platted_lot]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE   view [gis_ods_query].[v_platted_lot]
as
SELECT distinct
	PLATTED_LOT_EID = try_convert(int,ROW_NUMBER() OVER (ORDER BY STATE_PARCEL_NO, LOT_NO, BLOCK_NO, TRACT_NO, CREATE_DTM, CREATE_USER_ID, UPDATE_DTM, UPDATE_USER_ID))
	,*
from (
	SELECT distinct
		--,p.[account_no]
		 STATE_PARCEL_NO = a.[state_parcel_no]
		,LOT_NO	= p.LOT
		,BLOCK_NO = p.BLOCK
		,TRACT_NO = p.TRACT

		,ROW_START_DTM	= SYSDATETIME()
		,ROW_END_DTM	= try_convert(int,null)
		,ROW_CURRENT_FLAG = 'Y'	
		,CREATE_DTM	= p.CREATE_DTM
		,CREATE_USER_ID	= p.CREATE_USER_ID
		,UPDATE_DTM	= p.UPDATE_DTM
		,UPDATE_USER_ID	= p.UPDATE_USER_ID
	FROM [asr_datastore].[account] a
	JOIN [asr_datastore].[account_platted_lot] p on a.account_no = p.ACCOUNT_NO
	where a.[account_status] = 'A'
	--order by 1 desc
) a

GO
/****** Object:  View [asr_adv_search_query].[v_parcel_values_export_old_2]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


create view [asr_adv_search_query].[v_parcel_values_export_old_2] as
SELECT 
       fa.[account_no]
      ,fa.[state_parcel_no]
	  ,v.[valuation_class_code]
	  ,vcc.[code_descr]
      ,vcc.[valuation_type_code]
      ,fa.[actual_value_sum]
      ,fa.[assessed_value_sum]
      ,fa.[net_acres_sum]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [assessor_datastore].[asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
  JOIN [dbo].[valuation_class_code] vcc
  ON v.valuation_class_code = vcc.valuation_class_code



GO
/****** Object:  View [asr_ods2_query].[v_account_neighborhood]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_ods2_query].[v_account_neighborhood]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/1/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access account_neighborhood for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT n.account_no, n.neighborhood_code, n.property_type, n.neighborhood_extension
	 , n.create_datetime, n.create_user_id
	 , n.update_datetime, n.update_user_id, rowhash
FROM asr_datastore.account_neighborhood n
INNER JOIN asr_datastore.account a
	  ON n.account_no = a.account_no
	  AND a.account_status = 'A';




GO
/****** Object:  View [gis_ods_query].[v_sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



create   view [gis_ods_query].[v_sub_filing]
as
Select
	SUB_FILING_RECORDING_NO = [sub_filing_recording_no]
	,SUBDIVISION_NO = [subdivision_no]
	,FILING_NO = [filing_no]
	,FILING_DESCR = [filing_description]
	,DEDICATED_SUB_FILING_NAME = [subdivision_name]
	,ROW_START_DTM = [create_datetime]
	,ROW_END_DTM = null
	,ROW_CURRENT_FLAG = '1'
	,CREATE_DTM = [create_datetime]
	,CREATE_USER_ID = create_user_id
	,UPDATE_DTM = update_datetime
	,UPDATE_USER_ID = update_user_id
FROM [asr_datastore].[sub_filing]
GO
/****** Object:  View [asr_app_query].[v_appeal]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_app_query].[v_appeal]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:     5/2/2017
Developer:    TONY GOLDEN
Comments:     Initial creation
              the datastore db view of the data in the appeal table in the datastore db.
			  derived from the table in staging and used to publish data in the same format to
			  assessor_app.

			  3/9/2018
			  AJG
			  added new agent fields for CBOE application agent email, phone, address

			  7/3/2018
			  DG
			  added where clause to filter out appeal_type = 'ABAT' for abatements

			  5/21/2020
			  DG
			  changed where clause to only allow appeal_type = 'ASSR'
*************************************************************************************/
AS
SELECT TAX_YEAR
      ,APPEAL_NO
      ,APPEAL_TYPE
      ,APPEAL_METHOD
      ,ASSIGNED_TO
      ,INITIATED_BY
      ,AGENT_CODE
	  ,AGENT_NAME
	  ,AGENT_EMAILADDRESS
	  ,AGENT_PHONE
	  ,AGENT_ADDRESS
	  ,FILER_EMAIL
	  ,FILER_PHONE
	  ,FILER
	  ,FILER_ADDRESS
	  ,FILER_CITY
	  ,FILER_STATECODE
	  ,FILER_ZIPCODE
      ,MAIL_TO
      ,DECISION_BY
      ,CASE_NO
      ,REREVIEW_STATUS
      ,REREVIEW_INITIALS
      ,REREVIEW_DECISION
      ,APPEAL_REASON
      ,APPEAL_BASIS
      ,APPEAL_RECOMMENDATION
      ,APPEAL_ADJUST_DENY_REASON_ID
      ,APPEAL_END_VALUE
      ,DATE_OF_APPEAL
      ,DATE_RECEIVED
      ,TAX_PAYER_MEETING_REQUEST_FLAG
      ,TAX_PAYER_MEETING_DATE
      ,TAX_PAYER_MEETING_TIME
      ,BEGINNING_APPEAL_VALUE
      ,APPEAL_ON1
      ,APPEAL_ON2
      ,APPEAL_OD0
      ,APPEAL_OD1
      ,APPEAL_OM0
      ,APPEAL_OM1
      ,APPEAL_ON0
      ,APPEAL_OT0
      ,APPEAL_OT1
      ,APPRAISAL_TYPE
      ,PRIMARY_ACCOUNT
      ,JURISDICTION_ID
      ,SCHEDULE_DATE_AS
      ,SCHEDULE_START_TIME
      ,SCHEDULE_END_TIME
      ,SCHEDULE_COMMENT
      ,SCHEDULE_BOARD_FILE_NO
      ,SCHEDULE_APPRAISER_INITIALS
      ,APPOINTMENT_COLOR
      ,WRITE_DATE
      ,APPEAL_STATUS_ID
      ,APPEAL_REASON_DESCRIPTION
      ,BOARD_NO
      ,APPEAL_DECISION
      ,SEQ_ID
      ,create_datetime
      ,create_user_id
      ,rowhash
      ,update_datetime
      ,update_user_id
  FROM assessor_datastore.asr_datastore.appeal
  where APPEAL_TYPE = 'ASSR';


GO
/****** Object:  View [asr_adv_search_query].[v_valuation_history_export_old_2]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create view [asr_adv_search_query].[v_valuation_history_export_old_2] as
SELECT 
   fa.[account_no]
  ,fa.[state_parcel_no]
  ,v.[tax_year]
  ,v.[actual_value]
  ,v.[raw_assessed_value]
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
GO
/****** Object:  Table [asr_datastore].[subdivision]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[subdivision](
	[subdivision_no] [varchar](30) NOT NULL,
	[subdivision_name] [varchar](256) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  View [gis_ods_query].[v_subdivision]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


create   view [gis_ods_query].[v_subdivision]
as
Select
	[subdivision_no]
	,[subdivision_name]
FROM [asr_datastore].[subdivision]
GO
/****** Object:  View [asr_ods2_query].[v_account_property_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [asr_ods2_query].[v_account_property_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/1/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access account_property_address for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT pa.account_no, pa.order_no, pa.primary_address_flag, pa.building_no, pa.unit_no, pa.unit_designator, 
pa.address_number, pa.address_number_suffix, pa.pre_direction_code, pa.street_name, pa.street_type_code, 
pa.post_direction_code, pa.city_name, pa.location_zip_code, 
pa.create_datetime, pa.create_user_id, pa.update_datetime, pa.update_user_id, pa.rowhash
FROM asr_datastore.account_property_address pa
INNER JOIN asr_datastore.account a
	  ON pa.account_no = a.account_no
	  AND a.account_status = 'A';







GO
/****** Object:  View [asr_spatialest_query].[v_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_spatialest_query].[v_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
SELECT   account_no, state_parcel_no, tax_district_no, sub_filing_recording_no, account_type, 
         dbo.fn_CSVClean(legal_description) AS legal_description, longitude_x, 
         latitude_y, elevation_z, create_datetime, create_user_id, update_datetime, update_user_id, HASHBYTES('SHA2_256', ISNULL(RTRIM(account_no), 'DBNULL_TEXT') + ISNULL(RTRIM(state_parcel_no), 
         'DBNULL_TEXT') + ISNULL(RTRIM(tax_district_no), 'DBNULL_TEXT') + ISNULL(RTRIM(sub_filing_recording_no), 'DBNULL_TEXT') + ISNULL(RTRIM(account_type), 'DBNULL_TEXT') 
         + ISNULL(RTRIM(dbo.fn_CSVClean(legal_description)), 'DBNULL_TEXT') + ISNULL(RTRIM(longitude_x), 'DBNULL_TEXT') + ISNULL(RTRIM(latitude_y), 
         'DBNULL_TEXT') + ISNULL(RTRIM(elevation_z), 'DBNULL_TEXT') + ISNULL(RTRIM(location), 'DBNULL_TEXT')) AS rowhash
FROM     asr_datastore.account
WHERE    1=1
		   --AND  (appraisal_type = 'Real') 
         AND (account_status = 'A')
		 AND account_no not like 'C%'



GO
/****** Object:  View [asr_ods2_query].[v_etl_parameter]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_ods2_query].[v_etl_parameter]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      1/28/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access etl_parameter for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT parameter_name, parameter_value, parameter_description, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.etl_parameter;




GO
/****** Object:  View [asr_open_data_query].[v_sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [asr_open_data_query].[v_sub_filing]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      5/10/2017
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access subfiling info for loading data into
			   asssessor open data in socrata
*************************************************************************************/
AS
SELECT 
sub_filing_recording_no, 
subdivision_no, 
filing_no, 
filing_description, 
dedicated_sub_filing_name, 
create_datetime, 
create_user_id,
update_datetime, 
update_user_id
FROM [asr_datastore].[sub_filing]







GO
/****** Object:  View [asr_app_query].[v_account_valuation]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_app_query].[v_account_valuation]
AS
SELECT     av.account_no, av.valuation_class_code, av.actual_value, av.assessed_value, av.net_acres, av.new_growth_flag, av.valuation_class_code_description, av.create_datetime, av.create_user_id, a.account_type, av.update_datetime, av.update_user_id, 
                  av.rowhash
FROM        asr_datastore.account_valuation AS av INNER JOIN
                  asr_datastore.account AS a ON av.account_no = a.account_no AND a.account_status = 'A' AND LEFT(av.account_no, 1) <> 'C'
GO
/****** Object:  View [asr_spatialest_query].[v_account_property_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_spatialest_query].[v_account_property_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access active account property address for loading data into
			   the asssessor_app database for Spatialist
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
select apa.account_no
, apa.address_number
, apa.pre_direction_code
, dbo.fn_CSVClean(apa.street_name) AS street_name
, apa.street_type_code
, apa.unit_no
, dbo.fn_CSVClean(apa.city_name) AS city_name
, apa.location_zip_code
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, HASHBYTES('SHA2_256', ISNULL(RTRIM(apa.account_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(apa.address_number),'DBNULL_TEXT') 
  + ISNULL(RTRIM(apa.pre_direction_code), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(apa.street_name)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(apa.street_type_code), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(apa.unit_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(apa.city_name)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(apa.location_zip_code),'DBNULL_TEXT') 
  ) AS rowhash 
from asr_datastore.account_property_address apa
inner join (select account_no from asr_datastore.account where appraisal_type = 'Real' and account_status = 'A' and account_no not like 'C%') a
on apa.account_no = a.account_no
where primary_address_flag = 1













GO
/****** Object:  View [asr_ods2_query].[v_improvement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_ods2_query].[v_improvement]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access improvements for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, improvement_no, completed_percent, improvement_quality, improvement_perimeter, 
improvement_sf, improvement_net_sf, property_type, condition_type, approach_type, 
create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM asr_datastore.improvement;






GO
/****** Object:  View [asr_open_data_query].[v_account_fact]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_open_data_query].[v_account_fact]

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      5/10/2017
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access account_fact records for consumption by 
			   assessor open data in socrata

*************************************************************************************/
AS
SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  CAST(INGRP1.ACCOUNT_SUBTYPE_CODE AS VARCHAR) ACCOUNT_SUBTYPE_CODE,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  CAST(INGRP1.LAND_ECONOMIC_AREA_CODE AS VARCHAR) LAND_ECONOMIC_AREA_CODE,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  CAST(INGRP1.SUB_FILING_RECORDING_NO AS VARCHAR) SUB_FILING_RECORDING_NO,
  INGRP1.OWNER_NAME OWNER_NAME,
  INGRP1.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP1.ADDRESS_LINE_2 ADDRESS_LINE_2,
  CAST(INGRP1.ADDRESS_LINE_3 AS VARCHAR) ADDRESS_LINE_3,
  INGRP1.CITY_NAME_1 CITY_NAME_1,
  INGRP1.STATE STATE,
  INGRP1.ZIP_CODE ZIP_CODE,
  INGRP1.COUNTRY COUNTRY,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  SUBSTRING(INGRP1.ADDRESS_NUMBER,1,10) ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  INGRP2.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  INGRP2.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  INGRP1.LEGAL_DESCR LEGAL_DESCR,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.FEDERAL_ID_NO FEDERAL_ID_NO,
  'CO' as LOCATION_STATE_CODE

FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCR,
  INGRP1.UNIT_NO UNIT_NO,
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP1.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP1.STREET_NAME STREET_NAME,
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP1.CITY_NAME CITY_NAME,
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP2.OWNER_NAME OWNER_NAME,
  INGRP2.FEDERAL_ID_NO FEDERAL_ID_NO,
  INGRP2.ADDRESS_LINE_1 ADDRESS_LINE_1,
  INGRP2.ADDRESS_LINE_2 ADDRESS_LINE_2,
  INGRP2.ADDRESS_LINE_3 ADDRESS_LINE_3,
  INGRP2.CITY_NAME CITY_NAME_1,
  INGRP2.STATE STATE,
  INGRP2.ZIP_CODE ZIP_CODE,
  INGRP2.COUNTRY COUNTRY,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP2.UNIT_NO UNIT_NO,
  INGRP2.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  INGRP2.ADDRESS_NUMBER ADDRESS_NUMBER,
  INGRP2.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  INGRP2.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  INGRP2.STREET_NAME STREET_NAME,
  INGRP2.STREET_TYPE_CODE STREET_TYPE_CODE,
  INGRP2.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  INGRP2.CITY_NAME CITY_NAME,
  INGRP2.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
  INGRP1.ACCOUNT_NO ACCOUNT_NO,
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS,
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE,
  INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO,
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL LAND_ECONOMIC_AREA_CODE,
  --asr_datastore.REAL_ACCOUNT.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
  --NULL LEGAL_DESCRIPTION,
  INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION,
  INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE
FROM
   ( SELECT
ACCOUNT.ACCOUNT_NO ACCOUNT_NO,
ACCOUNT.ACCOUNT_STATUS ACCOUNT_STATUS,
ACCOUNT.ACCOUNT_TYPE ACCOUNT_TYPE,
ACCOUNT.APPRAISAL_TYPE ACCOUNT_SUBTYPE_CODE,
  --asr_datastore.ACCOUNT.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
  ACCOUNT.STATE_PARCEL_NO STATE_PARCEL_NO,
  ACCOUNT.TAX_DISTRICT_NO TAX_DISTRICT_NO,
  ACCOUNT.SUB_FILING_RECORDING_NO,
  --ACCOUNT_PLATTED_LOT.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
  NULL REDUCED_MILL_LEVY,
  --ACCOUNT.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
  NULL REDUCED_TAX_RATE,
  --ACCOUNT.REDUCED_TAX_RATE REDUCED_TAX_RATE
  ACCOUNT.LEGAL_DESCRIPTION
FROM
    asr_datastore.ACCOUNT  ACCOUNT   
 LEFT OUTER JOIN   asr_datastore.ACCOUNT_PLATTED_LOT  ACCOUNT_PLATTED_LOT ON ( ( ACCOUNT.STATE_PARCEL_NO = ACCOUNT_PLATTED_LOT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN   asr_datastore.REAL_ACCOUNT  REAL_ACCOUNT ON ( ( INGRP1.ACCOUNT_NO = REAL_ACCOUNT.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_PROPERTY_ADDRESS.UNIT_NO UNIT_NO,
  ACCOUNT_PROPERTY_ADDRESS.UNIT_DESIGNATOR UNIT_DESIGNATOR,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER ADDRESS_NUMBER,
  ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX,
  ACCOUNT_PROPERTY_ADDRESS.PRE_DIRECTION_CODE PRE_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.STREET_NAME STREET_NAME,
  ACCOUNT_PROPERTY_ADDRESS.STREET_TYPE_CODE STREET_TYPE_CODE,
  ACCOUNT_PROPERTY_ADDRESS.POST_DIRECTION_CODE POST_DIRECTION_CODE,
  ACCOUNT_PROPERTY_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_PROPERTY_ADDRESS.LOCATION_ZIP_CODE LOCATION_ZIP_CODE,
  ACCOUNT_PROPERTY_ADDRESS.ACCOUNT_NO ACCOUNT_NO
FROM
    asr_datastore.ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS   
 --JOIN   ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS ON ( ( ACCOUNT_PROPERTY_ADDRESS.SITUS_ADDRESS_EID = ACCOUNT_SITUS_ADDRESS.SITUS_ADDRESS_EID ) )
  WHERE 
  ( ACCOUNT_PROPERTY_ADDRESS.PRIMARY_ADDRESS_FLAG = 1  )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  
 ( SELECT
  ACCOUNT_OWNER_ADDRESS.ACCOUNT_NO ACCOUNT_NO,
  ACCOUNT_OWNER_ADDRESS.OWNER_NAME OWNER_NAME,
  ACCOUNT_OWNER_ADDRESS.FEDERAL_ID_NO FEDERAL_ID_NO,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_1 ADDRESS_LINE_1,
  ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_2 ADDRESS_LINE_2,
  NULL ADDRESS_LINE_3,
  ACCOUNT_OWNER_ADDRESS.CITY_NAME CITY_NAME,
  ACCOUNT_OWNER_ADDRESS.STATE STATE,
  ACCOUNT_OWNER_ADDRESS.ZIP_CODE ZIP_CODE,
  ACCOUNT_OWNER_ADDRESS.COUNTRY COUNTRY
FROM
    asr_datastore.ACCOUNT_OWNER_ADDRESS  ACCOUNT_OWNER_ADDRESS
  WHERE 
  ( ACCOUNT_OWNER_ADDRESS.PRIMARY_OWNER_FLAG = 1 )  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) ) ) INGRP1   
 LEFT OUTER JOIN  ( SELECT
  AGGREGATOR.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE,
  AGGREGATOR.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE,
  AGGREGATOR.TOTAL_NET_ACRES TOTAL_NET_ACRES,
  AGGREGATOR.ACCOUNT_NO ACCOUNT_NO
FROM
  (SELECT
  SUM(ACCOUNT_VALUATION.ACTUAL_VALUE) TOTAL_ACTUAL_VALUE,
  SUM(ACCOUNT_VALUATION.ASSESSED_VALUE) TOTAL_ASSESSED_VALUE,
  SUM(ACCOUNT_VALUATION.NET_ACRES) TOTAL_NET_ACRES,
  ACCOUNT_VALUATION.ACCOUNT_NO ACCOUNT_NO
FROM
  asr_datastore.ACCOUNT_VALUATION  ACCOUNT_VALUATION
GROUP BY
ACCOUNT_VALUATION.ACCOUNT_NO) AGGREGATOR  ) INGRP2 ON ( ( INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO ) );






















GO
/****** Object:  View [asr_spatialest_query].[v_improvement]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_spatialest_query].[v_improvement]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access improvements for loading data into
			   the asssessor_app database for Spatialist
*************************************************************************************/
AS
select i.account_no
, i.improvement_no
, i.completed_percent
, i.improvement_quality
, i.improvement_sf
, i.property_type
, i.condition_type
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, rowhash
from asr_datastore.improvement i
inner join (select account_no from asr_datastore.account where appraisal_type = 'Real' and account_status = 'A') a
on i.account_no = a.account_no










GO
/****** Object:  View [asr_ods2_query].[v_improvement_built_as]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_ods2_query].[v_improvement_built_as]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access improvement built as data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, improvement_no, built_as_detail_id, built_as_code, built_as_code_description, 
hvac_percent, exterior_construction_type, interior_finish_type, no_of_story, typical_story_height, 
NULL built_as_height, roof_construction_type, roof_material_type, floor_material_type, room_count, 
bedroom_count, total_unit_count, class_code, class_code_description, built_year, remodeled_year, 
remodeled_percent, effective_age, built_as_sf, sprinkler_coverage_sf, bathroom_count, heat_type, 
create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM asr_datastore.improvement_built_as;








GO
/****** Object:  View [asr_spatialest_query].[v_improvement_built_as]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE VIEW [asr_spatialest_query].[v_improvement_built_as]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access improvement built as for loading data into
			   the asssessor_app database for Spatialist
*************************************************************************************/
AS
select iba.account_no
, iba.improvement_no
, iba.built_as_detail_id
, iba.built_as_code_description
, iba.exterior_construction_type
, iba.no_of_story
, iba.room_count
, iba.bedroom_count
, iba.total_unit_count
, iba.built_year
, iba.built_as_sf
, iba.bathroom_count
, iba.heat_type
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, rowhash
from asr_datastore.improvement_built_as iba
inner join (select account_no from asr_datastore.account where appraisal_type = 'Real' and account_status = 'A') a
on iba.account_no = a.account_no












GO
/****** Object:  View [asr_ods2_query].[v_improvement_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [asr_ods2_query].[v_improvement_detail]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access improvement details for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, improvement_no, improvement_detail_id, improvement_detail_type, improvement_detail_type_description, 
detail_unit_count, addon_code, addon_code_description, detail_built_year, create_datetime, 
create_user_id, update_datetime, update_user_id, rowhash
FROM asr_datastore.improvement_detail;







GO
/****** Object:  Table [asr_datastore].[account_owner_address_unmasked]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_owner_address_unmasked](
	[account_no] [varchar](30) NOT NULL,
	[person_code] [char](18) NOT NULL,
	[primary_owner_flag] [bit] NOT NULL,
	[owner_name] [varchar](256) NOT NULL,
	[owner_name_1] [varchar](256) NOT NULL,
	[owner_name_2] [varchar](256) NULL,
	[ownership_percent] [numeric](9, 8) NULL,
	[federal_id_no] [varchar](30) NULL,
	[address_line_1] [varchar](80) NULL,
	[address_line_2] [varchar](80) NULL,
	[city_name] [varchar](80) NULL,
	[state] [varchar](80) NULL,
	[zip_code] [varchar](30) NULL,
	[country] [varchar](80) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[private_flag] [bit] NULL,
 CONSTRAINT [pk_account_owner_address_unmasked] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[person_code] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [gis_ods_query].[v_account_fact_unmasked]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [gis_ods_query].[v_account_fact_unmasked]

/**************************************Comments***************************************

Date:		Author			Commnets
01/24/2024	Paul Mathews	Initial creation

*************************************************************************************/
AS
SELECT 
  INGRP1.ACCOUNT_NO ACCOUNT_NO, 
  INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO, 
  CAST(
    INGRP1.ACCOUNT_SUBTYPE_CODE AS VARCHAR
  ) ACCOUNT_SUBTYPE_CODE, 
  INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO, 
  CAST(
    INGRP1.LAND_ECONOMIC_AREA_CODE AS VARCHAR
  ) LAND_ECONOMIC_AREA_CODE, 
  INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE, 
  CAST(
    INGRP1.SUB_FILING_RECORDING_NO AS VARCHAR
  ) SUB_FILING_RECORDING_NO, 
  INGRP1.OWNER_NAME OWNER_NAME, 
  INGRP1.ADDRESS_LINE_1 ADDRESS_LINE_1, 
  INGRP1.ADDRESS_LINE_2 ADDRESS_LINE_2, 
  CAST(INGRP1.ADDRESS_LINE_3 AS VARCHAR) ADDRESS_LINE_3, 
  INGRP1.CITY_NAME_1 CITY_NAME_1, 
  INGRP1.STATE STATE, 
  INGRP1.ZIP_CODE ZIP_CODE, 
  INGRP1.COUNTRY COUNTRY, 
  INGRP1.UNIT_NO UNIT_NO, 
  INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR, 
  SUBSTRING(INGRP1.ADDRESS_NUMBER, 1, 10) ADDRESS_NUMBER, 
  INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX, 
  INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE, 
  INGRP1.STREET_NAME STREET_NAME, 
  INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE, 
  INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE, 
  INGRP1.CITY_NAME CITY_NAME, 
  INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE, 
  INGRP2.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE, 
  INGRP2.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE, 
  INGRP2.TOTAL_NET_ACRES TOTAL_NET_ACRES, 
  INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS, 
  INGRP1.FEDERAL_ID_NO FEDERAL_ID_NO, 
  REPLACE(REPLACE(REPLACE(REPLACE(INGRP1.LEGAL_DESCR,'  ',' '),'  ',' '),'  ',' '),'  ',' ') LEGAL_DESCR, 
  REDUCED_MILL_LEVY = (
    SELECT 
      SUM(assessed_mill_levy) 
    FROM 
      [asr_datastore].[tax_authority_fund] ta 
      join [asr_datastore].[tax_district_authority] td on ta.tax_authority_no = td.tax_authority_no 
    where 
      td.tax_district_no = INGRP1.TAX_DISTRICT_NO
  ), 
  REDUCED_TAX_RATE = (
    SELECT 
      SUM(assessed_mill_levy)/ 1000 
    FROM 
      [asr_datastore].[tax_authority_fund] ta 
      join [asr_datastore].[tax_district_authority] td on ta.tax_authority_no = td.tax_authority_no 
    where 
      td.tax_district_no = INGRP1.TAX_DISTRICT_NO
  ) 
FROM 
  (
    SELECT 
      INGRP1.ACCOUNT_NO ACCOUNT_NO, 
      INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS, 
      INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE, 
      INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE, 
      INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO, 
      INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO, 
      INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO, 
      INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE, 
      INGRP1.LEGAL_DESCRIPTION LEGAL_DESCR, 
      INGRP1.UNIT_NO UNIT_NO, 
      INGRP1.UNIT_DESIGNATOR UNIT_DESIGNATOR, 
      INGRP1.ADDRESS_NUMBER ADDRESS_NUMBER, 
      INGRP1.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX, 
      INGRP1.PRE_DIRECTION_CODE PRE_DIRECTION_CODE, 
      INGRP1.STREET_NAME STREET_NAME, 
      INGRP1.STREET_TYPE_CODE STREET_TYPE_CODE, 
      INGRP1.POST_DIRECTION_CODE POST_DIRECTION_CODE, 
      INGRP1.CITY_NAME CITY_NAME, 
      INGRP1.LOCATION_ZIP_CODE LOCATION_ZIP_CODE, 
      INGRP2.OWNER_NAME OWNER_NAME, 
      INGRP2.FEDERAL_ID_NO FEDERAL_ID_NO, 
      INGRP2.ADDRESS_LINE_1 ADDRESS_LINE_1, 
      INGRP2.ADDRESS_LINE_2 ADDRESS_LINE_2, 
      INGRP2.ADDRESS_LINE_3 ADDRESS_LINE_3, 
      INGRP2.CITY_NAME CITY_NAME_1, 
      INGRP2.STATE STATE, 
      INGRP2.ZIP_CODE ZIP_CODE, 
      INGRP2.COUNTRY COUNTRY, 
      INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY, 
      INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE 
    FROM 
      (
        SELECT 
          INGRP1.ACCOUNT_NO ACCOUNT_NO, 
          INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS, 
          INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE, 
          INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE, 
          INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO, 
          INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO, 
          INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO, 
          INGRP1.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE, 
          INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION, 
          INGRP2.UNIT_NO UNIT_NO, 
          INGRP2.UNIT_DESIGNATOR UNIT_DESIGNATOR, 
          INGRP2.ADDRESS_NUMBER ADDRESS_NUMBER, 
          INGRP2.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX, 
          INGRP2.PRE_DIRECTION_CODE PRE_DIRECTION_CODE, 
          INGRP2.STREET_NAME STREET_NAME, 
          INGRP2.STREET_TYPE_CODE STREET_TYPE_CODE, 
          INGRP2.POST_DIRECTION_CODE POST_DIRECTION_CODE, 
          INGRP2.CITY_NAME CITY_NAME, 
          INGRP2.LOCATION_ZIP_CODE LOCATION_ZIP_CODE, 
          INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY, 
          INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE 
        FROM 
          (
            SELECT 
              INGRP1.ACCOUNT_NO ACCOUNT_NO, 
              INGRP1.ACCOUNT_STATUS ACCOUNT_STATUS, 
              INGRP1.ACCOUNT_TYPE ACCOUNT_TYPE, 
              INGRP1.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE, 
              INGRP1.STATE_PARCEL_NO STATE_PARCEL_NO, 
              INGRP1.TAX_DISTRICT_NO TAX_DISTRICT_NO, 
              INGRP1.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO, 
              NULL LAND_ECONOMIC_AREA_CODE, 
              --asr_datastore.REAL_ACCOUNT.LAND_ECONOMIC_AREA_CODE LAND_ECONOMIC_AREA_CODE,
              --NULL LEGAL_DESCRIPTION,
              INGRP1.LEGAL_DESCRIPTION LEGAL_DESCRIPTION, 
              INGRP1.REDUCED_MILL_LEVY REDUCED_MILL_LEVY, 
              INGRP1.REDUCED_TAX_RATE REDUCED_TAX_RATE 
            FROM 
              (
                SELECT 
                  ACCOUNT.ACCOUNT_NO ACCOUNT_NO, 
                  ACCOUNT.ACCOUNT_STATUS ACCOUNT_STATUS, 
                  ACCOUNT.ACCOUNT_TYPE ACCOUNT_TYPE, 
                  ACCOUNT.APPRAISAL_TYPE ACCOUNT_SUBTYPE_CODE, 
                  --asr_datastore.ACCOUNT.ACCOUNT_SUBTYPE_CODE ACCOUNT_SUBTYPE_CODE,
                  ACCOUNT.STATE_PARCEL_NO STATE_PARCEL_NO, 
                  ACCOUNT.TAX_DISTRICT_NO TAX_DISTRICT_NO, 
                  ACCOUNT.SUB_FILING_RECORDING_NO, 
                  --ACCOUNT_PLATTED_LOT.SUB_FILING_RECORDING_NO SUB_FILING_RECORDING_NO,
                  NULL REDUCED_MILL_LEVY, 
                  --ACCOUNT.REDUCED_MILL_LEVY REDUCED_MILL_LEVY,
                  NULL REDUCED_TAX_RATE, 
                  --ACCOUNT.REDUCED_TAX_RATE REDUCED_TAX_RATE
                  ACCOUNT.LEGAL_DESCRIPTION 
                FROM 
                  asr_datastore.ACCOUNT ACCOUNT 
                  LEFT OUTER JOIN asr_datastore.ACCOUNT_PLATTED_LOT ACCOUNT_PLATTED_LOT ON (
                    (
                      ACCOUNT.STATE_PARCEL_NO = ACCOUNT_PLATTED_LOT.ACCOUNT_NO
                    )
                  )
				where ACCOUNT.account_status = 'A'
              ) INGRP1 
              LEFT OUTER JOIN asr_datastore.REAL_ACCOUNT REAL_ACCOUNT ON (
                (
                  INGRP1.ACCOUNT_NO = REAL_ACCOUNT.ACCOUNT_NO
                )
              )
          ) INGRP1 
          LEFT OUTER JOIN (
            SELECT 
              ACCOUNT_PROPERTY_ADDRESS.UNIT_NO UNIT_NO, 
              ACCOUNT_PROPERTY_ADDRESS.UNIT_DESIGNATOR UNIT_DESIGNATOR, 
              ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER ADDRESS_NUMBER, 
              ACCOUNT_PROPERTY_ADDRESS.ADDRESS_NUMBER_SUFFIX ADDRESS_NUMBER_SUFFIX, 
              ACCOUNT_PROPERTY_ADDRESS.PRE_DIRECTION_CODE PRE_DIRECTION_CODE, 
              ACCOUNT_PROPERTY_ADDRESS.STREET_NAME STREET_NAME, 
              ACCOUNT_PROPERTY_ADDRESS.STREET_TYPE_CODE STREET_TYPE_CODE, 
              ACCOUNT_PROPERTY_ADDRESS.POST_DIRECTION_CODE POST_DIRECTION_CODE, 
              ACCOUNT_PROPERTY_ADDRESS.CITY_NAME CITY_NAME, 
              ACCOUNT_PROPERTY_ADDRESS.LOCATION_ZIP_CODE LOCATION_ZIP_CODE, 
              ACCOUNT_PROPERTY_ADDRESS.ACCOUNT_NO ACCOUNT_NO 
            FROM 
              asr_datastore.ACCOUNT_PROPERTY_ADDRESS ACCOUNT_PROPERTY_ADDRESS --JOIN   ACCOUNT_PROPERTY_ADDRESS  ACCOUNT_PROPERTY_ADDRESS ON ( ( ACCOUNT_PROPERTY_ADDRESS.SITUS_ADDRESS_EID = ACCOUNT_SITUS_ADDRESS.SITUS_ADDRESS_EID ) )
            WHERE 
              (
                ACCOUNT_PROPERTY_ADDRESS.PRIMARY_ADDRESS_FLAG = 1
              )
          ) INGRP2 ON (
            (
              INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO
            )
          )
      ) INGRP1 
      LEFT OUTER JOIN (
        SELECT 
          ACCOUNT_OWNER_ADDRESS.ACCOUNT_NO ACCOUNT_NO, 
          ACCOUNT_OWNER_ADDRESS.OWNER_NAME OWNER_NAME, 
          ACCOUNT_OWNER_ADDRESS.FEDERAL_ID_NO FEDERAL_ID_NO, 
          ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_1 ADDRESS_LINE_1, 
          ACCOUNT_OWNER_ADDRESS.ADDRESS_LINE_2 ADDRESS_LINE_2, 
          NULL ADDRESS_LINE_3, 
          ACCOUNT_OWNER_ADDRESS.CITY_NAME CITY_NAME, 
          ACCOUNT_OWNER_ADDRESS.STATE STATE, 
          ACCOUNT_OWNER_ADDRESS.ZIP_CODE ZIP_CODE, 
          ACCOUNT_OWNER_ADDRESS.COUNTRY COUNTRY 
        FROM 
          asr_datastore.account_owner_address_unmasked ACCOUNT_OWNER_ADDRESS 
        WHERE 
          (
            ACCOUNT_OWNER_ADDRESS.PRIMARY_OWNER_FLAG = 1
          )
      ) INGRP2 ON (
        (
          INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO
        )
      )
  ) INGRP1 
  LEFT OUTER JOIN (
    SELECT 
      AGGREGATOR.TOTAL_ACTUAL_VALUE TOTAL_ACTUAL_VALUE, 
      AGGREGATOR.TOTAL_ASSESSED_VALUE TOTAL_ASSESSED_VALUE, 
      AGGREGATOR.TOTAL_NET_ACRES TOTAL_NET_ACRES, 
      AGGREGATOR.ACCOUNT_NO ACCOUNT_NO 
    FROM 
      (
        SELECT 
          SUM(ACCOUNT_VALUATION.ACTUAL_VALUE) TOTAL_ACTUAL_VALUE, 
          SUM(
            ACCOUNT_VALUATION.ASSESSED_VALUE
          ) TOTAL_ASSESSED_VALUE, 
          SUM(ACCOUNT_VALUATION.NET_ACRES) TOTAL_NET_ACRES, 
          ACCOUNT_VALUATION.ACCOUNT_NO ACCOUNT_NO 
        FROM 
          asr_datastore.ACCOUNT_VALUATION ACCOUNT_VALUATION 
        GROUP BY 
          ACCOUNT_VALUATION.ACCOUNT_NO
      ) AGGREGATOR
  ) INGRP2 ON (
    (
      INGRP1.ACCOUNT_NO = INGRP2.ACCOUNT_NO
    )
  )
where INGRP1.ACCOUNT_STATUS = 'A'
GO
/****** Object:  View [asr_spatialest_query].[v_land_abstract]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE VIEW [asr_spatialest_query].[v_land_abstract]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access land abstract for loading data into
			   the asssessor_app database for Spatialist
*************************************************************************************/
AS
select la.account_no
, la.abstract_code
, la.land_abstract_detail_id
, la.land_type
, la.land_acres
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, rowhash
from asr_datastore.land_abstract la
inner join (select account_no from asr_datastore.account where appraisal_type = 'Real' and account_status = 'A') a
on la.account_no = a.account_no










GO
/****** Object:  View [asr_ods2_query].[v_improvement_occupancy]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO





CREATE VIEW [asr_ods2_query].[v_improvement_occupancy]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access improvement occupancy data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, improvement_no, occupancy_detail_id, occupancy_code, occupancy_code_description, 
occupancy_percent, abstract_code, abstract_code_description, abstract_value, 
create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM asr_datastore.improvement_occupancy;







GO
/****** Object:  View [asr_spatialest_query].[v_sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_spatialest_query].[v_sale]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      5/10/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access sale data for active accounts for 
			   loading data into the asssessor_app database for spatialest
**************************************************************************************
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
SELECT   recording_no,
         dbo.fn_CSVClean(grantor) AS grantor, 
		 dbo.fn_CSVClean(grantee) AS grantee, sale_date, 
         dbo.fn_CSVClean(deed_code_description) AS deed_code_description, 
		 sale_price, valid1_flag, improved_flag, create_datetime, create_user_id, update_datetime, 
         update_user_id, 
		 HASHBYTES('SHA2_256', ISNULL(RTRIM(recording_no), 'DBNULL_TEXT') 
		 + ISNULL(RTRIM(dbo.fn_CSVClean(grantor)), 'DBNULL_TEXT') 
         + ISNULL(RTRIM(dbo.fn_CSVClean(grantee)), 'DBNULL_TEXT') + ISNULL(RTRIM(sale_date), 'DBNULL_TEXT') 
         + ISNULL(RTRIM(dbo.fn_CSVClean(deed_code_description)), 'DBNULL_TEXT') + ISNULL(RTRIM(sale_price), 'DBNULL_TEXT') 
		 + ISNULL(RTRIM(valid1_flag),'DBNULL_TEXT') + ISNULL(RTRIM(improved_flag), 'DBNULL_TEXT')) AS rowhash
FROM     asr_datastore.sale
WHERE    (sale_price > 10) AND (sale_date > DATEADD(yyyy, - 10, GETDATE())) AND (non_sale_flag = 0)

GO
/****** Object:  View [asr_ods2_query].[v_land_abstract]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_ods2_query].[v_land_abstract]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access land_abstract data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, abstract_code, land_abstract_detail_id, land_type, land_acres, land_sf, 
land_unit_count, land_value_per, land_value, land_override_flag, land_override_total, 
land_actual_value, land_class, land_subclass, land_valued_by, land_value_measure, 
create_datetime, create_user_id, update_datetime, update_user_id, rowhash, abstract_code_description
FROM asr_datastore.land_abstract;








GO
/****** Object:  View [asr_spatialest_query].[v_sale_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_spatialest_query].[v_sale_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access sale account for loading data into
			   the asssessor_app database for Spatialist
*************************************************************************************/
AS
select sa.account_no
, sa.recording_no 
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, rowhash
from asr_datastore.sale_account sa
inner join (select recording_no from asr_datastore.sale where sale_price > 10 and sale_date > dateadd(yyyy, -10, getdate())) s
on sa.recording_no = s.recording_no






GO
/****** Object:  View [asr_spatialest_query].[v_sale_inventory]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












CREATE VIEW [asr_spatialest_query].[v_sale_inventory]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access sale inventory for loading data into
			   the asssessor_app database for Spatialist
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
select si.recording_no
, si.account_no
, si.property_type
, si.improvement_quality
, dbo.fn_CSVClean(si.built_as_description) AS built_as_description
, dbo.fn_CSVClean(si.improvement_abstract_code_description) AS improvement_abstract_code_description
, si.built_as_year_built
, si.built_as_total_unit_count
, si.bath_count
, si.bedroom_count
, si.total_finished_square_footage
, si.land_net_acre_count
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, HASHBYTES('SHA2_256', ISNULL(RTRIM(si.recording_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.account_no),'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.property_type), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.improvement_quality), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(si.built_as_description)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(si.improvement_abstract_code_description)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.built_as_year_built), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.built_as_total_unit_count),'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.bath_count), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(si.bedroom_count), 'DBNULL_TEXT')
  + ISNULL(RTRIM(si.total_finished_square_footage), 'DBNULL_TEXT')
  + ISNULL(RTRIM(si.land_net_acre_count), 'DBNULL_TEXT')
  ) AS rowhash
from asr_datastore.sale_inventory si
inner join (select recording_no from asr_datastore.sale where sale_price > 10 and sale_date > dateadd(yyyy, -10, getdate())) s
on si.recording_no = s.recording_no







GO
/****** Object:  View [asr_ods2_query].[v_sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [asr_ods2_query].[v_sale]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access sale data for loading data into
			   the asssessor_app database

Mod #:  2
Mod Date:      6/29/2016
Developer:     Richard Edwards
Comments:      Add Book and Page columns to sale view
*************************************************************************************/
AS
SELECT recording_no, grantor, grantee, sale_date, deed_code, deed_code_description, sale_price, 
valid1_flag, confirmed_flag, exclude_code_1, improved_flag, non_sale_flag, 
create_datetime, create_user_id, update_datetime, update_user_id, exclude_code_1_description, rowhash, book, page
FROM asr_datastore.sale;









GO
/****** Object:  View [asr_app_query].[v_value_from_tsgvacctabstvalue]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_value_from_tsgvacctabstvalue]
AS

SELECT v.account_no
        , a.account_type
        , v.tax_year
        , v.valuation_class_code
        , v.tax_district_no
        , v.raw_assessed_value
        , v.raw_tax_dollars
        , v.actual_value
        , v.mill_levy
        , v.net_acres
        , v.create_datetime
        , v.create_user_id
        , v.update_datetime
        , v.update_user_id
        , v.rowhash
        , ab.ABSTRACTDESCRIPTION AS valuation_class_code_description
		, v.assessment_rate
FROM   asr_datastore.value_from_tsgvacctabstvalue AS v LEFT OUTER JOIN 
       [assessor_staging].[asr_staging].[s_tlkpabstractcode] ab
        ON v.valuation_class_code = ab.ABSTRACTCODE INNER JOIN
       asr_datastore.account AS a ON v.account_no = a.account_no
WHERE  (a.account_status = 'A')
GO
/****** Object:  View [asr_spatialest_query].[v_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO











CREATE VIEW [asr_spatialest_query].[v_tax_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access tax authority for loading data into
			   the asssessor_app database for Spatialist
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
select tax_authority_no
, dbo.fn_CSVClean(tax_authority_name) AS tax_authority_name 
, dbo.fn_CSVClean(authority_type) AS authority_type
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, HASHBYTES('SHA2_256', ISNULL(RTRIM(tax_authority_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(tax_authority_name)),'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(authority_type)), 'DBNULL_TEXT') 
  ) AS rowhash
from asr_datastore.tax_authority





GO
/****** Object:  View [asr_ods2_query].[v_sale_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_ods2_query].[v_sale_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access sale_account data for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT recording_no, account_no, create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM asr_datastore.sale_account;








GO
/****** Object:  View [asr_spatialest_query].[v_tax_authority_fund]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO












CREATE VIEW [asr_spatialest_query].[v_tax_authority_fund]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access tax authority fund for loading data into
			   the asssessor_app database for Spatialist
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
select tax_authority_no
, tax_fund_code
, levy_type_id
, dbo.fn_CSVClean(tax_fund_description) AS tax_fund_description
, assessed_mill_levy 
, create_datetime
, create_user_id
, update_datetime
, update_user_id
, HASHBYTES('SHA2_256', ISNULL(RTRIM(tax_authority_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(tax_fund_code),'DBNULL_TEXT') 
  + ISNULL(RTRIM(levy_type_id), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(tax_fund_description)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(assessed_mill_levy), 'DBNULL_TEXT') 
  ) AS rowhash
from asr_datastore.tax_authority_fund






GO
/****** Object:  View [asr_ods2_query].[v_sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_ods2_query].[v_sub_filing]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/01/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access subfiling info for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT 
sub_filing_recording_no, subdivision_no, subdivision_name, filing_no, filing_description, 
dedicated_sub_filing_name, create_datetime, create_user_id,
update_datetime, update_user_id, rowhash
FROM [asr_datastore].[sub_filing]






GO
/****** Object:  View [asr_spatialest_query].[v_tax_district_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_spatialest_query].[v_tax_district_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/25/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access tax district authority for loading data into
			   the asssessor_app database for Spatialist
*************************************************************************************/
AS
select tax_district_no
, tax_authority_no
, create_datetime
, create_user_id
, update_datetime
, update_user_id
--, rowhash
from asr_datastore.tax_district_authority



GO
/****** Object:  View [asr_ods2_query].[v_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_ods2_query].[v_tax_authority]
AS
SELECT        tax_authority_no, tax_authority_name, authority_type, create_datetime, create_user_id, update_datetime, update_user_id, contact_person, contact_address_line_1, contact_address_line_2, contact_city_name, 
                         contact_state, contact_zip_code, active_flag, rowhash, contact_phone
FROM            asr_datastore.tax_authority
GO
/****** Object:  View [asr_adv_search_query].[v_flat_account_old_2]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_adv_search_query].[v_flat_account_old_2]
AS
SELECT        a.account_no, a.state_parcel_no, a.tax_district_no, a.sub_filing_recording_no, a.account_type, a.appraisal_type, a.account_status, a.account_status_description, a.legal_description, a.longitude_x, a.latitude_y, a.location, 
                         a.create_datetime, a.create_user_id, a.update_datetime, a.update_user_id, a.rowhash, a.elevation_z, a.bldg_permit_auth_id, a.qtr AS quarter, a.section, a.township, a.range, oa.owner_name AS primary_owner_name, 
                         oa.full_address AS primary_owner_address, av.actual_value_sum, av.assessed_value_sum, av.net_acres_sum, f.subdivision_name, f.subdivision_no, f.filing_no, f.filing_description, addr.primary_property_unit_no, addr.primary_property_address_number, 
                         addr.primary_property_address_number_suffix, addr.primary_property_pre_direction_code, addr.primary_property_street_name, addr.primary_property_street_type_code, addr.primary_property_post_direction_code, 
                         addr.primary_property_city, addr.primary_property_zip_code, apl.LOT AS lot, apl.TRACT AS tract, apl.BLOCK AS block, sa.recording_nos, t .tax_authority_nos, la.land_attributes
FROM            asr_datastore.account a LEFT OUTER JOIN
                             (/*include primary owners that are not marked as private*/ SELECT account_no, owner_name, STUFF(CONCAT(' ' + address_line_1, ' ' + address_line_2, ' ' + city_name, ' ' + state, ' ' + zip_code, ' ' + country), 1, 1, '') 
                                                         AS full_address
                               FROM            asr_datastore.account_owner_address
                               WHERE        primary_owner_flag = 1 AND private_flag = 0) AS oa ON oa.account_no = a.account_no LEFT OUTER JOIN
                             (SELECT        account_no, SUM(actual_value) AS actual_value_sum, SUM(assessed_value) AS assessed_value_sum, SUM(net_acres) AS net_acres_sum
                               FROM            asr_datastore.account_valuation
                               GROUP BY account_no) AS av ON av.account_no = a.account_no LEFT OUTER JOIN
                             (/*sub filing information*/ SELECT sub_filing_recording_no, subdivision_no, subdivision_name, filing_no, filing_description
                               FROM            asr_datastore.sub_filing) AS f ON f.sub_filing_recording_no = a.sub_filing_recording_no LEFT OUTER JOIN
                             (/* account primary property address*/ SELECT account_no, unit_no AS primary_property_unit_no, address_number AS primary_property_address_number, 
                                                         address_number_suffix AS primary_property_address_number_suffix, pre_direction_code AS primary_property_pre_direction_code, street_name AS primary_property_street_name, 
                                                         street_type_code AS primary_property_street_type_code, post_direction_code AS primary_property_post_direction_code, city_name AS primary_property_city, 
                                                         location_zip_code AS primary_property_zip_code
                               FROM            asr_datastore.account_property_address
                               WHERE        primary_address_flag = 1) AS addr ON addr.account_no = a.account_no LEFT OUTER JOIN
                             (/* account platted lot*/ SELECT ACCOUNT_NO, PARCEL_NO, LOT, TRACT, BLOCK
                               FROM            asr_datastore.account_platted_lot) AS apl ON apl.ACCOUNT_NO = a.account_no AND apl.PARCEL_NO = a.state_parcel_no LEFT OUTER JOIN
                             (SELECT        account_no, recording_nos = STUFF
                                                             ((SELECT        ',' + recording_no
                                                                 FROM            asr_datastore.sale_account b
                                                                 WHERE        b.account_no = a.account_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.sale_account a
                               GROUP BY account_no) AS sa ON sa.account_no = a.account_no LEFT OUTER JOIN
                             (SELECT        tax_district_no, tax_authority_nos = STUFF
                                                             ((SELECT        ',' + b.tax_authority_no
                                                                 FROM            asr_datastore.tax_district_authority b
                                                                 WHERE        b.tax_district_no = a.tax_district_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.tax_district_authority a
                               GROUP BY tax_district_no) AS t ON a.tax_district_no = t .tax_district_no LEFT OUTER JOIN
                             (SELECT        account_no, land_attributes = STUFF
                                                             ((SELECT        ',' + concat(b.attribute_type, ' - ', b.attribute_subtype)
                                                                 FROM            asr_datastore.land_attribute b
                                                                 WHERE        b.account_no = a.account_no FOR XML PATH('')), 1, 1, '')
                               FROM            asr_datastore.land_attribute a
                               GROUP BY account_no) AS la ON la.account_no = a.account_no
WHERE        a.account_status = 'A';
GO
/****** Object:  View [asr_spatialest_query].[v_value]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_spatialest_query].[v_value]
AS
SELECT        v.account_no, v.tax_year, v.value_group_code, v.tax_district_no, v.raw_assessed_value, v.raw_tax_dollars, 
              v.actual_value, v.mill_levy, v.create_datetime, v.create_user_id, v.update_datetime, 
              v.update_user_id, v.rowhash
FROM          asr_datastore.value AS v INNER JOIN
              (SELECT        account_no
               FROM            asr_datastore.account
               WHERE        (appraisal_type = 'Real') AND (account_status = 'A')) AS a ON v.account_no = a.account_no
WHERE        (v.tax_year <= YEAR(GETDATE()))

GO
/****** Object:  View [asr_ods2_query].[v_tax_authority_fund]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO







CREATE VIEW [asr_ods2_query].[v_tax_authority_fund]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access tax_authority_fund data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT tax_authority_no, tax_fund_code, levy_type_id, levy_type, assessed_mill_levy, 
tax_fund_description, create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM [asr_datastore].[tax_authority_fund];









GO
/****** Object:  View [asr_app_query].[v_realnov_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_app_query].[v_realnov_old]
AS
SELECT        rn.ACCOUNTNO, rn.TAXYEAR, rn.PARCELNO, rn.PROPADDRESS, rn.LEGALDESCRIPTION1, rn.LEGALDESCRIPTION2, rn.LEGALDESCRIPTION3, rn.NAME1, rn.NAME2, rn.PNAME1, rn.PNAME2, 
                         rn.OWNERADDRESS1, rn.OWNERADDRESS2, rn.OWNERCITY, rn.OWNERSTATE, rn.OWNERZIP, rn.PROPCLASS1, rn.PRIORVALUE1, rn.CURRENTVALUE1, rn.INCREASEDECREASE1, rn.PROPCLASS2, 
                         rn.PRIORVALUE2, rn.CURRENTVALUE2, rn.INCREASEDECREASE2, rn.PROPCLASS3, rn.PRIORVALUE3, rn.CURRENTVALUE3, rn.INCREASEDECREASE3, rn.PROPCLASS4, rn.PRIORVALUE4, rn.CURRENTVALUE4, 
                         rn.INCREASEDECREASE4, rn.PROPCLASS5, rn.PRIORVALUE5, rn.CURRENTVALUE5, rn.INCREASEDECREASE5, rn.PROPCLASS6, rn.PRIORVALUE6, rn.CURRENTVALUE6, rn.INCREASEDECREASE6, 
                         rn.TOTALPRIOR, rn.TOTALCURRENT, rn.TOTALINCREASEDECREASE, rn.VALUEYEAR, rn.PROPERTYTYPE, rn.PRIMARYBUILDING, rn.BUILDINGCOUNT, rn.SUBDIVISION, rn.NEIGHBORHOOD, rn.RESIDENTIALSF, 
                         rn.STYLE, rn.QUALITY, rn.YEARBUILT, rn.HEATTYPE, rn.BASEMENTSF, rn.FINISHEDBSMNTSF, rn.BASEMENTTYPE, rn.GARAGESF, rn.IMPSF, rn.COMMERCIALSF, rn.OUTBUILDINGSF, rn.LANDTYPE, rn.ACREAGE,
                          rn.LEA, rn.LANDATTRIBUTES, rn.APPRDATEYEAR, rn.REAPPRYEAR, rn.BEGPERYEAR, rn.ENDPERYEAR, rn.CBOEDEADLINE, rn.PRINTFLAG, rn.BULKNOVFLAG, rn.PRIVATEFLAG, rn.create_datetime, 
                         rn.create_user_id, rn.update_datetime, rn.update_user_id, rn.ASSESSOR
FROM            asr_datastore.realnov AS rn INNER JOIN
                         assessor_app.asr_app.account AS ac ON rn.ACCOUNTNO = ac.account_no
GO
/****** Object:  View [asr_ods2_query].[v_tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_ods2_query].[v_tax_district]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      1/28/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access tax districts for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT tax_district_no, tax_district_name, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district;



GO
/****** Object:  View [asr_ods2_query].[v_tax_district_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_ods2_query].[v_tax_district_authority]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      1/28/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access the tax_district_authority table for loading data into
			   the asssessor_app database
*************************************************************************************/
AS
SELECT tax_district_no, tax_authority_no, create_datetime, create_user_id, update_datetime, update_user_id
FROM asr_datastore.tax_district_authority;



GO
/****** Object:  View [asr_adv_search_query].[v_actual_value]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [asr_adv_search_query].[v_actual_value] as
SELECT 
   fa.[account_no]
  ,fa.[state_parcel_no]
  ,v.[tax_year]
  ,sum(v.[actual_value]) as actual_value
  ,sum(v.[raw_assessed_value]) as raw_assessed_value
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
  group by fa.account_no, state_parcel_no, tax_year
GO
/****** Object:  View [asr_adv_search_query].[v_taxable_value]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create view [asr_adv_search_query].[v_taxable_value] as
  SELECT 
   fa.[account_no]
  ,fa.[state_parcel_no]
  ,v.[tax_year]
  ,sum(v.[actual_value])as taxable_actual_value
  ,sum(v.[raw_assessed_value]) as taxable_raw_assessed_value
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
  and v.valuation_class_code NOT LIKE '9%'
  group by fa.account_no, state_parcel_no, tax_year
GO
/****** Object:  View [asr_adv_search_query].[v_valuation_history_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE view [asr_adv_search_query].[v_valuation_history_export] as
SELECT 
   av.[account_no]
  ,av.[state_parcel_no]
  ,av.[tax_year]
  ,av.[actual_value]
  ,av.[raw_assessed_value]
  ,ISNULL(tv.[taxable_actual_value], 0) as taxable_value
  ,ISNULL(tv.[taxable_raw_assessed_value], 0) as taxable_assessed_value
   FROM [asr_adv_search_query].[v_actual_value] av
  LEFT OUTER JOIN [asr_adv_search_query].[v_taxable_value] tv
  ON av.account_no = tv.account_no
  AND av.tax_year = tv.tax_year
  WHERE CAST(av.tax_year as int) >= (DATEPART(Year,getdate())-9)
GO
/****** Object:  View [asr_adv_search_query].[v_summed_values_by_class_code]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_adv_search_query].[v_summed_values_by_class_code]
WITH SCHEMABINDING
AS
SELECT        account_no, valuation_class_code, valuation_class_code_description, SUM(actual_value) AS actual_value, SUM(raw_assessed_value) AS assessed_value, SUM(net_acres) AS net_acres
FROM            asr_datastore.value_from_tsgvacctabstvalue
WHERE        (tax_year =
                             (SELECT        MAX(tax_year) AS latest_tax_year
                               FROM            asr_datastore.value_from_tsgvacctabstvalue AS value_from_tsgvacctabstvalue_1))
GROUP BY account_no, valuation_class_code,valuation_class_code_description
GO
/****** Object:  View [asr_app_query].[v_improvement_fact_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_improvement_fact_old]

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      6/6/2017
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access improvement_fact records for consumption by assessor app

*************************************************************************************/
AS

SELECT distinct
  IMPROVEMENT.ACCOUNT_NO ACCOUNT_NO,
  improvement.IMPROVEMENT_NO,
  --IMPROVEMENT.BUILDING_ID BUILDING_ID,
  --INGRP2.TOTAL_PORCH_SF TOTAL_PORCH_SF,
  IMPROVEMENT.ACCOUNT_NO+CAST(improvement.IMPROVEMENT_NO AS VARCHAR) IMPROVEMENT_DETAIL_ID,
  --INGRP2.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID_1,
  IMPROVEMENT.PROPERTY_TYPE PROPERTY_TYPE,
  IMPROVEMENT.CONDITION_TYPE CONDITION_TYPE,
  IMPROVEMENT.IMPROVEMENT_QUALITY IMPROVEMENT_QUALITY,
  IMPROVEMENT.IMPROVEMENT_SF IMPROVEMENT_SF,
  IMPROVEMENT.COMPLETED_PERCENT COMPLETED_PERCENT,
  IMPROVEMENT.IMPROVEMENT_UNIT_TYPE IMPROVEMENT_UNIT_TYPE,
  TOTAL_PORCH_SF,
  WALKOUT_BASEMENT_FLAG,
  TOTAL_GARAGE_SF,
  TOTAL_FINISHED_BASEMENT_SF,
  TOTAL_UNFINISHED_BASEMENT_SF,
  NO_OF_FIREPLACE
FROM
    asr_datastore.IMPROVEMENT  IMPROVEMENT
 LEFT OUTER JOIN 
          (SELECT imp_detail.account_no, imp_detail.improvement_no,
			  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_PORCH_SF,
			  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID
			FROM
			  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
			  WHERE 
			  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Porch' ) 
			GROUP BY
			imp_detail.account_no, imp_detail.improvement_no, IMP_DETAIL.IMPROVEMENT_DETAIL_ID) P ON P.account_no = IMPROVEMENT.account_no AND P.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no
 LEFT OUTER JOIN
         (
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID1,
		  CASE WHEN COUNT(DISTINCT IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION) = 0 THEN 'N'ELSE 'Y' END  WALKOUT_BASEMENT_FLAG
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' ) AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION ='Walkout' )
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) WO ON WO.account_no = IMPROVEMENT.account_no AND WO.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no
 LEFT OUTER JOIN
		(
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_GARAGE_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID2
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Garage' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID)	GSF	ON GSF.account_no = IMPROVEMENT.account_no AND GSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
  LEFT OUTER JOIN
		(
		SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_FINISHED_BASEMENT_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID3
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION ='Finished' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID)	BFSF ON BFSF.account_no = IMPROVEMENT.account_no AND BFSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
 LEFT OUTER JOIN
		 (
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_UNFINISHED_BASEMENT_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID4
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION  <> 'Finished' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Walkout' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Garden Level' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Minimal Finish' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Fair Finish' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) BUSF ON BUSF.account_no = IMPROVEMENT.account_no AND BUSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
  LEFT OUTER JOIN
			(
			SELECT imp_detail.account_no, imp_detail.improvement_no,
			  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID5,
			  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) NO_OF_FIREPLACE
			FROM
			  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
			  WHERE 
			  ( IMP_DETAIL.ADDON_CODE in ('95','285','290') ) 
			GROUP BY
			imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) NOFP ON NOFP.account_no = IMPROVEMENT.account_no AND NOFP.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 


GO
/****** Object:  Table [asr_adv_search_query].[account_number]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_adv_search_query].[account_number](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[account_no] [varchar](30) NOT NULL,
 CONSTRAINT [PK_account_number] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[v_flat_account_account_no]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[v_flat_account_account_no]
AS
SELECT        asr_adv_search_query.v_flat_account.account_no 
FROM            asr_adv_search_query.v_flat_account INNER JOIN
                         asr_adv_search_query.account_number ON asr_adv_search_query.v_flat_account.account_no = asr_adv_search_query.account_number.account_no
WHERE        (asr_adv_search_query.account_number.id BETWEEN 1 AND 25000)

GO
/****** Object:  View [dbo].[V_TEST_VALUE_BY_CLASS_CODE]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[V_TEST_VALUE_BY_CLASS_CODE]
AS
SELECT        TOP (10) asr_adv_search_query.v_summed_values_by_class_code.account_no AS asr_adv_search_query_v_summed_values_by_class_code_account_no, 
                         asr_adv_search_query.v_summed_values_by_class_code.valuation_class_code AS asr_adv_search_query_v_summed_values_by_class_code_valuation_class_code, 
                         asr_adv_search_query.v_summed_values_by_class_code.valuation_class_code_description AS asr_adv_search_query_v_summed_values_by_class_code_valuation_class_code_description, 
                         asr_adv_search_query.v_summed_values_by_class_code.actual_value AS asr_adv_search_query_v_summed_values_by_class_code_actual_value, 
                         asr_adv_search_query.v_summed_values_by_class_code.assessed_value AS asr_adv_search_query_v_summed_values_by_class_code_assessed_value, 
                         asr_adv_search_query.v_summed_values_by_class_code.net_acres AS asr_adv_search_query_v_summed_values_by_class_code_net_acres, 
                         anon_1.asr_adv_search_query_v_flat_account_account_no AS anon_1_asr_adv_search_query_v_flat_account_account_no
FROM            (SELECT        asr_adv_search_query.v_flat_account.account_no AS asr_adv_search_query_v_flat_account_account_no
                          FROM            asr_adv_search_query.v_flat_account LEFT OUTER JOIN
                                                    asr_adv_search_query.account_number ON asr_adv_search_query.v_flat_account.account_no = asr_adv_search_query.account_number.account_no
                          WHERE        (asr_adv_search_query.account_number.id BETWEEN 1 AND 25000)) AS anon_1 LEFT OUTER JOIN
                         asr_adv_search_query.v_summed_values_by_class_code ON anon_1.asr_adv_search_query_v_flat_account_account_no = asr_adv_search_query.v_summed_values_by_class_code.account_no
ORDER BY anon_1_asr_adv_search_query_v_flat_account_account_no
GO
/****** Object:  View [asr_spatialest_query].[v_account_neighborhood]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_spatialest_query].[v_account_neighborhood]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      6/22/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access account_neighborhood for active accounts for 
			   loading data into the asssessor_app database for spatialest
*************************************************************************************/
AS
SELECT n.account_no, n.neighborhood_code, n.property_type, n.neighborhood_extension
	 , n.create_datetime, n.create_user_id
	 , n.update_datetime, n.update_user_id, rowhash
FROM asr_datastore.account_neighborhood n
INNER JOIN asr_datastore.account a
	  ON n.account_no = a.account_no
	  AND a.account_status = 'A'
	  AND a.account_no not like 'C%';








GO
/****** Object:  View [asr_adv_search_query].[v_parcel_values_export]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE view [asr_adv_search_query].[v_parcel_values_export] as
SELECT distinct
       fa.[account_no]
      ,fa.[state_parcel_no]
	  ,v.[valuation_class_code]
	  ,vcc.[code_descr]
      ,vcc.[valuation_type_code]
      ,fa.[actual_value_sum]
      ,fa.[assessed_value_sum]
      ,fa.[net_acres_sum]
      ,fa.[primary_owner_name]
      ,fa.[primary_owner_address]
      ,fa.[primary_property_unit_no]
      ,fa.[primary_property_address_number]
      ,fa.[primary_property_address_number_suffix]
      ,fa.[primary_property_pre_direction_code]
      ,fa.[primary_property_street_name]
      ,fa.[primary_property_street_type_code]
      ,fa.[primary_property_post_direction_code]
      ,fa.[primary_property_city]
      ,fa.[primary_property_zip_code]
	  ,fa.primary_property_address_number + ' ' + ISNULL(fa.primary_property_address_number_suffix, '') + ' ' + ISNULL(fa.primary_property_pre_direction_code, '')  + ' ' +   fa.primary_property_street_name  + ' ' +  ISNULL(fa.primary_property_street_type_code, '')  + ' ' + ISNULL(fa.primary_property_post_direction_code, '')  + ' ' +  ISNULL(fa.primary_property_unit_no, '') as situs_street_address
      ,vfa.[owner_address_line_1] + ' ' + ISNULL(vfa.[owner_address_line_2], '')  as owner_street_address
      ,vfa.[owner_city_name]
      ,vfa.[owner_state]
      ,vfa.[owner_zip_code]  
  FROM [assessor_datastore].[asr_adv_search_query].[flat_account] fa
  JOIN [assessor_datastore].[asr_datastore].[value_from_tsgvacctabstvalue] v
  ON fa.account_no = v.account_no
  JOIN [dbo].[valuation_class_code] vcc
  ON v.valuation_class_code = vcc.valuation_class_code
   JOIN [asr_adv_search_query].[v_flat_account] vfa
  ON fa.account_no = vfa.account_no

GO
/****** Object:  View [asr_spatialest_query].[v_account_owner_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_spatialest_query].[v_account_owner_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      6/22/2016
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access account_owner_address for active accounts for 
			   loading data into the asssessor_app database for spatialest
**************************************************************************************
Mod #:  2
Mod Date:      8/23/2016
Developer:     Richard Edwards
Comments:      Add CSVClean function to remove problem characters for Spatialest CSV format
*************************************************************************************/
AS
SELECT oa.account_no, oa.person_code, oa.primary_owner_flag
, dbo.fn_CSVClean(oa.owner_name) AS owner_name
, oa.owner_name_1 
, oa.owner_name_2 
, oa.ownership_percent
, oa.federal_id_no
, dbo.fn_CSVClean(oa.address_line_1) AS address_line_1
, dbo.fn_CSVClean(oa.address_line_2) AS address_line_2
, dbo.fn_CSVClean(oa.city_name) AS city_name
, oa.state
, oa.zip_code
, dbo.fn_CSVClean(oa.country) AS country
, oa.create_datetime, oa.create_user_id, oa.update_datetime, oa.update_user_id
, HASHBYTES('SHA2_256', ISNULL(RTRIM(oa.account_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(oa.person_code),'DBNULL_TEXT') 
  + ISNULL(RTRIM(oa.primary_owner_flag), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(oa.owner_name)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(oa.ownership_percent), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(oa.federal_id_no), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(oa.address_line_1)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(oa.address_line_2)),'DBNULL_TEXT') 
  + ISNULL(RTRIM(dbo.fn_CSVClean(oa.city_name)), 'DBNULL_TEXT') 
  + ISNULL(RTRIM(oa.state), 'DBNULL_TEXT')
  + ISNULL(RTRIM(oa.zip_code), 'DBNULL_TEXT')
  + ISNULL(RTRIM(dbo.fn_CSVClean(oa.country)), 'DBNULL_TEXT')
  ) AS rowhash
, oa.private_flag
FROM asr_datastore.account_owner_address oa
INNER JOIN asr_datastore.account a
	  ON oa.account_no = a.account_no
	  AND a.account_status = 'A'
	  AND a.account_no not like '%C%';





GO
/****** Object:  View [asr_app_query].[v_account_owner_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO










CREATE VIEW [asr_app_query].[v_account_owner_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access account_owner_address for active accounts for 
			   loading data into the asssessor_app database
Mod #:  2
Mod Date:      6/22/2016
Developer:     Richard Edwards
Comments:      Add Owner_Name_1 and Ownwr_Name_2 columns
*************************************************************************************/
AS
SELECT oa.account_no, oa.person_code, oa.primary_owner_flag
, oa.owner_name
, oa.owner_name_1 
, oa.owner_name_2
, oa.ownership_percent
, oa.federal_id_no
, oa.address_line_1
, oa.address_line_2
, oa.city_name
, oa.state
, oa.zip_code
, oa.country
, oa.create_datetime
, oa.create_user_id
, oa.update_datetime
, oa.update_user_id
, oa.rowhash
, oa.private_flag
FROM asr_datastore.account_owner_address oa
INNER JOIN asr_datastore.account a
	  ON oa.account_no = a.account_no
	  AND a.account_status = 'A';











GO
/****** Object:  View [asr_ods2_query].[v_account_owner_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [asr_ods2_query].[v_account_owner_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/1/2016
Developer:     Christine Lin
Comments:      Initial creation
               Provide a view to access account_owner_address for active accounts for 
			   loading data into the asssessor_app database
Mod #:  2
Mod Date:      3/31/2016
Developer:     Christine Lin
Comments:      removed the CASE WHEN oa.private_flag = 1 statement

Mod #:  3
Mod Date:      6/22/2016
Developer:     Richard Edwards
Comments:      Add Owner_Name_1 and Owner_Name_2 columns
*************************************************************************************/
AS
SELECT oa.account_no, oa.person_code, oa.primary_owner_flag
, oa.owner_name 
, oa.owner_name_1
, oa.owner_name_2
, oa.ownership_percent
, oa.federal_id_no, oa.address_line_1, oa.address_line_2, oa.city_name, oa.state, oa.zip_code, oa.country
, oa.create_datetime, oa.create_user_id, oa.update_datetime, oa.update_user_id, oa.rowhash
, oa.private_flag
FROM asr_datastore.account_owner_address oa
INNER JOIN asr_datastore.account a
	  ON oa.account_no = a.account_no
	  AND a.account_status = 'A';









GO
/****** Object:  View [asr_app_query].[v_real_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_real_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access real account data for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT   ra.account_no, ra.no_of_buildings, ra.vacant_flag, ra.improvement_only_flag, ra.tif_flag, 
         ra.zoning_code, ra.zoning_code_description, ra.platted_flag, ra.default_lea, 
		 ra.default_lea_description, 
         ra.total_improvement_interest_percent, ra.total_land_interest_percent, ra.create_datetime, 
		 ra.create_user_id, ra.update_datetime, ra.update_user_id, ra.rowhash
FROM     asr_datastore.real_account AS ra INNER JOIN
         asr_datastore.account AS a ON ra.account_no = a.account_no AND a.account_status = 'A'



GO
/****** Object:  View [asr_ods2_query].[v_real_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_ods2_query].[v_real_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/11/2016
Developer:     David Guillen
Comments:      Initial creation
               Provide a view to access real_account data 
			   for loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT account_no, no_of_buildings, vacant_flag, improvement_only_flag, tif_flag, zoning_code, zoning_code_description, 
platted_flag, default_lea, default_lea_description, total_improvement_interest_percent, total_land_interest_percent, 
create_datetime, create_user_id, update_datetime, update_user_id, rowhash
FROM [asr_datastore].[real_account];








GO
/****** Object:  View [asr_app_query].[v_account_property_address]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [asr_app_query].[v_account_property_address]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access account_property_address for active accounts for 
			   loading data into the asssessor_app database

Mod #:  2
Mod Date:      6/24/2016
Developer:     Richard Edwards
Comments:      Create concatenated property address column

*************************************************************************************/
AS
SELECT pa.account_no, pa.order_no, pa.primary_address_flag, pa.building_no, pa.unit_no, pa.unit_designator, 
pa.address_number, pa.address_number_suffix, pa.pre_direction_code, pa.street_name, pa.street_type_code, 
pa.post_direction_code, pa.city_name, pa.location_zip_code,
LTRIM(RTRIM(ISNULL(pa.address_number, ''))) + 
CASE WHEN pa.address_number is null THEN '' ELSE ' ' END + 
LTRIM(RTRIM(ISNULL(pa.address_number_suffix, ''))) +
CASE WHEN pa.address_number_suffix is null THEN '' ELSE ' ' END +  
LTRIM(RTRIM(ISNULL(pa.pre_direction_code, ''))) + 
CASE WHEN pa.pre_direction_code is null THEN '' ELSE ' ' END + 
LTRIM(RTRIM(ISNULL(pa.street_name, ''))) + 
CASE WHEN pa.street_name is null THEN '' ELSE ' ' END + 
LTRIM(RTRIM(ISNULL(pa.street_type_code, ''))) + 
CASE WHEN pa.street_type_code is null THEN '' ELSE ' ' END + 
LTRIM(RTRIM(ISNULL(pa.post_direction_code, ''))) + 
CASE WHEN pa.post_direction_code is null THEN '' ELSE ' ' END + 
LTRIM(RTRIM(ISNULL(pa.unit_designator, ''))) + 
CASE WHEN pa.unit_designator is null THEN '' ELSE ' ' END +
CASE WHEN pa.unit_designator is null and pa.unit_no is not null THEN ' #' ELSE '' END +  
LTRIM(RTRIM(ISNULL(pa.unit_no, ''))) 
AS concatenated_property_address,
pa.create_datetime, pa.create_user_id, pa.update_datetime, pa.update_user_id, pa.rowhash
FROM asr_datastore.account_property_address pa
INNER JOIN asr_datastore.account a
	  ON pa.account_no = a.account_no
	  AND a.account_status = 'A';











GO
/****** Object:  View [asr_adv_search_query].[v_building_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_adv_search_query].[v_building_old]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/19/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the building inforamtion 
			   for active accounts 
			   one row per building by account no

*************************************************************************************/
AS
SELECT 
 I.account_no
,I.improvement_no AS building_number
,I.completed_percent 
,I.improvement_quality AS build_quality
,I.improvement_perimeter AS building_perimeter
,I.property_type
,I.condition_type
,I.approach_type
,I.primary_flag
,I.improvement_unit_type AS building_unit_type
,I.improvement_sf AS above_grade_square_feet
,(I.improvement_sf + ISNULL(bd.basement_total_square_feet,0)) AS square_feet_with_basement
,bd.basement_total_square_feet AS basement_total_square_feet
,bd.basement_finished_square_feet
,(I.improvement_sf + ISNULL(bd.basement_finished_square_feet,0)) AS total_finished_square_feet
,bd.basement_garden_level
,bd.basement_walkout
,ifp.fireplaces
,ibf.features
FROM asr_datastore.improvement AS I
INNER JOIN asr_datastore.account AS A 
        ON A.account_no = I.account_no AND A.account_status = 'A'
LEFT OUTER JOIN ( --basement details
                  SELECT account_no, building_id, basement_total_square_feet, basement_finished_square_feet, basement_garden_level, basement_walkout
				  FROM asr_adv_search_query.v_basement
                ) bd ON bd.account_no = I.account_no
				      AND bd.building_id = I.improvement_no
LEFT OUTER JOIN (-- comma separated fireplaces details
				SELECT
					a.account_no,
					a.building_id,
					fireplaces =
								  STUFF((SELECT ',' + concat(b.fireplace_type ,
								                            ' : ', 
															  CAST(b.sum_detail_unit_count AS VARCHAR(6))
															)
										 FROM asr_adv_search_query.v_fireplace b
										 WHERE b.account_no = a.account_no
										   AND b.building_id = a.building_id
										   ORDER BY b.fireplace_type
										 FOR XML PATH ('')), 1, 1, '')
				FROM asr_adv_search_query.v_fireplace a
				GROUP BY a.account_no, a.building_id
                ) as ifp
ON ifp.account_no = i.account_no
AND ifp.building_id = i.improvement_no
LEFT OUTER JOIN (-- comma separated building features
				SELECT
					a.account_no,
					a.building_id,
					features =
								  STUFF((SELECT ',' + b.feature_type 
										 FROM asr_adv_search_query.v_building_feature b
										 WHERE b.account_no = a.account_no
										   AND b.building_id = a.building_id
										   ORDER BY b.feature_type
										 FOR XML PATH ('')), 1, 1, '')
				FROM asr_adv_search_query.v_building_feature a
				GROUP BY a.account_no, a.building_id
                ) as ibf
ON ibf.account_no = i.account_no
AND ibf.building_id = i.improvement_no

GO
/****** Object:  View [asr_app_query].[v_account_platted_lot]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_app_query].[v_account_platted_lot]
AS
SELECT [ACCOUNT_NO]
      ,[PARCEL_NO]
      ,[LOT]
      ,[TRACT]
      ,[BLOCK]
      ,[CREATE_DTM]
      ,[CREATE_USER_ID]
      ,[UPDATE_DTM]
      ,[UPDATE_USER_ID]
  FROM [assessor_datastore].[asr_datastore].[account_platted_lot]


/*

CREATE VIEW [asr_app_query].[v_account_platted_lot]
AS
SELECT        STATE_PARCEL_NO, LOT, BLOCK, TRACT
FROM            (SELECT DISTINCT 
                                                    ACCOUNT.state_parcel_no AS STATE_PARCEL_NO, ISNULL(Q_TBLSUBACCOUNT.LOT, ' ') AS LOT, ISNULL(Q_TBLSUBACCOUNT.TRACT, ' ') AS TRACT, ISNULL(Q_TBLSUBACCOUNT.BLOCK, ' ') 
                                                    AS BLOCK
                          FROM            asr_datastore.account AS ACCOUNT INNER JOIN
                                                    assessor_staging.dqm.q_tblsubaccount AS Q_TBLSUBACCOUNT ON ACCOUNT.account_no = Q_TBLSUBACCOUNT.ACCOUNTNO
                          WHERE        (ACCOUNT.state_parcel_no IS NOT NULL)) AS DEDUP_PLATTED_LOT


GO

*/
GO
/****** Object:  View [asr_app_query].[v_improvement_fact]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [asr_app_query].[v_improvement_fact]

/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      6/6/2017
Developer:     Tony Golden
Comments:      Initial creation
               Provide a view to access improvement_fact records for consumption by assessor app

*************************************************************************************/
AS

SELECT distinct
  IMPROVEMENT.ACCOUNT_NO ACCOUNT_NO,
  improvement.IMPROVEMENT_NO,
  --IMPROVEMENT.BUILDING_ID BUILDING_ID,
  --INGRP2.TOTAL_PORCH_SF TOTAL_PORCH_SF,
  IMPROVEMENT.ACCOUNT_NO+CAST(improvement.IMPROVEMENT_NO AS VARCHAR) IMPROVEMENT_DETAIL_ID,
  --INGRP2.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID_1,
  IMPROVEMENT.PROPERTY_TYPE PROPERTY_TYPE,
  IMPROVEMENT.CONDITION_TYPE CONDITION_TYPE,
  IMPROVEMENT.IMPROVEMENT_QUALITY IMPROVEMENT_QUALITY,
  IMPROVEMENT.IMPROVEMENT_SF IMPROVEMENT_SF,
  IMPROVEMENT.COMPLETED_PERCENT COMPLETED_PERCENT,
  IMPROVEMENT.IMPROVEMENT_UNIT_TYPE IMPROVEMENT_UNIT_TYPE,
  TOTAL_PORCH_SF,
  WALKOUT_BASEMENT_FLAG,
  TOTAL_GARAGE_SF,
  TOTAL_FINISHED_BASEMENT_SF,
  TOTAL_UNFINISHED_BASEMENT_SF,
  NO_OF_FIREPLACE
FROM
    asr_datastore.IMPROVEMENT  IMPROVEMENT
 LEFT OUTER JOIN 
          (SELECT imp_detail.account_no, imp_detail.improvement_no,
			  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_PORCH_SF,
			  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID
			FROM
			  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
			  WHERE 
			  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Porch' ) 
			GROUP BY
			imp_detail.account_no, imp_detail.improvement_no, IMP_DETAIL.IMPROVEMENT_DETAIL_ID) P ON P.account_no = IMPROVEMENT.account_no AND P.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no
 LEFT OUTER JOIN
         (
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID1,
		  CASE WHEN COUNT(DISTINCT IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION) = 0 THEN 'N'ELSE 'Y' END  WALKOUT_BASEMENT_FLAG
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' ) AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION ='Walkout' )
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) WO ON WO.account_no = IMPROVEMENT.account_no AND WO.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no
 LEFT OUTER JOIN
		(
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_GARAGE_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID2
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Garage' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID)	GSF	ON GSF.account_no = IMPROVEMENT.account_no AND GSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
  LEFT OUTER JOIN
		(
		SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_FINISHED_BASEMENT_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID3
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION ='Finished' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID)	BFSF ON BFSF.account_no = IMPROVEMENT.account_no AND BFSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
 LEFT OUTER JOIN
		 (
		 SELECT imp_detail.account_no, imp_detail.improvement_no,
		  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) TOTAL_UNFINISHED_BASEMENT_SF,
		  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID4
		FROM
		  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
		  WHERE 
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE ='Basement' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION  <> 'Finished' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Walkout' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Garden Level' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Minimal Finish' )  AND
		  ( IMP_DETAIL.IMPROVEMENT_DETAIL_TYPE_DESCRIPTION <> 'Fair Finish' ) 
		GROUP BY
		imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) BUSF ON BUSF.account_no = IMPROVEMENT.account_no AND BUSF.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 
  LEFT OUTER JOIN
			(
			SELECT imp_detail.account_no, imp_detail.improvement_no,
			  IMP_DETAIL.IMPROVEMENT_DETAIL_ID IMPROVEMENT_DETAIL_ID5,
			  SUM(IMP_DETAIL.DETAIL_UNIT_COUNT) NO_OF_FIREPLACE
			FROM
			  asr_datastore.IMPROVEMENT_DETAIL  IMP_DETAIL
			  WHERE 
			  ( IMP_DETAIL.ADDON_CODE in ('95','285','290') ) 
			GROUP BY
			imp_detail.account_no, imp_detail.improvement_no,IMP_DETAIL.IMPROVEMENT_DETAIL_ID) NOFP ON NOFP.account_no = IMPROVEMENT.account_no AND NOFP.IMPROVEMENT_NO =  IMPROVEMENT.improvement_no 


GO
/****** Object:  Table [asr_datastore].[ppnov]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[ppnov](
	[ACCOUNTNO] [varchar](30) NULL,
	[TAXYEAR] [numeric](4, 0) NULL,
	[PARCELNO] [varchar](30) NULL,
	[PROPADDRESS] [varchar](81) NULL,
	[LEGALDESCRIPTION1] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION2] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION3] [nvarchar](1024) NULL,
	[NAME1] [varchar](40) NULL,
	[NAME2] [varchar](40) NULL,
	[PNAME1] [varchar](40) NULL,
	[PNAME2] [varchar](40) NULL,
	[OWNERADDRESS1] [varchar](40) NULL,
	[OWNERADDRESS2] [varchar](40) NULL,
	[OWNERCITY] [varchar](50) NULL,
	[OWNERSTATE] [varchar](2) NULL,
	[OWNERZIP] [varchar](5) NULL,
	[PROPCLASS1] [varchar](50) NULL,
	[PRIORVALUE1] [varchar](8000) NULL,
	[CURRENTVALUE1] [varchar](8000) NULL,
	[INCREASEDECREASE1] [varchar](8000) NULL,
	[PROPCLASS2] [varchar](50) NULL,
	[PRIORVALUE2] [varchar](8000) NULL,
	[CURRENTVALUE2] [varchar](8000) NULL,
	[INCREASEDECREASE2] [varchar](8000) NULL,
	[PROPCLASS3] [varchar](50) NULL,
	[PRIORVALUE3] [varchar](8000) NULL,
	[CURRENTVALUE3] [varchar](8000) NULL,
	[INCREASEDECREASE3] [varchar](8000) NULL,
	[PROPCLASS4] [varchar](50) NULL,
	[PRIORVALUE4] [varchar](8000) NULL,
	[CURRENTVALUE4] [varchar](8000) NULL,
	[INCREASEDECREASE4] [varchar](8000) NULL,
	[PROPCLASS5] [varchar](50) NULL,
	[PRIORVALUE5] [varchar](50) NULL,
	[CURRENTVALUE5] [varchar](50) NULL,
	[INCREASEDECREASE5] [varchar](50) NULL,
	[PROPCLASS6] [varchar](50) NULL,
	[PRIORVALUE6] [varchar](50) NULL,
	[CURRENTVALUE6] [varchar](50) NULL,
	[INCREASEDECREASE6] [varchar](50) NULL,
	[TOTALPRIOR] [varchar](8000) NULL,
	[TOTALCURRENT] [varchar](8000) NULL,
	[TOTALINCREASEDECREASE] [varchar](8000) NULL,
	[VALUEYEAR] [int] NULL,
	[PROPERTYTYPE] [varchar](15) NULL,
	[PRIMARYBUILDING] [varchar](10) NULL,
	[BUILDINGCOUNT] [varchar](3) NULL,
	[SUBDIVISION] [varchar](18) NULL,
	[NEIGHBORHOOD] [varchar](10) NULL,
	[RESIDENTIALSF] [numeric](10, 0) NULL,
	[STYLE] [varchar](18) NULL,
	[QUALITY] [varchar](15) NULL,
	[YEARBUILT] [varchar](10) NULL,
	[HEATTYPE] [varchar](18) NULL,
	[BASEMENTSF] [numeric](10, 0) NULL,
	[FINISHEDBSMNTSF] [numeric](10, 0) NULL,
	[BASEMENTTYPE] [varchar](10) NULL,
	[GARAGESF] [numeric](10, 0) NULL,
	[IMPSF] [numeric](10, 0) NULL,
	[COMMERCIALSF] [numeric](10, 0) NULL,
	[OUTBUILDINGSF] [numeric](10, 0) NULL,
	[LANDTYPE] [varchar](15) NULL,
	[ACREAGE] [varchar](10) NULL,
	[LEA] [varchar](30) NULL,
	[LANDATTRIBUTES] [varchar](150) NULL,
	[APPRDATEYEAR] [varchar](10) NULL,
	[REAPPRYEAR] [varchar](10) NULL,
	[BEGPERYEAR] [varchar](10) NULL,
	[ENDPERYEAR] [varchar](10) NULL,
	[CBOEDEADLINE] [varchar](10) NULL,
	[PRINTFLAG] [varchar](1) NULL,
	[BULKNOVFLAG] [varchar](1) NULL,
	[PRIVATEFLAG] [varchar](1) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[ASSESSOR] [varchar](50) NULL,
	[SREXEMPTIONDEADLINE] [varchar](15) NULL,
	[VETEXEMPTIONDEADLINE] [varchar](15) NULL,
	[NODMONTH] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_ppnov]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_ppnov]
AS
SELECT        rn.ACCOUNTNO, rn.TAXYEAR, rn.PARCELNO, rn.PROPADDRESS, rn.LEGALDESCRIPTION1, rn.LEGALDESCRIPTION2, rn.LEGALDESCRIPTION3, rn.NAME1, rn.NAME2, rn.PNAME1, rn.PNAME2, 
                         rn.OWNERADDRESS1, rn.OWNERADDRESS2, rn.OWNERCITY, rn.OWNERSTATE, rn.OWNERZIP, rn.PROPCLASS1, rn.PRIORVALUE1, rn.CURRENTVALUE1, rn.INCREASEDECREASE1, rn.PROPCLASS2, 
                         rn.PRIORVALUE2, rn.CURRENTVALUE2, rn.INCREASEDECREASE2, rn.PROPCLASS3, rn.PRIORVALUE3, rn.CURRENTVALUE3, rn.INCREASEDECREASE3, rn.PROPCLASS4, rn.PRIORVALUE4, rn.CURRENTVALUE4, 
                         rn.INCREASEDECREASE4, rn.PROPCLASS5, rn.PRIORVALUE5, rn.CURRENTVALUE5, rn.INCREASEDECREASE5, rn.PROPCLASS6, rn.PRIORVALUE6, rn.CURRENTVALUE6, rn.INCREASEDECREASE6, 
                         rn.TOTALPRIOR, rn.TOTALCURRENT, rn.TOTALINCREASEDECREASE, rn.VALUEYEAR, rn.PROPERTYTYPE, rn.PRIMARYBUILDING, rn.BUILDINGCOUNT, rn.SUBDIVISION, rn.NEIGHBORHOOD, rn.RESIDENTIALSF, 
                         rn.STYLE, rn.QUALITY, rn.YEARBUILT, rn.HEATTYPE, rn.BASEMENTSF, rn.FINISHEDBSMNTSF, rn.BASEMENTTYPE, rn.GARAGESF, rn.IMPSF, rn.COMMERCIALSF, rn.OUTBUILDINGSF, rn.LANDTYPE, rn.ACREAGE,
                          rn.LEA, rn.LANDATTRIBUTES, rn.APPRDATEYEAR, rn.REAPPRYEAR, rn.BEGPERYEAR, rn.ENDPERYEAR, rn.CBOEDEADLINE, rn.PRINTFLAG, rn.BULKNOVFLAG, rn.PRIVATEFLAG, rn.create_datetime, 
                         rn.create_user_id, rn.update_datetime, rn.update_user_id, rn.ASSESSOR, rn.SREXEMPTIONDEADLINE, rn.VETEXEMPTIONDEADLINE, rn.NODMONTH

FROM            asr_datastore.ppnov AS rn INNER JOIN
                         assessor_app.asr_app.account AS ac ON rn.ACCOUNTNO = ac.account_no



GO
/****** Object:  Table [asr_datastore].[pers_prop_acct]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[pers_prop_acct](
	[account_no] [varchar](30) NOT NULL,
	[business_name] [varchar](100) NULL,
	[business_type] [varchar](10) NOT NULL,
	[business_type_description] [varchar](50) NOT NULL,
	[row_start_dtm] [datetime] NULL,
	[row_end_dtm] [datetime] NULL,
	[row_current_flag] [varchar](1) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL,
	[late_filing_flag] [varchar](1) NULL,
	[new_construction_flag] [varchar](1) NULL,
	[new_construction_class_code] [varchar](50) NULL,
	[new_construction_value] [numeric](15, 2) NULL,
	[declaration_sent_date] [date] NULL,
	[declaration_returned_date] [date] NULL,
	[valued_by] [varchar](30) NULL,
	[no_declaration_flag] [varchar](1) NULL,
	[best_info_available_flag] [varchar](1) NULL,
	[no_change_flag] [varchar](1) NULL,
	[rowhash] [varbinary](8000) NULL,
	[associated_account] [varchar](30) NULL,
 CONSTRAINT [PK_pers_prop_acct] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_pers_prop_acct]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO






CREATE VIEW [asr_app_query].[v_pers_prop_acct]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/10/2017
Developer:     t golden
Comments:      Initial creation
               List details for updating the pers_prop_acct

        2     3/15/2017
		      t golden
			  added associated_account for PP
*************************************************************************************/


AS
/****** Script for SelectTopNRows command from SSMS  ******/
SELECT [ACCOUNT_NO]
      ,[BUSINESS_NAME]
      ,[BUSINESS_TYPE]
	  ,[BUSINESS_TYPE_DESCRIPTION]
      ,[ROW_START_DTM]
      ,[ROW_END_DTM]
      ,[ROW_CURRENT_FLAG]
      ,[CREATE_DTM]
      ,[CREATE_USER_ID]
      ,[UPDATE_DTM]
      ,[UPDATE_USER_ID]
      ,[LATE_FILING_FLAG]
      ,[NEW_CONSTRUCTION_FLAG]
      ,[NEW_CONSTRUCTION_CLASS_CODE]
      ,[NEW_CONSTRUCTION_VALUE]
      ,[DECLARATION_SENT_DATE]
      ,[DECLARATION_RETURNED_DATE]
      ,[VALUED_BY]
      ,[NO_DECLARATION_FLAG]
      ,[BEST_INFO_AVAILABLE_FLAG]
      ,[NO_CHANGE_FLAG]
	  ,[ASSOCIATED_ACCOUNT]
  FROM [assessor_datastore].[asr_datastore].[pers_prop_acct]






GO
/****** Object:  View [asr_adv_search_query].[v_land_abstract]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_adv_search_query].[v_land_abstract]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/21/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the land_abstract inforamtion 
			   for active accounts 

*************************************************************************************/
AS
SELECT la.[account_no]
      ,la.[abstract_code]
      ,la.[land_abstract_detail_id]
      ,la.[land_type]
      ,la.[land_acres]
      ,la.[land_sf]
      ,la.[land_unit_count]
      ,la.[land_value_per]
      ,la.[land_value]
      ,la.[land_override_flag]
      ,la.[land_override_total]
      ,la.[land_actual_value]
      ,la.[land_class]
      ,la.[land_subclass]
      ,la.[land_valued_by]
      ,la.[land_value_measure]
      ,la.[create_datetime]
      ,la.[create_user_id]
      ,la.[update_datetime]
      ,la.[update_user_id]
      ,la.[rowhash]
      ,la.[abstract_code_description]
  FROM [asr_datastore].[land_abstract] as la
  inner join [asr_datastore].account as a  on a.account_no = la.account_no and a.account_status = 'A';
GO
/****** Object:  Table [asr_datastore].[pers_prop_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[pers_prop_detail](
	[PERS_PROP_DETAIL_EID] [int] IDENTITY(1,1) NOT NULL,
	[ACCOUNT_NO] [varchar](30) NOT NULL,
	[DETAIL_ID] [varchar](30) NOT NULL,
	[PERS_PROP_TYPE] [varchar](50) NULL,
	[ASSET_TYPE_CODE] [varchar](50) NULL,
	[ASSET_CONDITION_CODE] [varchar](50) NULL,
	[ACQUIRED_YEAR] [varchar](4) NULL,
	[QUANTITY] [numeric](6, 0) NULL,
	[ORIGINAL_COST] [numeric](15, 2) NULL,
	[ASSET_DETAIL_DESCR] [varchar](256) NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL,
 CONSTRAINT [PK_pers_prop_detail] PRIMARY KEY CLUSTERED 
(
	[PERS_PROP_DETAIL_EID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [asr_app_query].[v_pers_prop_detail]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_pers_prop_detail]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/10/2017
Developer:     t golden
Comments:      Initial creation
               List details for updating the pers_prop_detail
*************************************************************************************/


AS
SELECT [PERS_PROP_DETAIL_EID]
      ,[ACCOUNT_NO]
      ,[DETAIL_ID]
      ,[PERS_PROP_TYPE]
      ,[ASSET_TYPE_CODE]
      ,[ASSET_CONDITION_CODE]
      ,[ACQUIRED_YEAR]
      ,[QUANTITY]
      ,[ORIGINAL_COST]
      ,[ASSET_DETAIL_DESCR]
      ,[ROW_START_DTM]
      ,[ROW_END_DTM]
      ,[ROW_CURRENT_FLAG]
      ,[CREATE_DTM]
      ,[CREATE_USER_ID]
      ,[UPDATE_DTM]
      ,[UPDATE_USER_ID]
  FROM [assessor_datastore].[asr_datastore].[pers_prop_detail]




GO
/****** Object:  View [asr_adv_search_query].[v_sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO








CREATE VIEW [asr_adv_search_query].[v_sale]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      3/21/2018
Developer:     Christine Lin
Comments:      Initial creation
               Intended to be used by Assessor advanced search JSON file generation
               Provide a view to access the sale inforamtion 
			   for active accounts 

Mod #:  2
Mod Date:      6/24/2020
Developer:     David Guillen
Comments:      Add exclude_code_2, exclude_code_2_description, and multi_parcel_flag

*************************************************************************************/
AS
SELECT s.[recording_no]
      ,s.[grantor]
      ,s.[grantee]
      ,s.[sale_date]
      ,s.[deed_code]
      ,s.[deed_code_description]
      ,s.[sale_price]
      ,s.[valid1_flag]
      ,s.[confirmed_flag]
      ,s.[exclude_code_1]
      ,s.[improved_flag]
      ,s.[non_sale_flag]
      ,s.[create_datetime]
      ,s.[create_user_id]
      ,s.[update_datetime]
      ,s.[update_user_id]
      ,s.[exclude_code_1_description]
      ,s.[rowhash]
      ,s.[valid2_flag]
      ,s.[book]
      ,s.[page]
	  ,s.[exclude_code_2]
      ,s.[exclude_code_2_description]
	  ,CAST(CASE WHEN s.[exclude_code_1] IN (64,80) THEN 1
	        WHEN s.[exclude_code_2] IN (64,80) THEN 1
		    ELSE 0 
			END AS bit) as multi_parcel_flag
  FROM [assessor_datastore].[asr_datastore].[sale] as s
  inner join (select distinct sa.recording_no
              from [asr_datastore].[sale_account] as sa 
              inner join [asr_datastore].account as a  on a.account_no = sa.account_no and a.account_status = 'A') as l
			  on l.recording_no = s.recording_no;
GO
/****** Object:  View [asr_app_query].[v_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO













CREATE VIEW [asr_app_query].[v_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access active accounts for loading data into
			   the asssessor_app database

Mod #:  2
Mod Date:      10/31/2016
Developer:     Richard Edwards
Comments:      Add columns qtr, section, township, range
*************************************************************************************/
AS
SELECT account_no, state_parcel_no, tax_district_no, sub_filing_recording_no, account_type, appraisal_type
     , account_status, account_status_description, legal_description, longitude_x, latitude_y, elevation_z, location, bldg_permit_auth_id 
	 , create_datetime, create_user_id
	 , update_datetime, update_user_id, rowhash, qtr, section, township, range
FROM asr_datastore.account
WHERE account_status = 'A';















GO
/****** Object:  View [asr_app_query].[v_account_neighborhood]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [asr_app_query].[v_account_neighborhood]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      4/26/2016
Developer:     Richard Edwards
Comments:      Initial creation
               Provide a view to access account_neighborhood for active accounts for 
			   loading data into the asssessor_app database
*************************************************************************************/
AS
SELECT n.account_no, n.neighborhood_code, n.property_type, n.neighborhood_extension
	 , n.create_datetime, n.create_user_id
	 , n.update_datetime, n.update_user_id, rowhash
FROM asr_datastore.account_neighborhood n
INNER JOIN asr_datastore.account a
	  ON n.account_no = a.account_no
	  AND a.account_status = 'A';





GO
/****** Object:  View [asr_datastore].[vw_PropertyFiling]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [asr_datastore].[vw_PropertyFiling]
AS
SELECT     FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, FILING_DESCRIPTION AS FILING_DESCR
FROM        (SELECT     FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, FILING_DESCRIPTION, ROW_NUMBER() OVER (PARTITION BY FilingKey
                   ORDER BY FILING_NO DESC) AS DedupKey
FROM        (SELECT     isnull(cast(SUB_FILING_RECORDING_NO AS varchar(max)), '') + isnull(cast(SUBDIVISION_NAME AS varchar(max)), '') + isnull(cast(FILING_NO AS varchar(max)), '') AS FilingKey, SUB_FILING_RECORDING_NO, SUBDIVISION_NAME, FILING_NO, 
                                     FILING_DESCRIPTION
                   FROM        [asr_datastore].[sub_filing] pf) a) x
WHERE     x.DedupKey = 1
GO
/****** Object:  UserDefinedFunction [dbo].[SplitStrings_CTE]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SplitStrings_CTE]
(
   @List       NVARCHAR(MAX),
   @Delimiter  NVARCHAR(255)
)
RETURNS @Items TABLE (Item NVARCHAR(4000))
WITH SCHEMABINDING
AS
BEGIN
   DECLARE @ll INT = LEN(@List) + 1, @ld INT = LEN(@Delimiter);
 
   WITH a AS
   (
       SELECT
           [start] = 1,
           [end]   = COALESCE(NULLIF(CHARINDEX(@Delimiter, 
                       @List, 1), 0), @ll),
           [value] = SUBSTRING(@List, 1, 
                     COALESCE(NULLIF(CHARINDEX(@Delimiter, 
                       @List, 1), 0), @ll) - 1)
       UNION ALL
       SELECT
           [start] = CONVERT(INT, [end]) + @ld,
           [end]   = COALESCE(NULLIF(CHARINDEX(@Delimiter, 
                       @List, [end] + @ld), 0), @ll),
           [value] = SUBSTRING(@List, [end] + @ld, 
                     COALESCE(NULLIF(CHARINDEX(@Delimiter, 
                       @List, [end] + @ld), 0), @ll)-[end]-@ld)
       FROM a
       WHERE [end] < @ll
   )
   INSERT @Items SELECT [value]
   FROM a
   WHERE LEN([value]) > 0
   OPTION (MAXRECURSION 0);
 
   RETURN;
END
GO
/****** Object:  View [asr_app_query].[v_abstract_codes]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_abstract_codes]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      8/29/2017
Developer:     AGOLDEN
Comments:      Initial creation
               Provide abstract code data for ETL in the asr_datasore db.

*************************************************************************************/
AS

/****** Script for SelectTopNRows command from SSMS  ******/
SELECT [ABSTRACTCODE]
      ,[ABSTRACTDESCRIPTION]
      ,[EQUIVALENCEABSTRACTCODE]
      ,[CLASSIFICATIONID]
      ,[ABSTRACTTYPE]
      ,[ABSTRACTTYPE_DESC]
      ,[ACTIVEFLAG]
      ,[JURISDICTIONID]
      ,[LASTUPDATED]
      ,[SORTORDER]
  FROM [assessor_staging].[trn].[v_etl_abstract_codes]

GO
/****** Object:  View [asr_app_query].[v_pers_prop_type]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [asr_app_query].[v_pers_prop_type]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/10/2017
Developer:     t golden
Comments:      Initial creation
               List details for updating the pers_prop_acct
*************************************************************************************/


AS
/****** Script for SelectTopNRows command from SSMS  ******/
SELECT [PERS_PROP_TYPE]
      ,[CODE_DESCR]
      ,[ROW_START_DTM]
      ,[ROW_END_DTM]
      ,[ROW_CURRENT_FLAG]
      ,[CREATE_DTM]
      ,[CREATE_USER_ID]
      ,[UPDATE_DTM]
      ,[UPDATE_USER_ID]
  FROM [assessor_datastore].[asr_datastore].[pers_prop_type]




GO
/****** Object:  View [asr_datastore].[tool_show_column_dictionary]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--DROP VIEW [asr_datastore].[tool_show_column_dictionary]
--DROP VIEW [asr_datastore].[tool_show_record_count]
--DROP VIEW [asr_datastore].[tool_show_table_dictionary]


CREATE VIEW [asr_datastore].[tool_show_column_dictionary]
AS
SELECT s.name AS Schema_name, t.name AS table_Name, c.name AS column_name, value AS extended_property
FROM sys.extended_properties AS ep
INNER JOIN sys.tables AS t ON ep.major_id = t.object_id 
INNER JOIN sys.columns AS c ON ep.major_id = c.object_id AND ep.minor_id = c.column_id
INNER JOIN sys.schemas AS s ON t.schema_id = s.schema_id
WHERE class = 1
AND minor_id > 0



GO
/****** Object:  View [asr_datastore].[tool_show_table_dictionary]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [asr_datastore].[tool_show_table_dictionary]
AS
SELECT s.name AS Schema_name, t.name AS table_Name,  value AS extended_property
FROM sys.extended_properties AS ep
INNER JOIN sys.tables AS t ON ep.major_id = t.object_id 
INNER JOIN sys.schemas AS s ON t.schema_id = s.schema_id
WHERE class = 1
AND minor_id = 0



GO
/****** Object:  Table [asr_datastore].[account_legal]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_legal](
	[ACCOUNTNO] [varchar](30) NOT NULL,
	[LEGAL] [varchar](4000) NULL,
 CONSTRAINT [pk_account_legal] PRIMARY KEY CLUSTERED 
(
	[ACCOUNTNO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[account_notification]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_notification](
	[ACCOUNTNO] [varchar](30) NOT NULL,
	[NOTEID] [int] NOT NULL,
	[NOTE] [nvarchar](1000) NULL,
	[NOTE_DESC] [nvarchar](4000) NULL,
	[NOTE_ACTIVE] [nchar](1) NULL,
	[NOTE_VALID_FROM] [date] NULL,
	[NOTE_VALID_TO] [date] NULL,
	[ETL_RUN_TIME] [datetime] NOT NULL,
 CONSTRAINT [pk_account_notification] PRIMARY KEY CLUSTERED 
(
	[ACCOUNTNO] ASC,
	[NOTEID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[account_valuation_Old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[account_valuation_Old](
	[account_no] [varchar](30) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[actual_value] [numeric](15, 2) NULL,
	[assessed_value] [numeric](15, 2) NULL,
	[net_acres] [numeric](15, 4) NULL,
	[new_growth_flag] [bit] NULL,
	[valuation_class_code_description] [varchar](100) NULL,
	[create_datetime] [datetime2](7) NULL,
	[create_user_id] [varchar](60) NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
 CONSTRAINT [pk_account_valuation_Old] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[valuation_class_code] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[built_as_code]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[built_as_code](
	[built_as_code] [varchar](50) NULL,
	[code_descr] [varchar](256) NULL,
	[row_current_flag] [varchar](1) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[etl_cntl_salesexclude]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[etl_cntl_salesexclude](
	[SORTORDER] [numeric](15, 0) NULL,
	[EXCLUDEREASON] [varchar](40) NULL,
	[EXCLUDECD] [varchar](10) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[heat_type]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[heat_type](
	[heat_type] [varchar](50) NOT NULL,
	[code_descr] [varchar](256) NOT NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[improvement_occupancy_test]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[improvement_occupancy_test](
	[account_no] [varchar](30) NOT NULL,
	[improvement_no] [numeric](5, 0) NOT NULL,
	[occupancy_detail_id] [numeric](15, 0) NOT NULL,
	[occupancy_code] [varchar](50) NOT NULL,
	[occupancy_code_description] [varchar](100) NULL,
	[occupancy_percent] [numeric](7, 4) NOT NULL,
	[abstract_code] [varchar](50) NULL,
	[abstract_code_description] [varchar](100) NULL,
	[abstract_value] [numeric](15, 2) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[primary_flag] [bit] NULL,
	[rowhash] [varbinary](8000) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[land]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[land](
	[state_parcel_no] [varchar](30) NOT NULL,
	[assessment_year] [varchar](4) NOT NULL,
	[vacant_flag] [varchar](1) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[nod_table_1]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[nod_table_1](
	[header] [varchar](2) NOT NULL,
	[agent_flag] [varchar](1) NOT NULL,
	[review_number] [numeric](15, 0) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[owner_name_1] [varchar](60) NULL,
	[owner_name_2] [varchar](60) NULL,
	[owner_address_1] [varchar](50) NULL,
	[owner_address_2] [varchar](50) NULL,
	[owner_city] [varchar](50) NULL,
	[owner_state] [varchar](2) NULL,
	[owner_zip] [varchar](10) NULL,
	[location] [varchar](71) NULL,
	[sub_name] [varchar](255) NULL,
	[value_description_1] [varchar](500) NULL,
	[value_description_2] [varchar](500) NULL,
	[value_description_3] [varchar](500) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[nod_table_2]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[nod_table_2](
	[header] [varchar](2) NOT NULL,
	[agent_flag] [varchar](1) NOT NULL,
	[review_number] [numeric](15, 0) NOT NULL,
	[tax_year] [numeric](4, 0) NULL,
	[account_no] [varchar](30) NOT NULL,
	[sub_lot] [varchar](6) NULL,
	[sub_block] [varchar](6) NULL,
	[desc_1] [varchar](50) NULL,
	[desc_2] [varchar](50) NULL,
	[desc_3] [varchar](50) NULL,
	[desc_4] [varchar](50) NULL,
	[a/d] [varchar](30) NULL,
	[prior_value_1] [varchar](8000) NULL,
	[prior_value_2] [varchar](8000) NULL,
	[prior_value_3] [varchar](8000) NULL,
	[prior_value_4] [varchar](50) NULL,
	[current_value_1] [varchar](8000) NULL,
	[current_value_2] [varchar](8000) NULL,
	[current_value_3] [varchar](8000) NULL,
	[current_value_4] [varchar](50) NULL,
	[pet_value_total] [varchar](8000) NULL,
	[prior_value_total] [varchar](8000) NULL,
	[current_value_total] [varchar](8000) NULL,
	[appeal_acct_adjust_deny_reason] [varchar](255) NULL,
	[appeal_acct_reason_desc] [varchar](1000) NULL,
	[sub_name] [varchar](255) NULL,
	[filing_no] [varchar](30) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[occupancy_code]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[occupancy_code](
	[occupancy_code] [varchar](50) NULL,
	[code_descr] [varchar](256) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[OD_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[OD_account](
	[account_no] [varchar](30) NOT NULL,
	[state_parcel_no] [varchar](30) NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[sub_filing_recording_no] [varchar](30) NULL,
	[account_type] [varchar](30) NOT NULL,
	[appraisal_type] [varchar](30) NOT NULL,
	[account_status] [varchar](30) NOT NULL,
	[account_status_description] [varchar](100) NULL,
	[legal_description] [varchar](max) NULL,
	[longitude_x] [numeric](30, 8) NULL,
	[latitude_y] [numeric](30, 8) NULL,
	[location] [varchar](50) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[elevation_z] [numeric](30, 8) NULL,
	[bldg_permit_auth_id] [int] NULL,
	[qtr] [varchar](15) NULL,
	[section] [varchar](15) NULL,
	[township] [varchar](15) NULL,
	[range] [varchar](15) NULL,
	[assessment_year] [varchar](4) NOT NULL,
 CONSTRAINT [pk_OD_account] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[OD_account_platted_lot]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[OD_account_platted_lot](
	[ACCOUNT_NO] [varchar](30) NOT NULL,
	[SUB_FILING_RECORDING_NO] [varchar](30) NOT NULL,
	[PLATTED_LOT_EID] [int] NOT NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[OD_platted_lot]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[OD_platted_lot](
	[PLATTED_LOT_EID] [int] IDENTITY(1,1) NOT NULL,
	[STATE_PARCEL_NO] [varchar](30) NOT NULL,
	[LOT_NO] [varchar](30) NULL,
	[BLOCK_NO] [varchar](30) NULL,
	[TRACT_NO] [varchar](30) NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL,
PRIMARY KEY CLUSTERED 
(
	[PLATTED_LOT_EID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[property_sale]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[property_sale](
	[ACCOUNT_NO] [varchar](30) NULL,
	[RECORDING_NO] [varchar](20) NULL,
	[ACCOUNT_TYPE_CODE] [varchar](50) NULL,
	[SUBDIVISION_NO] [varchar](30) NULL,
	[SUB_FILING_RECORDING_NO] [varchar](30) NULL,
	[LOT_NO] [varchar](30) NULL,
	[BLOCK_NO] [varchar](30) NULL,
	[PROPERTY_TYPE_CODE] [varchar](50) NULL,
	[QUALITY_CODE] [varchar](50) NULL,
	[BUILT_YEAR] [varchar](15) NULL,
	[BASEMENT_UNFINISHED_SF] [numeric](8, 2) NULL,
	[BASEMENT_FINISHED_SF] [numeric](8, 2) NULL,
	[WALKOUT_BASEMENT_FLAG] [varchar](1) NULL,
	[GARAGE_SF] [numeric](8, 2) NULL,
	[NET_ACRES] [numeric](15, 4) NULL,
	[OCCUPANCY_CODE] [varchar](50) NULL,
	[HEAT_TYPE] [varchar](50) NULL,
	[BUILT_AS_CODE] [varchar](50) NULL,
	[NO_OF_BEDROOM] [int] NULL,
	[NO_OF_BATHROOM] [numeric](7, 2) NULL,
	[UNIT_TYPE] [varchar](50) NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL,
	[TOTAL_IMP_SF] [numeric](11, 0) NULL,
	[DISTRESSED_SALE_FLAG] [varchar](1) NULL,
	[LAND_VALUATION_CLASS_CODE] [varchar](50) NULL,
	[LAND_ECONOMIC_AREA_CODE] [varchar](50) NULL,
	[NEIGHBORHOOD_CODE] [varchar](50) NULL,
	[NEIGHBORHOOD_EXTENSION] [varchar](50) NULL,
	[NO_OF_BUILDING] [int] NULL,
	[VALID_ARMS_LENGTH_TRANS_FLAG] [varchar](1) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[PropertyLocation]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[PropertyLocation](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[ACCOUNT_NO] [varchar](30) NULL,
	[ACCOUNT_TYPE_CODE] [varchar](15) NULL,
	[STATE_PARCEL_NO] [varchar](30) NULL,
	[ADDRESS_NUMBER] [varchar](15) NULL,
	[PRE_DIRECTION_CODE] [varchar](2) NULL,
	[STREET_NAME] [varchar](50) NULL,
	[STREET_TYPE_CODE] [varchar](4) NULL,
	[UNIT_NO] [varchar](6) NULL,
	[LOCATION_ZIP_CODE] [varchar](10) NULL,
	[CITY_NAME] [varchar](50) NULL,
	[LEGAL_DESCR] [varchar](max) NULL,
	[SECTION] [varchar](15) NULL,
	[TOWNSHIP] [varchar](15) NULL,
	[RANGE] [varchar](15) NULL,
	[QUARTER] [varchar](15) NULL,
	[LAND_ECONOMIC_AREA_CODE] [varchar](30) NULL,
	[VACANT_FLAG] [varchar](1) NULL,
	[TOTAL_NET_ACRES] [numeric](20, 6) NULL,
	[TAX_DISTRICT_NO] [varchar](10) NULL,
	[NEIGHBORHOOD_CODE] [varchar](10) NULL,
	[NEIGHBORHOOD_EXTENSION] [varchar](10) NULL,
	[Location] [nvarchar](32) NULL,
	[create_dtm] [datetime] NULL,
	[create_user_id] [varchar](30) NULL,
	[update_dtm] [datetime] NULL,
	[update_user_id] [varchar](30) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[realnov_old]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[realnov_old](
	[ACCOUNTNO] [varchar](30) NULL,
	[TAXYEAR] [numeric](4, 0) NULL,
	[PARCELNO] [varchar](30) NULL,
	[PROPADDRESS] [varchar](81) NULL,
	[LEGALDESCRIPTION1] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION2] [nvarchar](1024) NULL,
	[LEGALDESCRIPTION3] [nvarchar](1024) NULL,
	[NAME1] [varchar](40) NULL,
	[NAME2] [varchar](40) NULL,
	[PNAME1] [varchar](40) NULL,
	[PNAME2] [varchar](40) NULL,
	[OWNERADDRESS1] [varchar](40) NULL,
	[OWNERADDRESS2] [varchar](40) NULL,
	[OWNERCITY] [varchar](50) NULL,
	[OWNERSTATE] [varchar](2) NULL,
	[OWNERZIP] [varchar](5) NULL,
	[PROPCLASS1] [varchar](50) NULL,
	[PRIORVALUE1] [varchar](8000) NULL,
	[CURRENTVALUE1] [varchar](8000) NULL,
	[INCREASEDECREASE1] [varchar](8000) NULL,
	[PROPCLASS2] [varchar](50) NULL,
	[PRIORVALUE2] [varchar](8000) NULL,
	[CURRENTVALUE2] [varchar](8000) NULL,
	[INCREASEDECREASE2] [varchar](8000) NULL,
	[PROPCLASS3] [varchar](50) NULL,
	[PRIORVALUE3] [varchar](8000) NULL,
	[CURRENTVALUE3] [varchar](8000) NULL,
	[INCREASEDECREASE3] [varchar](8000) NULL,
	[PROPCLASS4] [varchar](50) NULL,
	[PRIORVALUE4] [varchar](8000) NULL,
	[CURRENTVALUE4] [varchar](8000) NULL,
	[INCREASEDECREASE4] [varchar](8000) NULL,
	[PROPCLASS5] [varchar](50) NULL,
	[PRIORVALUE5] [varchar](50) NULL,
	[CURRENTVALUE5] [varchar](50) NULL,
	[INCREASEDECREASE5] [varchar](50) NULL,
	[PROPCLASS6] [varchar](50) NULL,
	[PRIORVALUE6] [varchar](50) NULL,
	[CURRENTVALUE6] [varchar](50) NULL,
	[INCREASEDECREASE6] [varchar](50) NULL,
	[TOTALPRIOR] [varchar](8000) NULL,
	[TOTALCURRENT] [varchar](8000) NULL,
	[TOTALINCREASEDECREASE] [varchar](8000) NULL,
	[VALUEYEAR] [int] NULL,
	[PROPERTYTYPE] [varchar](15) NULL,
	[PRIMARYBUILDING] [varchar](10) NULL,
	[BUILDINGCOUNT] [varchar](3) NULL,
	[SUBDIVISION] [varchar](18) NULL,
	[NEIGHBORHOOD] [varchar](10) NULL,
	[RESIDENTIALSF] [numeric](10, 0) NULL,
	[STYLE] [varchar](18) NULL,
	[QUALITY] [varchar](15) NULL,
	[YEARBUILT] [varchar](10) NULL,
	[HEATTYPE] [varchar](18) NULL,
	[BASEMENTSF] [numeric](10, 0) NULL,
	[FINISHEDBSMNTSF] [numeric](10, 0) NULL,
	[BASEMENTTYPE] [varchar](10) NULL,
	[GARAGESF] [numeric](10, 0) NULL,
	[IMPSF] [numeric](10, 0) NULL,
	[COMMERCIALSF] [numeric](10, 0) NULL,
	[OUTBUILDINGSF] [numeric](10, 0) NULL,
	[LANDTYPE] [varchar](15) NULL,
	[ACREAGE] [varchar](10) NULL,
	[LEA] [varchar](30) NULL,
	[LANDATTRIBUTES] [varchar](150) NULL,
	[APPRDATEYEAR] [varchar](10) NULL,
	[REAPPRYEAR] [varchar](10) NULL,
	[BEGPERYEAR] [varchar](10) NULL,
	[ENDPERYEAR] [varchar](10) NULL,
	[CBOEDEADLINE] [varchar](10) NULL,
	[PRINTFLAG] [varchar](1) NULL,
	[BULKNOVFLAG] [varchar](1) NULL,
	[PRIVATEFLAG] [varchar](1) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[ASSESSOR] [varchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[value_from_tsgvacctabstvalue_backup_before_fix20220211]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[value_from_tsgvacctabstvalue_backup_before_fix20220211](
	[account_no] [varchar](30) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[raw_tax_dollars] [numeric](15, 2) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[mill_levy] [numeric](11, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
	[net_acres] [numeric](15, 4) NULL,
	[valuation_class_code_description] [varchar](500) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[value_from_tsgvacctabstvalue_BKUP]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[value_from_tsgvacctabstvalue_BKUP](
	[account_no] [varchar](30) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[raw_tax_dollars] [numeric](15, 2) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[mill_levy] [numeric](11, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
	[net_acres] [numeric](15, 4) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[value_from_tsgvacctabstvalue_state_assessed]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[value_from_tsgvacctabstvalue_state_assessed](
	[account_no] [varchar](30) NOT NULL,
	[tax_year] [numeric](4, 0) NOT NULL,
	[valuation_class_code] [varchar](50) NOT NULL,
	[tax_district_no] [varchar](30) NOT NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[raw_tax_dollars] [numeric](15, 2) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[mill_levy] [numeric](11, 6) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[account_type] [varchar](30) NULL,
	[net_acres] [numeric](15, 4) NULL,
 CONSTRAINT [pk_value_from_tsgvacctabstvalue_state_assessed] PRIMARY KEY CLUSTERED 
(
	[account_no] ASC,
	[tax_year] ASC,
	[valuation_class_code] ASC,
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[values_non_pers_prop]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[values_non_pers_prop](
	[seq_id] [numeric](15, 0) NOT NULL,
	[version_start_date] [numeric](11, 0) NULL,
	[version_end_date] [numeric](11, 0) NULL,
	[account_no] [varchar](30) NULL,
	[abstract_code] [varchar](10) NULL,
	[tax_year] [numeric](4, 0) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[new_construction_value_change] [numeric](15, 2) NULL,
	[new_construction_value_change_assessed] [numeric](15, 2) NULL,
	[jurisdiction_id] [numeric](15, 0) NULL,
	[write_date] [varchar](22) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[abstract_code_description] [varchar](100) NULL,
 CONSTRAINT [pk_values_non_pers_prop] PRIMARY KEY CLUSTERED 
(
	[seq_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [asr_datastore].[values_pers_prop]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [asr_datastore].[values_pers_prop](
	[seq_id] [numeric](15, 0) NOT NULL,
	[version_start_date] [numeric](11, 0) NULL,
	[version_end_date] [numeric](11, 0) NULL,
	[account_no] [varchar](30) NULL,
	[abstract_code] [varchar](10) NULL,
	[tax_year] [numeric](4, 0) NULL,
	[actual_value] [numeric](15, 2) NULL,
	[raw_assessed_value] [numeric](15, 2) NULL,
	[new_construction_value_change] [numeric](15, 2) NULL,
	[new_construction_value_change_assessed] [numeric](15, 2) NULL,
	[jurisdiction_id] [numeric](15, 0) NULL,
	[write_date] [varchar](22) NULL,
	[create_datetime] [datetime2](7) NOT NULL,
	[create_user_id] [varchar](60) NOT NULL,
	[update_datetime] [datetime2](7) NULL,
	[update_user_id] [varchar](60) NULL,
	[rowhash] [varbinary](8000) NULL,
	[abstract_code_description] [varchar](100) NULL,
 CONSTRAINT [pk_values_pers_prop] PRIMARY KEY CLUSTERED 
(
	[seq_id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[account_valuation_NOT_USED]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[account_valuation_NOT_USED](
	[ACCOUNT_VALUATION_EID] [int] IDENTITY(1,1) NOT NULL,
	[VALUATION_CLASS_CODE] [varchar](50) NOT NULL,
	[ACCOUNT_NO] [varchar](30) NOT NULL,
	[ACTUAL_VALUE] [numeric](15, 2) NULL,
	[ASSESSED_VALUE] [numeric](15, 2) NULL,
	[NET_ACRES] [numeric](15, 4) NULL,
	[NEW_GROWTH_FLAG] [varchar](1) NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EXPORT_TABLE_NOT_USED]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EXPORT_TABLE_NOT_USED](
	[PROPERTY_ACCOUNT_NO] [varchar](100) NULL,
	[STATE_PARCEL_NO] [varchar](100) NULL,
	[OWNER_NAME] [varchar](100) NULL,
	[MAILING_STREET_ADDRESS] [varchar](100) NULL,
	[MAILING_CITY] [varchar](100) NULL,
	[MAILING_ZIP_CODE] [varchar](100) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[prsqlasr_improvement_fact_NOT_USED]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[prsqlasr_improvement_fact_NOT_USED](
	[ACCOUNT_NO] [varchar](30) NULL,
	[BUILDING_ID] [varchar](5) NULL,
	[IMPROVEMENT_EID] [numeric](18, 0) NULL,
	[QUALITY_CODE] [varchar](50) NULL,
	[CONDITION_CODE] [varchar](50) NULL,
	[PROPERTY_TYPE_CODE] [varchar](50) NULL,
	[IMPROVEMENT_SF] [numeric](11, 0) NULL,
	[COMPLETION_PERCENT] [numeric](7, 4) NULL,
	[UNIT_TYPE] [varchar](50) NULL,
	[NO_OF_FIREPLACE] [numeric](15, 4) NULL,
	[TOTAL_GARAGE_SF] [numeric](15, 4) NULL,
	[WALKOUT_BASEMENT_FLAG] [varchar](1) NULL,
	[TOTAL_PORCH_SF] [numeric](15, 4) NULL,
	[TOTAL_FINISHED_BASEMENT_SF] [numeric](15, 4) NULL,
	[TOTAL_UNFINISHED_BASEMENT_SF] [numeric](15, 4) NULL,
	[ROW_START_DTM] [datetime] NULL,
	[ROW_END_DTM] [datetime] NULL,
	[ROW_CURRENT_FLAG] [varchar](1) NULL,
	[CREATE_DTM] [datetime] NULL,
	[CREATE_USER_ID] [varchar](30) NULL,
	[UPDATE_DTM] [datetime] NULL,
	[UPDATE_USER_ID] [varchar](30) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [CI_account_bldg_id]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE CLUSTERED INDEX [CI_account_bldg_id] ON [dbo].[prsqlasr_improvement_fact_NOT_USED]
(
	[ACCOUNT_NO] ASC,
	[BUILDING_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Table [Reporting].[RESMODELANALYSISDATA]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [Reporting].[RESMODELANALYSISDATA](
	[RESMODELANALYSISDATAID] [int] IDENTITY(1,1) NOT NULL,
	[NBHD] [varchar](21) NOT NULL,
	[SUBNAME] [varchar](255) NOT NULL,
	[ACCOUNTNO] [varchar](30) NOT NULL,
	[PARCELNO] [varchar](30) NULL,
	[STREETADDRESS] [varchar](100) NULL,
	[ANALYSISMODEL] [varchar](30) NULL,
	[PLANMODEL] [varchar](30) NULL,
	[ADJYEARBUILT] [numeric](18, 0) NULL,
	[IMPQUALITY] [varchar](15) NULL,
	[PROPERTYTYPE] [varchar](15) NULL,
	[IMPUNITTYPE] [varchar](30) NULL,
	[CURRIMPCOUNT] [numeric](18, 0) NULL,
	[BLTASDESCRIPTION] [varchar](50) NOT NULL,
	[HVACTYPE] [varchar](30) NULL,
	[BATHCOUNT] [numeric](7, 2) NULL,
	[FPCOUNT] [numeric](18, 0) NULL,
	[BLTASSF] [numeric](18, 0) NULL,
	[BASEMENTSF] [numeric](18, 0) NULL,
	[FINISHEDBASEMENTSF] [numeric](18, 0) NULL,
	[GARAGESF] [numeric](18, 0) NULL,
	[CARPORTSF] [numeric](18, 0) NULL,
	[PORCHSF] [numeric](18, 0) NULL,
	[BASEMENT] [varchar](50) NULL,
	[LANDSF] [numeric](20, 6) NULL,
	[GOLF] [varchar](50) NULL,
	[GREENBELT] [varchar](50) NULL,
	[POWERLINE] [varchar](50) NULL,
	[SUPVIEW] [varchar](50) NULL,
	[TRAFFIC] [varchar](50) NULL,
	[CULDESAC] [varchar](50) NULL,
	[TREED] [varchar](50) NULL,
	[CORNERLOT] [varchar](50) NULL,
	[RAILROAD] [varchar](50) NULL,
	[UNPAVEDROAD] [varchar](50) NULL,
	[RECEPTIONNO] [varchar](30) NULL,
	[SALEDATE] [date] NULL,
	[ADJSALEPRICE] [numeric](15, 2) NULL,
	[TASP] [numeric](15, 2) NULL,
	[VALID1FLAG] [numeric](18, 0) NULL,
	[EXCLUDECODE1] [varchar](10) NULL,
	[NEWCONSTRUCTION] [numeric](18, 0) NULL,
	[SALESRATIO] [numeric](15, 10) NULL,
	[PREVIOUSVALUE] [numeric](15, 2) NOT NULL,
	[PREVIOUSYEAR] [numeric](4, 0) NOT NULL,
	[CURRENTVALUE] [numeric](15, 2) NOT NULL,
	[CURRENTYEAR] [numeric](4, 0) NOT NULL,
	[VALUECHANGE] [numeric](15, 10) NULL,
	[PRICEPERSF] [numeric](15, 2) NULL,
	[COUNTAPPEAL] [numeric](18, 0) NULL,
	[UNIQUEFEATURE] [varchar](1000) NULL,
	[AG] [numeric](18, 0) NOT NULL,
	[SALEPRICEPERSF] [numeric](15, 2) NULL,
	[Create_Datetime] [datetime2](7) NULL,
	[Create_User_ID] [varchar](60) NULL,
	[Update_Datetime] [datetime2](7) NULL,
	[Update_User_ID] [varchar](60) NULL,
	[Rowhash] [varbinary](8000) NULL,
 CONSTRAINT [PK_Reporting_RESMODELANALYSISDATA] PRIMARY KEY CLUSTERED 
(
	[RESMODELANALYSISDATAID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [Reporting].[RESMODELSALES]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [Reporting].[RESMODELSALES](
	[RESMODELSALESID] [int] IDENTITY(1,1) NOT NULL,
	[NBHD] [varchar](21) NOT NULL,
	[SUBNAME] [varchar](255) NOT NULL,
	[ACCOUNTNO] [varchar](30) NOT NULL,
	[PARCELNO] [varchar](30) NULL,
	[STREETADDRESS] [varchar](100) NULL,
	[PLANMODEL] [varchar](30) NULL,
	[RECEPTIONNO] [varchar](30) NULL,
	[SALEDATE] [date] NULL,
	[ADJSALEPRICE] [numeric](15, 2) NULL,
	[TASP] [numeric](15, 2) NULL,
	[VALID1FLAG] [numeric](18, 0) NULL,
	[EXCLUDECODE1] [varchar](10) NULL,
	[NEWCONSTRUCTION] [numeric](18, 0) NULL,
	[SALESRATIO] [numeric](15, 10) NULL,
	[CURRENTVALUE] [numeric](15, 2) NOT NULL,
	[CURRENTYEAR] [numeric](4, 0) NOT NULL,
	[Create_Datetime] [datetime2](7) NULL,
	[Create_User_ID] [varchar](60) NULL,
	[Update_Datetime] [datetime2](7) NULL,
	[Update_User_ID] [varchar](60) NULL,
	[Rowhash] [varbinary](8000) NULL,
 CONSTRAINT [PK_Reporting_RESMODELSALES] PRIMARY KEY CLUSTERED 
(
	[RESMODELSALESID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [Reporting].[TBLMLSHISTORY]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [Reporting].[TBLMLSHISTORY](
	[TBLMLSHISTORY] [int] IDENTITY(1,1) NOT NULL,
	[MLSMONTH] [int] NOT NULL,
	[MLSYEAR] [int] NOT NULL,
	[MLSTYPE] [varchar](25) NOT NULL,
	[MONTHSOFINVENTORY] [int] NULL,
	[ACTIVELISTINGCOUNT] [int] NULL,
	[AVGDOM] [int] NULL,
	[MEDIANDOM] [int] NULL,
	[SALESCOUNT] [int] NULL,
	[AVGLISTPRICE] [numeric](15, 0) NULL,
	[MEDIANLISTPRICE] [numeric](15, 0) NULL,
	[AVGCLOSEPRICE] [numeric](15, 0) NULL,
	[MEDIANCLOSEPRICE] [numeric](15, 0) NULL,
	[Create_Datetime] [datetime2](7) NULL,
	[Create_User_ID] [varchar](60) NULL,
	[Update_Datetime] [datetime2](7) NULL,
	[Update_User_ID] [varchar](60) NULL,
	[Rowhash] [varbinary](8000) NULL,
 CONSTRAINT [PK_Reporting_TBLMLSHISTORY] PRIMARY KEY CLUSTERED 
(
	[TBLMLSHISTORY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Index [IX_account_number]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE UNIQUE NONCLUSTERED INDEX [IX_account_number] ON [asr_adv_search_query].[account_number]
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [ix_fa_account_no]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [ix_fa_account_no] ON [asr_adv_search_query].[flat_account]
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [_dta_index_account_16_245575913__K1_2_3_4_5_6_7_8_9_10_11_12_13_14_15_16_17_18_20_21_22_23_24]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_16_245575913__K1_2_3_4_5_6_7_8_9_10_11_12_13_14_15_16_17_18_20_21_22_23_24] ON [asr_datastore].[account]
(
	[account_no] ASC
)
INCLUDE([state_parcel_no],[tax_district_no],[sub_filing_recording_no],[account_type],[appraisal_type],[account_status],[account_status_description],[legal_description],[longitude_x],[latitude_y],[location],[create_datetime],[create_user_id],[update_datetime],[update_user_id],[rowhash],[elevation_z],[bldg_permit_auth_id],[qtr],[section],[township],[range]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [_dta_index_account_16_245575913__K7]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_16_245575913__K7] ON [asr_datastore].[account]
(
	[account_status] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_a_sub_filing]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_a_sub_filing] ON [asr_datastore].[account]
(
	[sub_filing_recording_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_a_tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_a_tax_district] ON [asr_datastore].[account]
(
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_an_account]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_an_account] ON [asr_datastore].[account_neighborhood]
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [_dta_index_account_owner_address_16_1666104976__K3_K20_K1_4_9_10_11_12_13_14]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_owner_address_16_1666104976__K3_K20_K1_4_9_10_11_12_13_14] ON [asr_datastore].[account_owner_address]
(
	[primary_owner_flag] ASC,
	[private_flag] ASC,
	[account_no] ASC
)
INCLUDE([owner_name],[address_line_1],[address_line_2],[city_name],[state],[zip_code],[country]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [_dta_index_account_platted_lot_16_350624292__K1_2_3_4_5]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_platted_lot_16_350624292__K1_2_3_4_5] ON [asr_datastore].[account_platted_lot]
(
	[ACCOUNT_NO] ASC
)
INCLUDE([PARCEL_NO],[LOT],[TRACT],[BLOCK]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [_dta_index_account_property_address_16_341576255__K3_1_5_7_8_9_10_11_12_13_14]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_property_address_16_341576255__K3_1_5_7_8_9_10_11_12_13_14] ON [asr_datastore].[account_property_address]
(
	[primary_address_flag] ASC
)
INCLUDE([account_no],[unit_no],[address_number],[address_number_suffix],[pre_direction_code],[street_name],[street_type_code],[post_direction_code],[city_name],[location_zip_code]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_apa_account]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_apa_account] ON [asr_datastore].[account_property_address]
(
	[account_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [_dta_index_account_valuation_16_1440724185__K1_4_5_6]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [_dta_index_account_valuation_16_1440724185__K1_4_5_6] ON [asr_datastore].[account_valuation]
(
	[account_no] ASC
)
INCLUDE([actual_value],[assessed_value],[net_acres]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [ix_acctno_impno_detailunitcnt]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [ix_acctno_impno_detailunitcnt] ON [asr_datastore].[improvement_detail]
(
	[improvement_detail_type] ASC,
	[improvement_detail_type_description] ASC
)
INCLUDE([account_no],[improvement_no],[detail_unit_count]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [sale_account_ix_test]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [sale_account_ix_test] ON [asr_datastore].[sale_account]
(
	[account_no] ASC
)
INCLUDE([recording_no]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_taf_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_taf_tax_authority] ON [asr_datastore].[tax_authority_fund]
(
	[tax_authority_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_tda_tax_authority]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_tda_tax_authority] ON [asr_datastore].[tax_district_authority]
(
	[tax_authority_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [fk_tda_tax_district]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [fk_tda_tax_district] ON [asr_datastore].[tax_district_authority]
(
	[tax_district_no] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [ix_acct_no_raw_actual_tsgvacctabstvalue]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [ix_acct_no_raw_actual_tsgvacctabstvalue] ON [asr_datastore].[value_from_tsgvacctabstvalue]
(
	[account_no] ASC,
	[raw_assessed_value] ASC,
	[actual_value] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
/****** Object:  Index [ix_nc_v_summed_values_by_class_code]    Script Date: 10/15/2024 4:17:29 PM ******/
CREATE NONCLUSTERED INDEX [ix_nc_v_summed_values_by_class_code] ON [asr_datastore].[value_from_tsgvacctabstvalue]
(
	[tax_year] ASC
)
INCLUDE([account_no],[valuation_class_code],[raw_assessed_value],[actual_value],[net_acres],[valuation_class_code_description]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
GO
ALTER TABLE [asr_datastore].[account_notification] ADD  CONSTRAINT [DF_account_notification_ETL_RUN_TIME]  DEFAULT (sysdatetime()) FOR [ETL_RUN_TIME]
GO
ALTER TABLE [asr_datastore].[azure_building_permit_authority] ADD  CONSTRAINT [DF_permit_authority_CREATE_DTM]  DEFAULT (getdate()) FOR [create_datetime]
GO
ALTER TABLE [asr_datastore].[azure_building_permit_authority] ADD  CONSTRAINT [DF_permit_authority_CREATE_USER_ID]  DEFAULT (suser_name()) FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[azure_important_dates] ADD  CONSTRAINT [DF_important_dates_CREATE_DTM]  DEFAULT (getdate()) FOR [create_datetime]
GO
ALTER TABLE [asr_datastore].[azure_important_dates] ADD  CONSTRAINT [DF_important_dates_CREATE_USER_ID]  DEFAULT (suser_name()) FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[azure_important_PPLinks] ADD  CONSTRAINT [DF_important_PPLinks_CREATE_DTM]  DEFAULT (getdate()) FOR [create_datetime]
GO
ALTER TABLE [asr_datastore].[azure_important_PPLinks] ADD  CONSTRAINT [DF_important_PPLinks_CREATE_USER_ID]  DEFAULT (suser_name()) FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[built_as_code] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[built_as_code] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[heat_type] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[heat_type] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[land] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[land] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[land_parent] ADD  CONSTRAINT [DF_land_parent_CREATE_USER_ID]  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[occupancy_code] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[occupancy_code] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[OD_account_platted_lot] ADD  CONSTRAINT [OD_account_platted_lot_ROW_START__DATE]  DEFAULT (getdate()) FOR [ROW_START_DTM]
GO
ALTER TABLE [asr_datastore].[OD_account_platted_lot] ADD  CONSTRAINT [OD_account_platted_lot__ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [ROW_CURRENT_FLAG]
GO
ALTER TABLE [asr_datastore].[OD_account_platted_lot] ADD  CONSTRAINT [OD_account_platted_lot__ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [CREATE_DTM]
GO
ALTER TABLE [asr_datastore].[OD_account_platted_lot] ADD  CONSTRAINT [OD_account_platted_lot_CREATE_USER_ID]  DEFAULT ('Y') FOR [CREATE_USER_ID]
GO
ALTER TABLE [asr_datastore].[OD_platted_lot] ADD  CONSTRAINT [OD_platted_lot_ROW_START__DATE]  DEFAULT (getdate()) FOR [ROW_START_DTM]
GO
ALTER TABLE [asr_datastore].[OD_platted_lot] ADD  CONSTRAINT [OD_platted_lot__ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [ROW_CURRENT_FLAG]
GO
ALTER TABLE [asr_datastore].[OD_platted_lot] ADD  CONSTRAINT [OD_platted_lot__ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [CREATE_DTM]
GO
ALTER TABLE [asr_datastore].[OD_platted_lot] ADD  CONSTRAINT [OD_platted_lot_CREATE_USER_ID]  DEFAULT ('SSIS') FOR [CREATE_USER_ID]
GO
ALTER TABLE [asr_datastore].[pers_prop_acct] ADD  CONSTRAINT [DF_pers_prop_acct_ROW_START_DATE]  DEFAULT (getdate()) FOR [row_start_dtm]
GO
ALTER TABLE [asr_datastore].[pers_prop_acct] ADD  CONSTRAINT [DF_pers_prop_acct_ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [row_current_flag]
GO
ALTER TABLE [asr_datastore].[pers_prop_acct] ADD  CONSTRAINT [DF_pers_prop_acct_ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[pers_prop_acct] ADD  CONSTRAINT [DF_pers_prop_acct_CREATE_USER_ID]  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[pers_prop_detail] ADD  CONSTRAINT [DF_pers_prop_detail_ROW_START_DATE]  DEFAULT (getdate()) FOR [ROW_START_DTM]
GO
ALTER TABLE [asr_datastore].[pers_prop_detail] ADD  CONSTRAINT [DF_pers_prop_detail_ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [ROW_CURRENT_FLAG]
GO
ALTER TABLE [asr_datastore].[pers_prop_detail] ADD  CONSTRAINT [DF_pers_prop_detail_ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [CREATE_DTM]
GO
ALTER TABLE [asr_datastore].[pers_prop_detail] ADD  CONSTRAINT [DF_pers_prop_detail_CREATE_USER_ID]  DEFAULT ('SSIS_ETL') FOR [CREATE_USER_ID]
GO
ALTER TABLE [asr_datastore].[property_sale] ADD  CONSTRAINT [DF_property_sale_ROW_START_DATE]  DEFAULT (getdate()) FOR [ROW_START_DTM]
GO
ALTER TABLE [asr_datastore].[property_sale] ADD  CONSTRAINT [DF_property_sale_ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [ROW_CURRENT_FLAG]
GO
ALTER TABLE [asr_datastore].[property_sale] ADD  CONSTRAINT [DF_property_sale_ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [CREATE_DTM]
GO
ALTER TABLE [asr_datastore].[property_sale] ADD  CONSTRAINT [DF_property_sale_CREATE_USER_ID]  DEFAULT ('SSIS_ETL') FOR [CREATE_USER_ID]
GO
ALTER TABLE [asr_datastore].[PropertyLocation] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[PropertyLocation] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [asr_datastore].[subdivision] ADD  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [asr_datastore].[subdivision] ADD  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [dbo].[account_valuation_NOT_USED] ADD  CONSTRAINT [DF_account_valuation_ROW_START_DATE]  DEFAULT (getdate()) FOR [ROW_START_DTM]
GO
ALTER TABLE [dbo].[account_valuation_NOT_USED] ADD  CONSTRAINT [DF_account_valuation_ROW_CURRENT_FLAG]  DEFAULT ('Y') FOR [ROW_CURRENT_FLAG]
GO
ALTER TABLE [dbo].[account_valuation_NOT_USED] ADD  CONSTRAINT [DF_account_valuation_ROW_CREATE_DTM]  DEFAULT (getdate()) FOR [CREATE_DTM]
GO
ALTER TABLE [dbo].[account_valuation_NOT_USED] ADD  CONSTRAINT [DF_account_valuation_CREATE_USER_ID]  DEFAULT ('SSIS_ETL') FOR [CREATE_USER_ID]
GO
ALTER TABLE [dbo].[valuation_class_code] ADD  CONSTRAINT [DF_valuation_class_code_create_user_id]  DEFAULT ('SSIS_ETL') FOR [create_user_id]
GO
ALTER TABLE [dbo].[valuation_class_code] ADD  CONSTRAINT [DF_valuation_class_code]  DEFAULT (getdate()) FOR [create_dtm]
GO
ALTER TABLE [location].[location_data] ADD  DEFAULT (getdate()) FOR [write_date]
GO
ALTER TABLE [asr_datastore].[account]  WITH NOCHECK ADD  CONSTRAINT [fk_a_sub_filing] FOREIGN KEY([sub_filing_recording_no])
REFERENCES [asr_datastore].[sub_filing] ([sub_filing_recording_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account] NOCHECK CONSTRAINT [fk_a_sub_filing]
GO
ALTER TABLE [asr_datastore].[account]  WITH NOCHECK ADD  CONSTRAINT [fk_a_tax_district] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account] NOCHECK CONSTRAINT [fk_a_tax_district]
GO
ALTER TABLE [asr_datastore].[account_neighborhood]  WITH NOCHECK ADD  CONSTRAINT [fk_an_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account_neighborhood] NOCHECK CONSTRAINT [fk_an_account]
GO
ALTER TABLE [asr_datastore].[account_owner_address]  WITH NOCHECK ADD  CONSTRAINT [fk_aoa_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account_owner_address] NOCHECK CONSTRAINT [fk_aoa_account]
GO
ALTER TABLE [asr_datastore].[account_property_address]  WITH NOCHECK ADD  CONSTRAINT [fk_apa_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account_property_address] NOCHECK CONSTRAINT [fk_apa_account]
GO
ALTER TABLE [asr_datastore].[account_valuation]  WITH NOCHECK ADD  CONSTRAINT [fk_av_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account_valuation] NOCHECK CONSTRAINT [fk_av_account]
GO
ALTER TABLE [asr_datastore].[account_valuation_Old]  WITH NOCHECK ADD  CONSTRAINT [fk_av_account_Old] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[account_valuation_Old] NOCHECK CONSTRAINT [fk_av_account_Old]
GO
ALTER TABLE [asr_datastore].[improvement]  WITH NOCHECK ADD  CONSTRAINT [fk_imp_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[improvement] NOCHECK CONSTRAINT [fk_imp_account]
GO
ALTER TABLE [asr_datastore].[improvement_built_as]  WITH NOCHECK ADD  CONSTRAINT [fk_iba_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
GO
ALTER TABLE [asr_datastore].[improvement_built_as] NOCHECK CONSTRAINT [fk_iba_account]
GO
ALTER TABLE [asr_datastore].[improvement_built_as]  WITH NOCHECK ADD  CONSTRAINT [fk_iba_improvement] FOREIGN KEY([account_no], [improvement_no])
REFERENCES [asr_datastore].[improvement] ([account_no], [improvement_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[improvement_built_as] NOCHECK CONSTRAINT [fk_iba_improvement]
GO
ALTER TABLE [asr_datastore].[improvement_detail]  WITH NOCHECK ADD  CONSTRAINT [fk_id_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
GO
ALTER TABLE [asr_datastore].[improvement_detail] NOCHECK CONSTRAINT [fk_id_account]
GO
ALTER TABLE [asr_datastore].[improvement_detail]  WITH NOCHECK ADD  CONSTRAINT [fk_id_improvement] FOREIGN KEY([account_no], [improvement_no])
REFERENCES [asr_datastore].[improvement] ([account_no], [improvement_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[improvement_detail] NOCHECK CONSTRAINT [fk_id_improvement]
GO
ALTER TABLE [asr_datastore].[improvement_occupancy]  WITH NOCHECK ADD  CONSTRAINT [fk_io_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
GO
ALTER TABLE [asr_datastore].[improvement_occupancy] NOCHECK CONSTRAINT [fk_io_account]
GO
ALTER TABLE [asr_datastore].[improvement_occupancy]  WITH NOCHECK ADD  CONSTRAINT [fk_io_improvement] FOREIGN KEY([account_no], [improvement_no])
REFERENCES [asr_datastore].[improvement] ([account_no], [improvement_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[improvement_occupancy] NOCHECK CONSTRAINT [fk_io_improvement]
GO
ALTER TABLE [asr_datastore].[land_abstract]  WITH NOCHECK ADD  CONSTRAINT [fk_lab_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[land_abstract] NOCHECK CONSTRAINT [fk_lab_account]
GO
ALTER TABLE [asr_datastore].[land_attribute]  WITH NOCHECK ADD  CONSTRAINT [fk_la_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[land_attribute] NOCHECK CONSTRAINT [fk_la_account]
GO
ALTER TABLE [asr_datastore].[OD_account]  WITH NOCHECK ADD  CONSTRAINT [fk_OD_a_sub_filing] FOREIGN KEY([sub_filing_recording_no])
REFERENCES [asr_datastore].[sub_filing] ([sub_filing_recording_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[OD_account] NOCHECK CONSTRAINT [fk_OD_a_sub_filing]
GO
ALTER TABLE [asr_datastore].[OD_account]  WITH NOCHECK ADD  CONSTRAINT [fk_OD_a_tax_district] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[OD_account] NOCHECK CONSTRAINT [fk_OD_a_tax_district]
GO
ALTER TABLE [asr_datastore].[real_account]  WITH NOCHECK ADD  CONSTRAINT [fk_ra_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[real_account] NOCHECK CONSTRAINT [fk_ra_account]
GO
ALTER TABLE [asr_datastore].[sale_account]  WITH NOCHECK ADD  CONSTRAINT [fk_sa_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[sale_account] NOCHECK CONSTRAINT [fk_sa_account]
GO
ALTER TABLE [asr_datastore].[sale_account]  WITH NOCHECK ADD  CONSTRAINT [fk_sa_sale] FOREIGN KEY([recording_no])
REFERENCES [asr_datastore].[sale] ([recording_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[sale_account] NOCHECK CONSTRAINT [fk_sa_sale]
GO
ALTER TABLE [asr_datastore].[sale_inventory]  WITH NOCHECK ADD  CONSTRAINT [fk_si_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[sale_inventory] NOCHECK CONSTRAINT [fk_si_account]
GO
ALTER TABLE [asr_datastore].[sale_inventory_detail]  WITH NOCHECK ADD  CONSTRAINT [fk_sid_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[sale_inventory_detail] NOCHECK CONSTRAINT [fk_sid_account]
GO
ALTER TABLE [asr_datastore].[tax_authority_fund]  WITH NOCHECK ADD  CONSTRAINT [fk_taf_tax_authority] FOREIGN KEY([tax_authority_no])
REFERENCES [asr_datastore].[tax_authority] ([tax_authority_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[tax_authority_fund] NOCHECK CONSTRAINT [fk_taf_tax_authority]
GO
ALTER TABLE [asr_datastore].[tax_district_authority]  WITH NOCHECK ADD  CONSTRAINT [fk_tda_tax_authority] FOREIGN KEY([tax_authority_no])
REFERENCES [asr_datastore].[tax_authority] ([tax_authority_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[tax_district_authority] NOCHECK CONSTRAINT [fk_tda_tax_authority]
GO
ALTER TABLE [asr_datastore].[tax_district_authority]  WITH NOCHECK ADD  CONSTRAINT [fk_tda_tax_district] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[tax_district_authority] NOCHECK CONSTRAINT [fk_tda_tax_district]
GO
ALTER TABLE [asr_datastore].[value]  WITH NOCHECK ADD  CONSTRAINT [fk_v_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[value] NOCHECK CONSTRAINT [fk_v_account]
GO
ALTER TABLE [asr_datastore].[value]  WITH NOCHECK ADD  CONSTRAINT [fk_v_tax_district] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
GO
ALTER TABLE [asr_datastore].[value] NOCHECK CONSTRAINT [fk_v_tax_district]
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue]  WITH NOCHECK ADD  CONSTRAINT [fk_tsgv_account] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue] NOCHECK CONSTRAINT [fk_tsgv_account]
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue]  WITH NOCHECK ADD  CONSTRAINT [fk_tsgv_tax_district] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue] NOCHECK CONSTRAINT [fk_tsgv_tax_district]
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue]  WITH NOCHECK ADD  CONSTRAINT [fk_tsgv_tax_district_sa] FOREIGN KEY([tax_district_no])
REFERENCES [asr_datastore].[tax_district] ([tax_district_no])
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue] CHECK CONSTRAINT [fk_tsgv_tax_district_sa]
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue_state_assessed]  WITH NOCHECK ADD  CONSTRAINT [fk_tsgv_account_sa] FOREIGN KEY([account_no])
REFERENCES [asr_datastore].[account] ([account_no])
ON DELETE CASCADE
GO
ALTER TABLE [asr_datastore].[value_from_tsgvacctabstvalue_state_assessed] CHECK CONSTRAINT [fk_tsgv_account_sa]
GO
/****** Object:  StoredProcedure [asr_adv_search_query].[usp_create_flat_account]    Script Date: 10/15/2024 4:17:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



--EXEC [asr_adv_search_query].[usp_create_flat_account]

CREATE PROCEDURE [asr_adv_search_query].[usp_create_flat_account]
/**************************************Comments***************************************
**************************************************************************************
Mod #:  1
Mod Date:      2/11/2018
Developer:     Christine Lin
Comments:      create a table to store the result from the 
               [asr_adv_search_query].[v_flat_account] view for better query performance
Mod Date:      5/12/2021
Developer:     Christine Lin
Comments:	   renamed 'subdivision' to 'subdivision_name' 
               and 'filing' to 'filing_no'
*************************************************************************************/
AS
BEGIN
SET NOCOUNT ON;
SET ANSI_WARNINGS OFF;

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'asr_adv_search_query.flat_account') AND type = N'U')
  BEGIN
    SELECT 
       account_no
	 , state_parcel_no
	 , tax_district_no
	 , sub_filing_recording_no
	 , account_type
	 , appraisal_type
	 , account_status
	 , account_status_description
	 , legal_description
	 , longitude_x
	 , latitude_y
	 , location
	 , create_datetime
	 , create_user_id
	 , update_datetime
	 , update_user_id
	 , rowhash
	 , elevation_z
	 , bldg_permit_auth_id
	 , quarter
	 , section
	 , township
	 , range
	 , primary_owner_name
	 , primary_owner_address
	 , actual_value_sum
	 , assessed_value_sum
	 , net_acres_sum
	 , subdivision_name  --used to be subdivision
	 , filing_no -- used to be filing
	 , primary_property_unit_no
	 , primary_property_address_number
	 , primary_property_address_number_suffix
	 , primary_property_pre_direction_code
	 , primary_property_street_name
	 , primary_property_street_type_code
	 , primary_property_post_direction_code
	 , primary_property_city
	 , primary_property_zip_code
	 , lot
	 , tract
	 , block
	 , recording_nos
	 , tax_authority_nos	
	 , land_attributes 
    INTO asr_adv_search_query.flat_account
    FROM asr_adv_search_query.v_flat_account;

--create a primary key
    ALTER TABLE asr_adv_search_query.flat_account   
          ADD CONSTRAINT pk_flat_account PRIMARY KEY CLUSTERED (account_no);  
  END
ELSE
  BEGIN
    TRUNCATE TABLE asr_adv_search_query.flat_account;
    INSERT INTO asr_adv_search_query.flat_account
     (account_no
	 , state_parcel_no
	 , tax_district_no
	 , sub_filing_recording_no
	 , account_type
	 , appraisal_type
	 , account_status
	 , account_status_description
	 , legal_description
	 , longitude_x
	 , latitude_y
	 , location
	 , create_datetime
	 , create_user_id
	 , update_datetime
	 , update_user_id
	 , rowhash
	 , elevation_z
	 , bldg_permit_auth_id
	 , quarter
	 , section
	 , township
	 , range
	 , primary_owner_name
	 , primary_owner_address
	 , actual_value_sum
	 , assessed_value_sum
	 , net_acres_sum
	 , subdivision
	 , filing
	 , primary_property_unit_no
	 , primary_property_address_number
	 , primary_property_address_number_suffix
	 , primary_property_pre_direction_code
	 , primary_property_street_name
	 , primary_property_street_type_code
	 , primary_property_post_direction_code
	 , primary_property_city
	 , primary_property_zip_code
	 , lot
	 , tract
	 , block
	 , recording_nos
	 , tax_authority_nos
	 , land_attributes
	 )
    SELECT 
       account_no
	 , state_parcel_no
	 , tax_district_no
	 , sub_filing_recording_no
	 , account_type
	 , appraisal_type
	 , account_status
	 , account_status_description
	 , legal_description
	 , longitude_x
	 , latitude_y
	 , location
	 , create_datetime
	 , create_user_id
	 , update_datetime
	 , update_user_id
	 , rowhash
	 , elevation_z
	 , bldg_permit_auth_id
	 , quarter
	 , section
	 , township
	 , range
	 , primary_owner_name
	 , primary_owner_address
	 , actual_value_sum
	 , assessed_value_sum
	 , net_acres_sum
	 , subdivision_name  --used to be subdivision
	 , filing_no -- used to be filing
	 , primary_property_unit_no
	 , primary_property_address_number
	 , primary_property_address_number_suffix
	 , primary_property_pre_direction_code
	 , primary_property_street_name
	 , primary_property_street_type_code
	 , primary_property_post_direction_code
	 , primary_property_city
	 , primary_property_zip_code
	 , lot
	 , tract
	 , block
	 , recording_nos
	 , tax_authority_nos	
	 , land_attributes 
   FROM asr_adv_search_query.v_flat_account; 
  END
END



GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A twelve digit number assigned in accordance with a geographic location, consisting of numbers assigned to township, section, quarter­section, block and lot.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'state_parcel_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number used to identify a tax district. Tax Districts represent a unique combination of tax authorities.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'tax_district_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recording no that is assigned to the recorded subdivision plat for the filing. 

Recording number(aka reception number) is a number that is assigned by the Clerk and Recorder to a document at the time it is recorded. The Recording Number has replaced the Book and Page numbering system for recorded documents in Douglas County.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'sub_filing_recording_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Account type is grouping used by the Assessor’s Office to help classify a property by its use.  Examples are:
State Assessed
Residential
Commercial
HOA and so on.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'account_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Appraisal type indicates the type of appraisal for an account. Examples are:
Real
Personal
State Assessed
OilGas' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'appraisal_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of an account. Examples are A, I, and D.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'account_status'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of account  status. For example,  Active for A, Inactive for I, and Deleted for D.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'account_status_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of land that identifies the real estate according to a system established or approved by law; an exact description that enables the real estate to be located and identified.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'legal_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Latitude is the Y axis, longitude is the X axis' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'longitude_x'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Latitude is the Y axis, longitude is the X axis.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'latitude_y'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The (y, x) value pair of a location.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'location'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to store a generated hash value for the row. The hash value is used in detecting changes to a row.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account', @level2type=N'COLUMN',@level2name=N'rowhash'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Account is a vehicle used to manage ownership of properties.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_neighborhood', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Neighborhood is a group of complementary land uses; a congruous grouping of inhabitants, buildings, or business enterprises. Also, a code used to stratify accounts by similar use, location and quality.  A record is required for each different improvement property type on an account.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_neighborhood', @level2type=N'COLUMN',@level2name=N'neighborhood_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Property type describes the intended use of an improvement, such as Outbuilding, Condominium, or Residential.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_neighborhood', @level2type=N'COLUMN',@level2name=N'property_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Extension is used to further specify the comparability of properties beyod neighborhood_code.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_neighborhood', @level2type=N'COLUMN',@level2name=N'neighborhood_extension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique person identifierfrom the source system.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'person_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'One account could have multiple titled owners. 1 indicates a primary owner while 0 indicates non-primary owner.


' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'primary_owner_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the owner(s) as stated in the deed.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'owner_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percent of ownership this owner has over the property.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'ownership_percent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Federal identification number.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'federal_id_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The line 1 of a mailing address.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'address_line_1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The line 2 of a mailing address.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'address_line_2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of mailing city.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'city_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of state or province.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'state'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Zip code' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'zip_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The country where the mailing address belongs.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'country'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to store a generated hash value for the row. The hash value is used in detecting changes to a row.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'rowhash'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to indicate whether a person is peace officer or domestic violence related and requires special attention when consuming this information. 1 indicates yes, special attention is required while 0 indicates no, no special attention is needed.
' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address', @level2type=N'COLUMN',@level2name=N'private_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Titled owners are the complete owner names on the recorded deed of the property.
--
Title is a document, usually given to a home buyer with the deed, which states that the title to the property is believed to be clear; usually prepared by an attorney or another qualified person who has examined the abstract of title for the property.

The mailing address of a property(aka titled) owner, provided by that owner to the Assessor’s Office.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_owner_address'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The orderno describes the order in which property addresses are created. ' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'order_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'One account could have multiple property addresses. 1 indicates primary address while 0 indicates non-primary address. The first address (lowest orderno) on the account is designated as the primary address.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'primary_address_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Each building on a property is given a unique number, and all data pertaining to that improvement is associated with the number.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'building_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to identify the unit within a multiunit building. This would apply to both mulitunit residential and commercial buildings.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'unit_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unit designator describes a unit. For example, APT, UNIT, and STE (suite).' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'unit_designator'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The address number portion of an address. For example. 100 THIRD ST. 100 is the address number.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'address_number'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The suffix to an address number.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'address_number_suffix'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The predirectional to a street name. For example, S UNIVERSITY BLVD. S is the predirection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'pre_direction_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of a street.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'street_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of a street. For example 100 THIRD ST. ST is the street type.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'street_type_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The postdirectional to a street name. For example, INVERNESS DR WEST. WEST is the postdirection' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'post_direction_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the city where the situs address belongs.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'city_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Zip code.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'location_zip_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to store a generated hash value for the row. The hash value is used in detecting changes to a row.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address', @level2type=N'COLUMN',@level2name=N'rowhash'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Property address is also known as situs address. A situs address is a physical address that provides the textual description of a location for a structure or an improvement.In real estate, situs is the physical location of a property; in personal property, situs is the taxable location because personal property may be moved from one place to another.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'account_property_address'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for each improvement on a given account.  Once assigned to a building, this does not change.  Acts a key field for joining other improvement tables.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'improvement_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This is the percent complete of the building as of the assessment date of the given year.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'completed_percent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The quality rating of the building as assigned by appraisal staff.  Examples include:  Low, Fair, Average, Good, Very Good and Excellent.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'improvement_quality'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The linear measurement of the footprint of the building.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'improvement_perimeter'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total square footage of the building, including all Built As groups, excluding basements and mezzanines.  Othewise know as GLA or GBA.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'improvement_sf'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total leaseable size of the builiding in square foot.  Should be less than impsf.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'improvement_net_sf'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General description of how the building is designed and used.  Examples include:  Residential, Commercial, Mobile Home, Industrial, etc…' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'property_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Condition rating of the improvement, as of the assessment date.  Examples include:  Low, Fair, Average, Good, Very Good and Excellent.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'condition_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of general valuation methodology being used for the building.  Examples include:  Cost, Market, Income, etc…' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement', @level2type=N'COLUMN',@level2name=N'approach_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Anything done to raw land with the intention of increasing its value is an improvement. Improvements are physical structures built or placed on lands. Common examples are residential buildings, outbuildings and mobile homesThere is one record in this table per building, never less or more.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for each improvement on a given account.  Once assigned to a building, this does not change.  Acts a key field for joining other improvement tables.
' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'improvement_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An unique identifier for each improvement detail.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'improvement_detail_id'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to indicate the type of improvement details. Examples are:
AddOn, Plumbing, Garage, Carport, Porch/Deck, Appliance' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'improvement_detail_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description to describe the characteristics about the detail item of a given detail type. For example, with a detail type of basement, a detail description could be all of the following: walkout, finished, partial, Bsmnt Conc 8 ft, and so on. ' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'improvement_detail_type_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of unit for the detail item. For example, for the detail type of Garage and detail description of Attached, a number of unit of 672 means the attached garage is 672 SF. For the detail type of Applicance and a detail description of dishwasher, a number of unit of 1 means there is one dishwasher.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'detail_unit_count'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Addon codes are used to describe addons. Example of addons are:
hot tub
retaining wall
parking lot lighting
and so on' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'addon_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the addon code.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'addon_code_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The year the detail was put in place.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail', @level2type=N'COLUMN',@level2name=N'detail_built_year'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Improvement details are finishings built on the improvements. Things like AddOn, Plumbing, Garage, Carport, Porch/Deck, Appliance.


There are as many records in this table, per account and building, as there are detail items in Realware for that building.  Examples of detail items include decks, basements and garages.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'improvement_detail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'land_abstract', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'land_attribute', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Binary value indicating whether the parcel includes improvements or not, whether ythey are part of the account or not.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'vacant_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Binary value indicating whether the account includes an ownership in land.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'improvement_only_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Binary value indicating whether the parcel is included in a tax increment finance district.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'tif_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Abbreviated Zoning Code that applies to parcel.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'zoning_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of zoning_code.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'zoning_code_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Binary value indicating if the parcel has been platted.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'platted_flag'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Land Economic Area for the parcel.  Used for grouping similar lots in similar locations for mass appraisal purposes.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'default_lea'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of lea.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account', @level2type=N'COLUMN',@level2name=N'default_lea_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Physical real estate. In some states, real property is defined by statute and is synonymous with "real estate".' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'real_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This is the recording/reception no assigned to a recorded document in the Clerk and Recorder''s recording
system for the sale.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'recording_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person who transfers property by deed or grants property rights through a trust instrument or other document.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'grantor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person to whom property is transferred by deed or to whom property rights are granted by a trust instrument or other document.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'grantee'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date of the sale.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'sale_date'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code that is used to indicate the type of a recorded document.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'deed_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of deed code.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'deed_code_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The price of the sale.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale', @level2type=N'COLUMN',@level2name=N'sale_price'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Contain information related to legal documents recorded in the Clerk and Recorder''s office pertaining to a sale.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This is the recording/reception no assigned to a recorded document in the Clerk and Recorder''s recording
system for the sale.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_account', @level2type=N'COLUMN',@level2name=N'recording_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.

Accounts involved in a real estate transaction.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_account', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Accounts involved in real estate transactions.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Account type is grouping used by the Assessor’s Office to help classify a property by its use.  Examples are:
State Assessed
Residential
Commercial
HOA and so on.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'account_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'General description of how the building is designed and used.  Examples include:  Residential, Commercial, Mobile Home, Industrial, etc…' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'property_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Condition rating of the improvement, as of the assessment date.  Examples include:  Low, Fair, Average, Good, Very Good and Excellent.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'improvement_condition_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The quality rating of the building as assigned by appraisal staff.  Examples include:  Low, Fair, Average, Good, Very Good and Excellent.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'improvement_quality'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total square footage of the building, including all Built As groups, excluding basements and mezzanines.  Othewise know as GLA or GBA.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory', @level2type=N'COLUMN',@level2name=N'total_improvement_square_footage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sale_inventory_detail', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The recording no that is assigned to the recorded subdivision plat for the filing. 

Recording number(aka reception number) is a number that is assigned by the Clerk and Recorder to a document at the time it is recorded. The Recording Number has replaced the Book and Page numbering system for recorded documents in Douglas County.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'sub_filing_recording_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The five digits number assigned by Assessor'' s office to each subdivision. There will be a subdivision record created for metes and bounds parcels. For example, subdivision no 05040 is HIGHLANDS RANCH.

Subdivisions are pieces of land which are split through a specific process in order to create individiual lots that are smaller than 35-acres in size.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'subdivision_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This is the platted subdivision name. For example 05040 is HIGHLANDS RANCH' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'subdivision_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a subdivision is developed in phases, each phase will be assigned a filing no.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'filing_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An amendment is a change to the subdivision and/or filing. For example, there are originally 8 lots and the developer now wants 6 instead. He would do an amendment to replat the lots into 6 from the original 8.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'filing_description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name of the subdivison filing that is different from the platted name.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'dedicated_sub_filing_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to store a generated hash value for the row. The hash value is used in detecting changes to a row.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing', @level2type=N'COLUMN',@level2name=N'rowhash'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A subdivision filing is a group of parcels that exist as a sub-set of a larger subdivision.

Subdivisions may be one phase/filing, or many, such as is the case with Highlands Ranch. In subdivisions that have filings, the developer has decided to create the lots in phases, or groups, instead of creating all the lots at one time. This may be due to many reasons including the acreage involved, the infrastructure needed such as roads, available funding, etc.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'sub_filing'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number that identifies a taxing authority.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_authority', @level2type=N'COLUMN',@level2name=N'tax_authority_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of a tax authority.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_authority', @level2type=N'COLUMN',@level2name=N'tax_authority_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of tax authority. Some examples are County, School, Law Enforcement, City, and Metro District.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_authority', @level2type=N'COLUMN',@level2name=N'authority_type'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A Taxing Authority is a unit of government that levies taxes for operational expense. Each Tax Authority must hold public hearings on their proposed budget. The most common authorities are: Board of County Commissioners, School Districts, Municipalities, Water Management Districts, and Basin Boards.

There are over 200 different taxing authorities in Douglas County which affect various tax districts. They include the county commission, municipalities, school board, transit, water management, and fire districts. These different entities all have public hearings on budget requests for the forthcoming year.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number used to identify a tax district. Tax Districts represent a unique combination of tax authorities.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district', @level2type=N'COLUMN',@level2name=N'tax_district_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of a tax district' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district', @level2type=N'COLUMN',@level2name=N'tax_district_name'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tax districts are a political subdivision of one or more assessment districts where a governmental unit has the authority to levy taxes. This term is used synonymously with “Tax Area”.


in other words, Tax district means a geographical area made up of a unique mix of one or more taxing authorities, which is established for the purpose of properly calculating, collecting, and distributing taxes. Only one tax district will have the same combination
of taxing authoritys.
' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number used to identify a tax district. Tax Districts represent a unique combination of tax authorities.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district_authority', @level2type=N'COLUMN',@level2name=N'tax_district_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number that identifies a taxing authority.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district_authority', @level2type=N'COLUMN',@level2name=N'tax_authority_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Used to store tax authorities that make up tax districts for the target tax year.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'tax_district_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'value', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number used to identify a tax district. Tax Districts represent a unique combination of tax authorities.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'value', @level2type=N'COLUMN',@level2name=N'tax_district_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number assigned by the Assessor’s Office to identify a property for the purpose of value assessment and tax collection.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'value_from_tsgvacctabstvalue', @level2type=N'COLUMN',@level2name=N'account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A four digits number used to identify a tax district. Tax Districts represent a unique combination of tax authorities.' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'TABLE',@level1name=N'value_from_tsgvacctabstvalue', @level2type=N'COLUMN',@level2name=N'tax_district_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Filters the asr_datastore table to only active accounts by inner joining with v_building' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_style'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ba"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 286
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 324
               Bottom = 136
               Right = 556
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 41
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_style'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_style'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_style'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "bo"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 280
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 318
               Bottom = 136
               Right = 550
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 16
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_use'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_building_use'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[27] 4[3] 2[51] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 10
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_flat_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_flat_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "value_from_tsgvacctabstvalue (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 253
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_summed_values_by_class_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_summed_values_by_class_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "account_property_address (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 263
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_valid_property_zip_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_adv_search_query', @level1type=N'VIEW',@level1name=N'v_valid_property_zip_code'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[46] 4[6] 2[26] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "av"
            Begin Extent = 
               Top = 7
               Left = 48
               Bottom = 170
               Right = 360
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 175
               Left = 48
               Bottom = 338
               Right = 319
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
         Width = 1200
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_account_valuation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_account_valuation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[28] 4[4] 2[21] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "azure_important_dates (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 4920
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_azure_important_dates'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_azure_important_dates'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "i"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 255
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 293
               Bottom = 136
               Right = 525
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 16
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "iba"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 266
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 304
               Bottom = 136
               Right = 536
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_built_as'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_built_as'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "id"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 325
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 363
               Bottom = 136
               Right = 595
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_detail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_detail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "io"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 280
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 318
               Bottom = 136
               Right = 550
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_occupancy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_improvement_occupancy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "la"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 284
               Bottom = 136
               Right = 516
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_land_abstract'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_land_abstract'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "la"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 237
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 275
               Bottom = 136
               Right = 507
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_land_attribute'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_land_attribute'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "rn"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 272
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ac"
            Begin Extent = 
               Top = 6
               Left = 310
               Bottom = 136
               Right = 542
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 78
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
       ' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_realnov_old'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_realnov_old'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_realnov_old'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "sale (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 273
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "sa"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 254
               Bottom = 136
               Right = 486
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "si"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 341
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 379
               Bottom = 136
               Right = 611
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale_inventory'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_sale_inventory'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tax_authority (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_tax_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_tax_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[23] 4[5] 2[25] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 229
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 267
               Bottom = 136
               Right = 499
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_app_query', @level1type=N'VIEW',@level1name=N'v_value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'VIEW',@level1name=N'vw_PropertyFiling'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_datastore', @level1type=N'VIEW',@level1name=N'vw_PropertyFiling'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "tax_authority (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 247
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_ods2_query', @level1type=N'VIEW',@level1name=N'v_tax_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_ods2_query', @level1type=N'VIEW',@level1name=N'v_tax_authority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[27] 4[5] 2[40] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "account (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 270
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 16
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 6960
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_account'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[11] 4[2] 2[32] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "sale (asr_datastore)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 273
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 4275
         Width = 5910
         Width = 1935
         Width = 3315
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_sale'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 229
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 267
               Bottom = 85
               Right = 437
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 14
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'asr_spatialest_query', @level1type=N'VIEW',@level1name=N'v_value'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "v_flat_account (asr_adv_search_query)"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 343
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "account_number (asr_adv_search_query)"
            Begin Extent = 
               Top = 6
               Left = 381
               Bottom = 102
               Right = 551
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'v_flat_account_account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'v_flat_account_account_no'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "anon_1"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 85
               Right = 388
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "v_summed_values_by_class_code (asr_adv_search_query)"
            Begin Extent = 
               Top = 6
               Left = 426
               Bottom = 136
               Right = 689
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_TEST_VALUE_BY_CLASS_CODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'V_TEST_VALUE_BY_CLASS_CODE'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[41] 4[20] 2[11] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "imp"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 297
               Right = 255
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "impba"
            Begin Extent = 
               Top = 91
               Left = 603
               Bottom = 335
               Right = 851
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 32
         Width = 284
         Width = 1950
         Width = 3435
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2325
         Alias = 3600
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
 ' , @level0type=N'SCHEMA',@level0name=N'gis_ods_query', @level1type=N'VIEW',@level1name=N'v_imp_segment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'  End
End
' , @level0type=N'SCHEMA',@level0name=N'gis_ods_query', @level1type=N'VIEW',@level1name=N'v_imp_segment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'gis_ods_query', @level1type=N'VIEW',@level1name=N'v_imp_segment'
GO
USE [master]
GO
ALTER DATABASE [assessor_datastore] SET  READ_WRITE 
GO
